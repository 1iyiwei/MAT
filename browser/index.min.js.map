{"version":3,"sources":["index.min.js"],"names":["f","exports","module","define","amd","window","global","self","this","FloMat","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","default","./index","2","Object","defineProperty","value","mat_1","Mat","loop_1","Loop","curve_1","Curve","cp_node_1","CpNode","point_on_shape_1","PointOnShape","circle_1","Circle","contact_point_1","ContactPoint","bezier_piece_1","BezierPiece","x_1","X","smoothen_1","smoothen","find_mats_1","findMats","trim_mat_1","trimMat","to_scale_axis_1","toScaleAxis","traverse_edges_1","traverseEdges","traverse_vertices_1","traverseVertices","debug_1","MatDebug","svg_1","getPathsFromStr","cp_node_for_debugging_1","CpNodeForDebugging","get_closest_boundary_point_1","getClosestBoundaryPoint","closestPointOnBezier","Svg","./src/bezier-piece","./src/circle","./src/contact-point","./src/cp-node","./src/curve","./src/debug/cp-node-for-debugging","./src/debug/debug","./src/loop","./src/mat","./src/mat/find-mat/find-mats","./src/mat/get-closest-boundary-point","./src/mat/smoothen/smoothen","./src/mat/to-scale-axis/to-scale-axis","./src/mat/traverse-edges","./src/mat/traverse-vertices","./src/mat/trim-mat","./src/point-on-shape","./src/svg/svg","./src/x","3","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","sliceIterator","TypeError","flo_poly_1","Vector","flo_memoize_1","flo_gauss_quadrature_1","flo_graham_scan_1","get_x_1","getX","get_y_1","getY","get_dx_1","getDx","get_dy_1","getDy","evaluate_x_1","evaluateX","evaluate_y_1","evaluateY","evaluate_1","evaluate","evaluate_dx_1","evaluateDx","evaluate_dy_1","evaluateDy","tangent_1","tangent","normal_1","normal","from_0_to_T_1","from0ToT","from_T_to_1_1","fromTTo1","from_to_1","fromTo","to_hybrid_quadratic_1","toHybridQuadratic","coincident_1","coincident","line_intersection_1","lineIntersection","bezier3_intersection_1","bezier3Intersection","bezier3_intersection_sylvester_1","bezier3IntersectionSylvester","ts_at_x_1","tsAtX","ts_at_y_1","tsAtY","BezDebug","fat_line_1","FatLine","de_casteljau_1","deCasteljau","eval_de_casteljau_1","evalDeCasteljau","rotate","rotatePs","translate","translatePs","memoize","m1","getDdx","ps","differentiate","getDdy","getDddx","getDddy","getBoundingHull","κ","evDx","evDy","evDdx","evaluateDdx","evDdy","evaluateDdy","dx","dy","ddx","Math","sqrt","pow","fromLine","_l","_l$","x0","y0","_l$2","x1","y1","xInterval","yInterval","curvature","κds","len","interval","_ps3","_ps3$","_ps3$2","_ps3$3","x2","y2","_ps3$4","x3","y3","evDs","ds","ddPs","dκMod","_ps2","_ps2$","_ps2$2","_ps2$3","_ps2$4","ts","omt","c","d","g","h","j","totalCurvature","totalAbsoluteCurvature","arguments","abs","getTAtLength","lenAtT","brent","evaluateDddx","dddPs","evaluateDddy","getBoundingBoxTight","_ps4","_ps4$","_ps4$2","_ps4$3","_ps4$4","baseLength","sinθ","cosθ","box","vectorToOrigin","transform","x","boundingPs","translateThenRotatePs","getBoundingBox","getNormalizedBoundingBox","_box","_box$","p0x","p0y","_box$2","p1x","p1y","axisAlignedBox","rotateThenTranslatePs","getBounds","roots","map","poly","allRoots","minX","Number","POSITIVE_INFINITY","maxX","NEGATIVE_INFINITY","minY","maxY","tMinX","tMinY","tMaxX","tMaxY","_t","y","evaluateLinear","_ps8","_ps8$","_ps8$2","evaluateQuadratic","_ps10","_ps10$","_ps10$2","_ps10$3","splitAt","_ps5","_ps5$","_ps5$2","_ps5$3","_ps5$4","t2","t3","s2","s3","ps1","bezierFromBezierPiece","tRange","p","scale","toQuadratic","_ps7","_ps7$","_ps7$2","_ps7$3","_ps7$4","evaluateHybridQuadratic","hq","th","P0","P2","clone","_ps9","_ps9$","_ps9$2","_ps9$3","_ps9$4","toCubic","_ps11","_ps11$","_ps11$2","_ps11$3","reverse","slice","equal","psA","psB","_psA","_psA$","ax0","ay0","_psA$2","ax1","ay1","_psA$3","ax2","ay2","_psA$4","ax3","ay3","_psB","_psB$","bx0","by0","_psB$2","bx1","by1","_psB$3","bx2","by2","_psB$4","bx3","by3","./src/bezier3-intersection-sylvester/bezier3-intersection-sylvester","./src/bezier3-intersection/bezier3-intersection","./src/coincident","./src/de-casteljau","./src/debug/fat-line","./src/eval-de-casteljau","./src/evaluate","./src/evaluate-dx","./src/evaluate-dy","./src/evaluate-x","./src/evaluate-y","./src/from-0-to-T","./src/from-T-to-1","./src/from-to","./src/get-dx","./src/get-dy","./src/get-x","./src/get-y","./src/line-intersection","./src/normal","./src/tangent","./src/to-hybrid-quadratic","./src/ts-at-x","./src/ts-at-y","flo-gauss-quadrature","flo-graham-scan","flo-memoize","flo-poly","flo-vector2d","4","flo_vector2d_1","DELTA","ps2","_ps1$","rotatedPs1","rotatedPs2","tanθ","tanθ2","_get_x_1$getX","_get_x_1$getX2","c_3x","c_2x","c_1x","c_0x","_get_y_1$getY","_get_y_1$getY2","c_3y","c_2y","c_1y","c_0y","_get_x_1$getX3","_get_x_1$getX4","d_3x","d_2x","d_1x","_get_y_1$getY3","_get_y_1$getY4","d_3y","d_2y","d_1y","d_0y","Δy","a2","b2","c2","d2","e2","f2","m2","n2","p2","q2","r2","Δy2","c3","d3","e3","f3","Δy3","dΔy","dΔy2","bdΔy","bdΔy2","cΔy","cΔy2","bΔy","bΔy2","tPairs","k","_k","_k2","ps1k","xx","subtract","yy","rootsx","rootsy","rootx","rooty","tk","../get-x","../get-y","5","get_distance_to_line_function_1","calc_other_t_1","geo_clip_1","center_1","δ","Δ","δMin","EPSILON","max","flip","tss","_bez_debug_","generated","elems","beziers","fatLine","stack","tRange1","tRange2","idx","toCheck","pop","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","intersection","return","Q_","P_","qRange","pRange","cidx","_center_1$center","center","_center_1$center2","dMin","dMax","_Q_2","Q0","Q3","dQ","getDistanceToLineFunction","_map","_map2","dQ1","dQ2","C","min","_geo_clip_1$geoClip","geoClip","tMin","tMax","pSpan","qSpan","_ref","_ref2","_span","tMinA","tMaxA","tMinB","tMaxB","A","B","span","tMin_","tMax_","t1","_pq","calcOtherT","_ts","../coincident","../debug/fat-line","../evaluate","../from-to","./calc-other-t","./center","./geo-clip","./get-distance-to-line-function","6","_toConsumableArray","arr2","from","P","Q","pp","_pp","tqsh","tqsv","tqs","concat","bestT","bestD","tq","pq","squaredDistanceBetween","maxTolerance","../ts-at-x","../ts-at-y","7","_P2","P1","P3","_Q2","Q1","Q2","lengthP","lengthQ","moveX","moveY","8","dH0","dH2","dH10","dH11","dHmin","dHmax","DyMin","DyMax","errorBound","hornerErrorBound","DyMinMin","DyMinMax","DyMaxMin","DyMaxMax","rootsMinMin","rootsMinMax","rootsMaxMin","rootsMaxMax","apply","../to-hybrid-quadratic","9","get_line_equation_1","_get_line_equation_1$","getLineEquation","_get_line_equation_1$2","b","./get-line-equation","10","11","calcPointAndNeighbor","pp1","normalVector","pp2","bestQ","q","distanceBetween","PtoQs","QtoPs","tStartQ","tEndQ","tStartP","tEndP","tSpanP","./evaluate","./line-intersection","./normal","12","cs","t_","b00","b10","b20","b30","b01","b11","b21","b02","b12","b03","13","draw_elem_1","draw","instance","Constructor","_classCallCheck","looseBoundingBox","tightBoundingBox","extreme","boundingHull","fs","drawElem","drawElemFunctions","./draw-elem/draw-elem","14","$bezier1","bezier","$bezier2","size","width","height","getSize","$dots","dot","crossHair","hull","polygon","rect","minD","maxD","lp1","lp2","E","lv","lvTimes10","reverseLvTimes10","normMin","toLength","normMax","extLp1","extLp2","nl1","nl2","$line1","line","$line2","15","16","_ps","_ps$","_ps$2","_ps$3","_ps$4","evX","evY","./de-casteljau","17","dPs","./get-dx","18","./get-dy","19","xPs","evPs","./get-x","20","yPs","./get-y","21","./evaluate-x","./evaluate-y","22","xs","ys","_de_casteljau_1$deCas","x0_","x1_","x2_","x3_","_de_casteljau_1$deCas2","23","24","./from-0-to-T","./from-T-to-1","25","26","27","28","29","30","tanPs","v","./tangent","31","./evaluate-dx","./evaluate-dy","32","33","34","35","GAUSS_CONSTANTS","weights","abscissas","order","_GAUSS_CONSTANTS$orde","_interval","result","36","swap","temp","ps_","includeAllBoundaryPoints","delta","fail","p1","p3","res","ccw","smallestI","smallest","getSmallestIndxYThenX","splice","indxArray","sort","sorted","stableSort","cross","unshift","m","37","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","tree_node_1","tree_node_color_1","tree_node_direction_1","isRed","node","color","RED","LlRbTree","compare","datas","replaceDups","getMinNode","getMinOrMaxNode","LEFT","getMaxNode","RIGHT","setComparator","root","data","insert","nodes","tree","dir","parent","flipColors","BLACK","all","removeFromArray","moveRedLeft","fixUp","moveRedRight","removeMin","bounds","elem","index","indexOf","otherDir","flipColor","./src/tree-node","./src/tree-node-color","./src/tree-node-direction","38","TreeNodeColor","39","TreeNodeDirection","40","TreeNode","asArray","./tree-node-color","41","SUPPORTED","WeakMap","Memoize","results","get","set","42","core_operators_1","root_operators_1","root_bounds_1","all_roots_recursive_1","random_1","error_analysis_1","from_roots_1","FloPoly","multiply","assign","random","fromRoots","./src/all-roots-recursive","./src/core-operators","./src/error-analysis","./src/from-roots","./src/random","./src/root-bounds","./src/root-operators","43","_core_operators_1$def","clip0","_root_operators_1$def","toCasStr","quadraticRoots","_root_bounds_1$defaul","positiveRootUpperBound_LMQ","rootMagnitudeUpperBound_fujiwara","negativeRootLowerBound_LMQ","positiveRootLowerBound_LMQ","negativeRootUpperBound_LMQ","INF","rangeFilter","inRange","filter","lowerBound","upperBound","intervals","peval","prevRoot","evA","evB","rootsWithin","./core-operators","./root-bounds","./root-operators","44","d1","Δd","Δd1","Δd2","c1","fill","multiplyByConst","maxCoefficient","coreOperators","add","negate","degree","evaluateAt0","signChanges","prevSign","sign","invert","changeVariables","_i2","_j","acc","reflectAboutYAxis","sturmChain","negRemainder","pnext","shift","clip","p_","deflate","bs","str","cStr","toString","45","errorAnalysis","conditionNumber","46","47","SEED","RANGE","createArrFunction","seed","odds","predictiveRandom","randomArray","vs","values","flatRoots","randArr","flatCoefficients","flatRootsArr","flatCoefficientsArr","./from-roots","48","maxAbs","ns","POWERS","deg","timesUsed","ub","tempub","any","powres","rootBounds","an","rootMagnitudeUpperBound_rouche","49","rootOperators","_p","root1","root2","numRootsWithin","as","fa","fb","mflag","fc","fac","fab","fbc","b_c","s_b","c_d","_temp","bisection","50","lengthSquared","det3","z","segSegIntersection","ab","cd","_ab","_cd","denom","rNumer","sNumer","doesSegSegIntersect","factor","toUnitVector","scaleFactor","interpolate","mean","manhattanDistanceBetween","manhattanLength","distanceBetweenPointAndLine","squaredDistanceBetweenPointAndLineSegment","sqDst","w","l2","circumCenter","triangle","sqLen","Sx","Sy","inCenter","dst","l1","l3","lengthSum","centroid","p0","_p2","_p3","_p4","us","hUs","specialMapCurry","rotateByθ","reverseRotate","rotate90Degrees","rotateNeg90Degrees","getClosestTo","closestPoint","closestDistance","getObjClosestTo","closestObj","51","curve","52","EVENT_LEFT","EVENT_RIGHT","Event","type","areBoxesIntersecting","_a","a0","a1","_b","b0","b1","boxes","events","smallerSide","largerSide","activeBoxes","Set","intersections","event","activeBox","box1","box2","delete","53","radius","circle","dr","54","pointOnShape","order2","./point-on-shape","55","EDGES","cp","isHoleClosing","isIntersection","prev","prevOnCircle","nextOnCircle","matCurve","nodeMap","Map","newCpNode","cpStack","cpNode","_cpStack$pop","_cpNode","_newCpNode","edge","newNode","cpTree","remove","cps","isSharp","isThreeProng","cp2","getNodes","prev_","_debug_","comparator","./contact-point","./debug/cp-node-for-debugging","56","flo_bezier3_1","loop","_getCornerAtEnd","tans","crossTangents","isDull","isQuiteSharp","isQuiteDull","flo-bezier3","57","58","Bezier3","general_1","two_prong_1","three_prong_1","Generated","path","twoProng_regular","twoProng_failed","twoProng_notAdded","twoProng_deleted","twoProng_holeClosing","oneProng","oneProngAtDullCorner","sharpCorner","dullCorner","threeProng","mat","sat","loops","maxVertex","leaves","culls","timing","simplify","holeClosers","oneAnd2Prongs","threeProngs","mats","sats","generatedAll","Vector2d","directives","stopAfterHoleClosers","stopAfterHoleClosersNum","stopAfterTwoProngs","stopAfterTwoProngsNum","stopAfterThreeProngs","generalDebugFunctions","twoProng","twoProngDebugFunctions","threeProngDebugFunctions","../svg/svg","./functions/draw-elem/draw-elem","./functions/general","./functions/three-prong","./functions/two-prong","59","style","60","drawCircle","radiusPercent","classes","$circle","document","createElementNS","setAttributeNS","appendChild","$elems","61","drawCirclePercent","62","one_prong_1","vertex_1","min_y_1","bounding_hull_1","loose_bounding_box_1","tight_bounding_box_1","sharp_corner_1","dull_corner_1","loops_1","max_vertex_1","leaves_1","culls_1","intersection_1","one_prong_at_dull_corner_1","vertex","./bounding-hull","./culls","./dull-corner","./intersection","./leaves","./loop","./loops","./loose-bounding-box","./mat","./max-vertex","./min-y","./one-prong","./one-prong-at-dull-corner","./sharp-corner","./three-prong","./tight-bounding-box","./two-prong","./vertex","63","pos","64","draw_circle_percent_1","./draw-circle-percent","65","66","67","68","69","smooth","$svgs","isTerminating","quadBezier","../../../mat/traverse-edges","70","71","72","oCircle","getOsculatingCircle","$center","$pos","../../../point-on-shape","73","../../../circle","74","75","poss","$cp1","$cp2","$cp3","76","77","get_two_prong_type_1","$failedDot","thin","getTwoProngType","failed","../../../mat/get-two-prong-type","78","visible","displayDelay","visibleClass","console","log","$crossHair","_$svgs","_$svgs2","edgeCircle","_$circle","_$crossHair","$line","79","δToString","cpNodes","toHumanString","pointToStr","decimalPlaces","toFixed","δsToString","pointsToStr","nameObj","pre","name","../../point-on-shape","80","drawSpokes","cc","traceConvergence","n_","sIndx","eIndx","forDebugging","candidateThreeProngs","startIndx","endIndx","bestIndx","showBoundary","debugInfo","cpss","_idx","δ3s","δS","δE","posS","posE","pS","pE","logδs","logNearest","closestPerLoops","forEach","circle2","boundaries","boundaryS","boundaryE","boundary","traces","trace","polyline","../../circle","81","finalOnly","range","twoProngInfo","drawNormal","logδ","twoProngs","logδBasic","bez","circle_","82","ThreeProngForDebugging","../point-on-shape","83","TwoProngForDebugging","bezierPieces","holeClosing","notAdded","deleted","84","items","curves","head","newItems","rand1","rs","newPs","_prev","last","./curve","85","cpTrees","86","get_neighboring_cps_1","addToCpGraph","orders","neighbors","newCps","newCp_","neighboringCp","getNeighbouringPoints","indxPrev","indxNext","../contact-point","../cp-node","./get-neighboring-cps","87","flo_ll_rb_tree_1","createNewCpTree","newCpTrees","./traverse-edges","flo-ll-rb-tree","88","add_to_cp_graph_1","is_another_cp_closeby_1","add1Prong","maxOsculatingCircleRadius","cpGraphs","isDullCorner","calcOrder","isAnotherCpCloseby","../add-to-cp-graph","../is-another-cp-closeby","89","add2Prong","posSource","posAntipode","orderSource","orderAntipode","t_s","cpAntipode","loopAntipode","cpTreeAntipode","deltaAntipode","newCpAntipode","cpSource","loopSource","cpTreeSource","deltaSource","newCpSource","cpB2","newCpB2Node","cpB1","newCpB1Node","../../contact-point","../../cp-node","../get-neighboring-cps","90","add3Prong","91","addDebugInfo1","_generated$elems$loop","performance","now","_loop2","_loop","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","addDebugInfo2","pointOnShapeArrPerLoop","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","pointsOnShape","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","isSharpCorner","addDebugInfo3","addDebugInfo4","92","get_contact_circles_at_interface_1","get_bezier_curvature_extrema_1","createGetInterestingPointsOnLoop","additionalPointCount","allPoints","_get_bezier_curvature","getBezierCurvatureExtrema","maxCurvaturePoss","maxNegativeCurvaturePoss","getContactCirclesAtInterface","../get-bezier-curvature-extrema","../get-contact-circles-at-interface","93","createInitialCpGraph","sharpCornerss","xMap","sharpCorners","cpNode1","cpNode2","cp1","94","two_prong_for_debugging_1","addDebugInfo","twoProngType","../../../debug/two-prong-for-debugging","../../get-two-prong-type","95","get_closest_square_distance_to_rect_1","cullBezierPieces","rSquared","newPieces","bezierPiece","getClosestSquareDistanceToRect","../../geometry/get-closest-square-distance-to-rect","96","line_line_intersection_1","add_1_prong_1","add_debug_info_1","cull_bezier_pieces_1","find_equidistant_point_on_line_1","get_initial_bezier_pieces_1","getCircleCenterFrom2PointsAndNormal","TOLERANCE","pb","pb2","lineLineIntersection","resO","xO","find2Prong","squaredDiagonalLength","squaredSeperationTolerance","oneProngTolerance","squaredErrorTolerance","maxOsculatingCircleRadiusSquared","_get_initial_bezier_p","getInitialBezierPieces","r_","prevP","minRadius","ev","r1","cc1","cc2","reduceRadius","bezierPieces_","_r","elemStr","_elems","_elem","nextX","findEquidistantPointOnLine","squaredError","../../geometry/line-line-intersection","../../get-closest-boundary-point","../add-1-prong","./add-debug-info","./cull-bezier-pieces","./find-equidistant-point-on-line","./get-initial-bezier-pieces","97","swapAxes","z1","z2","98","get_boundary_piece_beziers_1","k2","_bezierPieces","pieces","getBoundaryPieceBeziers","../../../bezier-piece","../../get-boundary-piece-beziers","../../get-neighboring-cps","99","get_closest_points_1","calcBetterX","bezierPiece3s","vectorToZeroV","V","nu","better","newX","newV","getClosestPoints","newCircleCenter","newVectorToZeroV","./get-closest-points","100","calcInitial3ProngCenter","twoProngCircleCenter","meanPoints","101","calc_initial_3_prong_center_1","calc_better_x_1","calcVectorToZeroV_StraightToIt","find3ProngForDelta3s","δs","bezierPiecess","δs_","circumCenter_","tolerance","isFinite","upds","_threeProngs","totalAngleError","v1","perps","getCornerAtEnd","angleError1","asin","angleError2","angleError","v2","closestDs","closestD","error","../../../curve","./calc-better-x","./calc-initial-3-prong-center","102","three_prong_for_debugging_1","find_3_prong_for_delta3s_1","find3Prong","smallestError","threeProngInfo","_threeProngs2","_d2","cp3ss","../../../debug/three-prong-for-debugging","./find-3-prong-for-delta3s","103","104","find_and_add_2_prongs_1","findAndAdd2ProngsOnAllPaths","for2Prongss","for2Prongs","findAndAdd2Prongs","./find-and-add-2-prongs","105","find_2_prong_1","add_2_prong_1","indexLinear","cpNode_","getShapeBounds","_twoProngInfo","../../svg/svg","./add-2-prong","./find-2-prong/find-2-prong","106","find_3_prong_1","add_3_prong_1","markEdgeAsTaken","visitedEdges","visited","hasEdgeBeenTaken","takenForward","has","takenBackwards","traverseShape","cpStart","visitedCps","findAndAdd3Prongs","findAndAdd3Prong","visitedCp","add3ProngDebugInfo","findAndAddAll3Prongs","edgesToCheck","fromCpNode","_edgesToCheck$shift","_cpStart","../find-mat/add-3-prong","./find-3-prong/find-3-prong","107","findAndAddHoleClosing2Prongs","minYs","getMinYPos","holeClosingTwoProng","108","get_loop_bounds_1","simplify_paths_1","find_and_add_3_prongs_1","create_initial_cp_graph_1","get_potential_2_prongs_1","create_get_interesting_points_on_loop_1","get_sharp_corners_1","get_extreme_1","find_and_add_2_prongs_on_all_paths_1","find_and_add_hole_closing_2_prongs_1","findPartialMat","getExtreme","pointsPerLoop","for2ProngsPerLoop","getPotential2Prongs","sharpCornersPerLoop","getSharpCorners","ascendingByTopmostPoint","loopA","loopB","boundsA","getLoopBounds","boundsB","_simplify_paths_1$sim","simplifyPaths","loopss","_timing","_loops","../../mat","../../svg/fs/get-extreme","../../svg/fs/get-loop-bounds","../../svg/fs/simplify-paths/simplify-paths","../find-mat/add-debug-info","../find-mat/create-initial-cp-graph","../find-mat/find-and-add-3-prongs","../find-mat/get-potential-2-prongs","../find-mat/get-sharp-corners","../smoothen/smoothen","./create-get-interesting-points-on-loop","./find-and-add-2-prongs-on-all-paths","./find-and-add-hole-closing-2-prongs","109","possPerLoop","for2ProngsArray","isQuiteSharpCorner","110","111","xp","yp","_d3","112","getClosestSquaredDistanceToRotatedRect","113","p2x","p2y","_l2","_l2$","p3x","p3y","_l2$2","v1x","v1y","v2x","v2y","114","clipBoundary","_range","calcBezierCurvatureExtremaBrackets","brackets","P_1x","P_1y","P_2x","P_2y","P_3x","P_3y","W_0x","W_1x","W_2x","W_0y","W_1y","W_2y","atan_numer","atan_denom","atan_numer_squared","atan_denom_squared","rad","cos_theta","sin_theta","R_1x","R_1y","R_2x","R_2y","R_3x","dif","μ","λ","γ2","deParamBoundary","σ","deParameterize","deParameterizeBoundary","ssigd_","sda","sdb","ξ1_","ξ2_","ξ1","ξ2","115","get_bezier_curvature_extrema_brackets_1","lookForRoot","minsd","maxsd","dκMod_","κPs","lenb","bracket","κ_","κAtMinsd","κAtMaxsd","./get-bezier-curvature-extrema-brackets","116","addSkippedBeziers","curveStart","curveEnd","curveThis","tEnd","cpThis","cpEnd","goStraight","posThis","posNext","../bezier-piece","117","get_closest_squared_distance_to_rotated_rect_1","touchedCurve","_curve$ps","_curve$ps$","_curve$ps$2","_curve$ps$3","_curve$ps$4","xx0","xx1","xx2","xx3","yy0","yy1","yy2","yy3","x00","x01","x02","x03","x11","x12","x13","x22","x23","y00","y01","y02","y03","y11","y12","y13","y22","y23","push0","push1","point","bestSquaredDistance","getBestDistanceSquared","candidateBezierPieces","cullByTightBoundingBox","dSquared","boundingBox","cullByLooseBoundingBox","bestDistance","./geometry/get-closest-square-distance-to-rect","./geometry/get-closest-squared-distance-to-rotated-rect","118","_curve_1$Curve$getCor","../curve","119","getLargestVertex","reduce","maxCpNode","120","getLeaves","isLeaf","121","findBounds","122","123","ANGLE_THRESHOLD","DISTANCE_THRESHOLD","pos2","124","getEdgeDirection","circleCenter","pos1","vDir","curve1","curve2","tan1","tan2","125","get_edge_direction_1","TOLERANCE_ADD_2PRONG","TOLERANCE_USE_LINE","fromCc","fromL","toCc","toL","mid","twisted","w1","w2","mid1","mid2","../geometry/line-line-intersection","../traverse-edges","./get-edge-direction","126","127","get_leaves_1","cullNonCycles","cpNodeKept","leaf","cut","../get-leaves","128","cull","129","get_largest_vertex_1","cull_1","create_new_cp_tree_1","rMap","R","../create-new-cp-tree","../get-largest-vertex","../traverse-vertices","./cull","130","inclLeaves","131","returnFirst","132","cull_non_cycles_1","../mat","./create-new-cp-tree","./smoothen/smoothen","./to-scale-axis/cull-non-cycles","133","calcOsculatingCircleRadius","normal_","corner","getCorner","compareInclOrder","aOrder","bOrder","isQuiteDullCorner","./circle","134","beziersToSvgPathStr","D","135","circleToCubicBeziers","clockwise","pss","136","dePathologify","137","push_bezier_1","path_state_1","z_1","c_1","s_1","l_1","h_1","v_1","q_1","t_1","pathFs","getBeziersFromRawPaths","paths","toLowerCase","PathState","beziersArrays","prevType","pathSeg","vals","pushBezier","initialPoint","../fs/push-bezier","../path-segment/a","../path-segment/c","../path-segment/h","../path-segment/l","../path-segment/q","../path-segment/s","../path-segment/t","../path-segment/v","../path-segment/z","../path-state","138","getCurvatureAtInterface","θ","PI","acos","139","get_shape_bounds_1","./get-shape-bounds","140","extremes","val","141","./get-loop-bounds","142","get_beziers_from_raw_paths_1","parse_path_data_string_1","parsePathDataString","../../loop","../path-data-polyfill/parse-path-data-string","./get-beziers-from-raw-paths","143","get_paths_from_str_1","getPathsFromSvgPathElem","getAttribute","./get-paths-from-str","144","minX_","maxX_","minY_","maxY_","getShapesBounds","145","isAlmostZeroLength","146","isPathPositivelyOrientated","bezierLoop","tan","psNext","tanNext","147","de_pathologify_1","is_almost_zero_length_1","RESOLUTION","./de-pathologify","./is-almost-zero-length","148","get_next_x_1","addXOutPs","reversed","fromX","isDummy","opposite","outPs","completeLoop","takenXs","xStack","loopTree","windingNum","orientation","startBez","startT","curBez","curT","wasOnX","x_","getNextX","_x_","./get-next-x","149","complete_loop_1","get_initial_x_1","get_loop_metrics_1","completePath","loopsTaken","initialX","getInitialX","getLoopMetrics","../../../loop","./complete-loop","./get-initial-x","./get-loop-metrics","150","is_path_positively_oriented_1","dummyLoop","children","../../../x","../../fs/is-path-positively-oriented","../get-loop-bounds","151","pair_set_1","find_bb_intersections_1","confirmIntersection","checkedPairs","tPair","curves_","pairSet_has","getIntersections","_getBoxInfos","boxInfoMap","getBoxInfos","boxIntersections","_boxIntersections$i","pairSet_add","curveXs","../../../bounding-box/find-bb-intersections","./pair-set","152","oppositeLoopTree","oppositeOrientation","oppositeWindingNum","oldInBez","oldOutBez","tanIn","tanOut","isLeft","isTwist","iLoopTree","153","forwards","bestX","deltaT","getThisX","154","is_loop_in_loop_1","getTightestContainingLoop","containingLoop","isLoopInLoop","child","./is-loop-in-loop","155","_typeof","obj","constructor","curveCount","rand2","floor","boundss","loopBound","isLoopNotInLoop","possAll","_flo_bezier3_1$getBou","_flo_bezier3_1$getBou2","_flo_bezier3_1$getBou3","_flo_bezier3_1$getBou4","notIntersecting","offset","axis","dirIsDecreasing","translatedPs","ts_","_ret","getAxisAlignedRayLoopIntersections","156","has1","has2","pairSet_asArray","map_","157","get_intersections_1","complete_path_1","get_tightest_containing_loop_1","ILoopToLoop","iLoop","getLoopsFromTree","loopTrees","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","iLoopTrees","nodeStack","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","splitLoopTrees","loopSet","./complete-path","./get-intersections","./get-tightest-containing-loop","158","parseNumber","source","exponent","integer","frac","decimal","expsign","startIndex","_currentIndex","_skipOptionalSpaces","_endIndex","_string","startIntPartIndex","scanIntPartIndex","multiplier","charAt","number","_skipOptionalSpacesOrDelimiter","159","source_1","string","Source","pathData","initialCommandIsMoveTo","hasMoreData","parseSegment","./source","160","parse_number_1","COMMAND_MAP","Z","M","L","H","S","T","_prevCommand","char","command","cmd","toUpperCase","_parseArcFlag","peekSegmentType","_isCurrentSpace","flag","flagChar","./parse-number","161","prev2ndCubicControlPoint","prev2ndQuadraticControlPoint","162","163","164","165","QP0","QP1","QP2","CP3","166","167","168","169","170","171","get_min_y_pos_1","get_paths_from_svg_path_elem_1","get_curvature_at_interface_1","circle_to_cubic_beziers_1","beziers_to_svg_path_str_1","./fs/beziers-to-svg-path-str","./fs/circle-to-cubic-beziers","./fs/get-curvature-at-interface","./fs/get-loop-bounds","./fs/get-min-y-pos","./fs/get-paths-from-str","./fs/get-paths-from-svg-path-elem","./fs/get-shape-bounds","./fs/is-path-positively-oriented","./fs/simplify-paths/simplify-paths","172"],"mappings":"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","file":"index.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.FloMat = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n'use strict';\n\nmodule.exports = _dereq_(\"./index\").default;\n\n},{\"./index\":2}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mat_1 = _dereq_(\"./src/mat\");\nexports.Mat = mat_1.Mat;\nvar loop_1 = _dereq_(\"./src/loop\");\nexports.Loop = loop_1.Loop;\nvar curve_1 = _dereq_(\"./src/curve\");\nexports.Curve = curve_1.Curve;\nvar cp_node_1 = _dereq_(\"./src/cp-node\");\nexports.CpNode = cp_node_1.CpNode;\nvar point_on_shape_1 = _dereq_(\"./src/point-on-shape\");\nexports.PointOnShape = point_on_shape_1.PointOnShape;\nvar circle_1 = _dereq_(\"./src/circle\");\nexports.Circle = circle_1.Circle;\nvar contact_point_1 = _dereq_(\"./src/contact-point\");\nexports.ContactPoint = contact_point_1.ContactPoint;\nvar bezier_piece_1 = _dereq_(\"./src/bezier-piece\");\nexports.BezierPiece = bezier_piece_1.BezierPiece;\nvar x_1 = _dereq_(\"./src/x\");\nexports.X = x_1.X;\nvar smoothen_1 = _dereq_(\"./src/mat/smoothen/smoothen\");\nexports.smoothen = smoothen_1.smoothen;\nvar find_mats_1 = _dereq_(\"./src/mat/find-mat/find-mats\");\nexports.findMats = find_mats_1.findMats;\nvar trim_mat_1 = _dereq_(\"./src/mat/trim-mat\");\nexports.trimMat = trim_mat_1.trimMat;\nvar to_scale_axis_1 = _dereq_(\"./src/mat/to-scale-axis/to-scale-axis\");\nexports.toScaleAxis = to_scale_axis_1.toScaleAxis;\nvar traverse_edges_1 = _dereq_(\"./src/mat/traverse-edges\");\nexports.traverseEdges = traverse_edges_1.traverseEdges;\nvar traverse_vertices_1 = _dereq_(\"./src/mat/traverse-vertices\");\nexports.traverseVertices = traverse_vertices_1.traverseVertices;\nvar debug_1 = _dereq_(\"./src/debug/debug\");\nexports.MatDebug = debug_1.MatDebug;\nvar svg_1 = _dereq_(\"./src/svg/svg\");\nexports.getPathsFromStr = svg_1.getPathsFromStr;\nvar cp_node_for_debugging_1 = _dereq_(\"./src/debug/cp-node-for-debugging\");\nexports.CpNodeForDebugging = cp_node_for_debugging_1.CpNodeForDebugging;\nvar get_closest_boundary_point_1 = _dereq_(\"./src/mat/get-closest-boundary-point\");\nexports.getClosestBoundaryPoint = get_closest_boundary_point_1.getClosestBoundaryPoint;\nexports.closestPointOnBezier = get_closest_boundary_point_1.closestPointOnBezier;\nvar Svg = _dereq_(\"./src/svg/svg\");\nexports.Svg = Svg;\n\n},{\"./src/bezier-piece\":51,\"./src/circle\":53,\"./src/contact-point\":54,\"./src/cp-node\":55,\"./src/curve\":56,\"./src/debug/cp-node-for-debugging\":57,\"./src/debug/debug\":58,\"./src/loop\":84,\"./src/mat\":85,\"./src/mat/find-mat/find-mats\":108,\"./src/mat/get-closest-boundary-point\":117,\"./src/mat/smoothen/smoothen\":125,\"./src/mat/to-scale-axis/to-scale-axis\":129,\"./src/mat/traverse-edges\":130,\"./src/mat/traverse-vertices\":131,\"./src/mat/trim-mat\":132,\"./src/point-on-shape\":133,\"./src/svg/svg\":171,\"./src/x\":172}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar Vector = _dereq_(\"flo-vector2d\");\nvar flo_memoize_1 = _dereq_(\"flo-memoize\");\nvar flo_gauss_quadrature_1 = _dereq_(\"flo-gauss-quadrature\");\nvar flo_graham_scan_1 = _dereq_(\"flo-graham-scan\");\nvar get_x_1 = _dereq_(\"./src/get-x\");\nexports.getX = get_x_1.getX;\nvar get_y_1 = _dereq_(\"./src/get-y\");\nexports.getY = get_y_1.getY;\nvar get_dx_1 = _dereq_(\"./src/get-dx\");\nexports.getDx = get_dx_1.getDx;\nvar get_dy_1 = _dereq_(\"./src/get-dy\");\nexports.getDy = get_dy_1.getDy;\nvar evaluate_x_1 = _dereq_(\"./src/evaluate-x\");\nexports.evaluateX = evaluate_x_1.evaluateX;\nvar evaluate_y_1 = _dereq_(\"./src/evaluate-y\");\nexports.evaluateY = evaluate_y_1.evaluateY;\nvar evaluate_1 = _dereq_(\"./src/evaluate\");\nexports.evaluate = evaluate_1.evaluate;\nvar evaluate_dx_1 = _dereq_(\"./src/evaluate-dx\");\nexports.evaluateDx = evaluate_dx_1.evaluateDx;\nvar evaluate_dy_1 = _dereq_(\"./src/evaluate-dy\");\nexports.evaluateDy = evaluate_dy_1.evaluateDy;\nvar tangent_1 = _dereq_(\"./src/tangent\");\nexports.tangent = tangent_1.tangent;\nvar normal_1 = _dereq_(\"./src/normal\");\nexports.normal = normal_1.normal;\nvar from_0_to_T_1 = _dereq_(\"./src/from-0-to-T\");\nexports.from0ToT = from_0_to_T_1.from0ToT;\nvar from_T_to_1_1 = _dereq_(\"./src/from-T-to-1\");\nexports.fromTTo1 = from_T_to_1_1.fromTTo1;\nvar from_to_1 = _dereq_(\"./src/from-to\");\nexports.fromTo = from_to_1.fromTo;\nvar to_hybrid_quadratic_1 = _dereq_(\"./src/to-hybrid-quadratic\");\nexports.toHybridQuadratic = to_hybrid_quadratic_1.toHybridQuadratic;\nvar coincident_1 = _dereq_(\"./src/coincident\");\nexports.coincident = coincident_1.coincident;\nvar line_intersection_1 = _dereq_(\"./src/line-intersection\");\nexports.lineIntersection = line_intersection_1.lineIntersection;\nvar bezier3_intersection_1 = _dereq_(\"./src/bezier3-intersection/bezier3-intersection\");\nexports.bezier3Intersection = bezier3_intersection_1.bezier3Intersection;\nvar bezier3_intersection_sylvester_1 = _dereq_(\"./src/bezier3-intersection-sylvester/bezier3-intersection-sylvester\");\nexports.bezier3IntersectionSylvester = bezier3_intersection_sylvester_1.bezier3IntersectionSylvester;\nvar ts_at_x_1 = _dereq_(\"./src/ts-at-x\");\nexports.tsAtX = ts_at_x_1.tsAtX;\nvar ts_at_y_1 = _dereq_(\"./src/ts-at-y\");\nexports.tsAtY = ts_at_y_1.tsAtY;\nvar debug_1 = _dereq_(\"./src/debug/debug\");\nexports.BezDebug = debug_1.BezDebug;\nvar fat_line_1 = _dereq_(\"./src/debug/fat-line\");\nexports.FatLine = fat_line_1.FatLine;\nvar de_casteljau_1 = _dereq_(\"./src/de-casteljau\");\nexports.deCasteljau = de_casteljau_1.deCasteljau;\nvar eval_de_casteljau_1 = _dereq_(\"./src/eval-de-casteljau\");\nexports.evalDeCasteljau = eval_de_casteljau_1.evalDeCasteljau;\n// Possibly typescript bug? Below line does not work\n//const { rotatePs: rotate, translatePs: translate } = Vector;\nvar rotate = Vector.rotatePs;\nexports.rotate = rotate;\nvar translate = Vector.translatePs;\nexports.translate = translate;\nvar memoize = flo_memoize_1.default.m1;\n/**\n * Returns the second derivative of the power basis representation of the\n * bezier's x-coordinates. This function is memoized on its points parameter by\n * object reference.\n * @param ps - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @returns The twice differentiated power basis polynomial from\n * highest power to lowest, e.g. at + b is returned as [a,b]\n */\nvar getDdx = memoize(function (ps) {\n    return flo_poly_1.default.differentiate(get_dx_1.getDx(ps));\n});\nexports.getDdx = getDdx;\n/**\n * Returns the second derivative of the power basis representation of the\n * bezier's y-coordinates. This function is memoized on its points parameter by\n * object reference.\n * @param ps - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @returns The twice differentiated power basis polynomial from\n * highest power to lowest, e.g. at + b is returned as [a,b]\n */\nvar getDdy = memoize(function (ps) {\n    return flo_poly_1.default.differentiate(get_dy_1.getDy(ps));\n});\nexports.getDdy = getDdy;\n/**\n * Returns the third derivative of the power basis representation of the\n * bezier's x-coordinates. This function is memoized on its points parameter by\n * object reference.\n * @param ps - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @returns The thrice differentiated power basis polynomial (a\n * constant in array from), e.g. a is returned as [a]\n */\nvar getDddx = memoize(function (ps) {\n    return flo_poly_1.default.differentiate(getDdx(ps));\n});\nexports.getDddx = getDddx;\n/**\n * Returns the third derivative of the power basis representation of the\n * bezier's y-coordinates. This function is memoized on its points parameter by\n * object reference.\n * @param ps - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @returns The thrice differentiated power basis polynomial (a\n * constant in array from), e.g. a is returned as [a]\n */\nvar getDddy = memoize(function (ps) {\n    return flo_poly_1.default.differentiate(getDdy(ps));\n});\nexports.getDddy = getDddy;\n/**\n * Returns the convex hull of a bezier's control points. This hull bounds the\n * bezier curve. This function is memoized.\n *\n * The tolerance at which the cross product of two nearly collinear lines of the\n * hull are considered collinear is 1e-12.\n * @param ps - A bezier curve, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @returns An ordered array of convex hull points.\n */\nvar getBoundingHull = memoize(flo_graham_scan_1.default);\nexports.getBoundingHull = getBoundingHull;\n/**\n * Returns a cubic bezier from the given line with evenly spaced control points.\n * @param l - a 2d line represented by two points\n * @returns Control points of the cubic bezier.\n */\nfunction fromLine(l) {\n    var _l = _slicedToArray(l, 2),\n        _l$ = _slicedToArray(_l[0], 2),\n        x0 = _l$[0],\n        y0 = _l$[1],\n        _l$2 = _slicedToArray(_l[1], 2),\n        x1 = _l$2[0],\n        y1 = _l$2[1];\n\n    var xInterval = (x1 - x0) / 3;\n    var yInterval = (y1 - y0) / 3;\n    return [[x0, y0], [x0 + xInterval, y0 + yInterval], [x0 + xInterval * 2, y0 + yInterval * 2], [x1, y1]];\n}\nexports.fromLine = fromLine;\n/**\n * Returns the given bezier's inflection points.\n **/\nfunction findInflectionPoints(ps) {\n    var _ps = _slicedToArray(ps, 4),\n        _ps$ = _slicedToArray(_ps[0], 2),\n        x0 = _ps$[0],\n        y0 = _ps$[1],\n        _ps$2 = _slicedToArray(_ps[1], 2),\n        x1 = _ps$2[0],\n        y1 = _ps$2[1],\n        _ps$3 = _slicedToArray(_ps[2], 2),\n        x2 = _ps$3[0],\n        y2 = _ps$3[1],\n        _ps$4 = _slicedToArray(_ps[3], 2),\n        x3 = _ps$4[0],\n        y3 = _ps$4[1];\n    // From http://www.caffeineowl.com/graphics/2d/vectorial/cubic-inflexion.html eq. 4\n\n\n    var ax = x1 - x0;\n    var ay = y1 - y0;\n    var bx = x2 - x1 - ax;\n    var by = y2 - y1 - ay;\n    var cx = x3 - x2 - ax - 2 * bx;\n    var cy = y3 - y2 - ay - 2 * by;\n    // From http://www.caffeineowl.com/graphics/2d/vectorial/cubic-inflexion.html eq. 6:\n    //   infl(t) := ax*by - ay*bx + t*(ax*cy - ay*cx) + t^2*(bx*cy - by*cx);\n    // We find the roots of the quadratic - a,b,c are the quadratic coefficients\n    var a = bx * cy - by * cx;\n    var b = ax * cy - ay * cx;\n    var c = ax * by - ay * bx;\n    var inflectionTs = flo_poly_1.default.allRoots([a, b, c], 0, 1);\n    var evPs = evaluate_1.evaluate(ps);\n    return inflectionTs.map(evPs);\n}\nfunction κ(ps, t) {\n    var evDx = evaluate_dx_1.evaluateDx(ps);\n    var evDy = evaluate_dy_1.evaluateDy(ps);\n    var evDdx = evaluateDdx(ps);\n    var evDdy = evaluateDdy(ps);\n    function f(t) {\n        var dx = evDx(t);\n        var dy = evDy(t);\n        var ddx = evDdx(t);\n        var ddy = evDdy(t);\n        var a = dx * ddy - dy * ddx;\n        var b = Math.sqrt(Math.pow(dx * dx + dy * dy, 3));\n        return a / b;\n    }\n    // Curry\n    return t === undefined ? f : f(t);\n}\nexports.κ = κ;\n/**\n * Alias of κ.\n */\nvar curvature = κ;\nexports.curvature = curvature;\nfunction κds(ps, t) {\n    var evDx = evaluate_dx_1.evaluateDx(ps);\n    var evDy = evaluate_dy_1.evaluateDy(ps);\n    var evDdx = evaluateDdx(ps);\n    var evDdy = evaluateDdy(ps);\n    function f(t) {\n        var dx = evDx(t);\n        var dy = evDy(t);\n        var ddx = evDdx(t);\n        var ddy = evDdy(t);\n        var a = dx * ddy - dy * ddx;\n        var b = dx * dx + dy * dy;\n        return a / b;\n    }\n    // Curry\n    return t === undefined ? f : f(t);\n}\nfunction dκMod(ps, t) {\n    var _ps2 = _slicedToArray(ps, 4),\n        _ps2$ = _slicedToArray(_ps2[0], 2),\n        x0 = _ps2$[0],\n        y0 = _ps2$[1],\n        _ps2$2 = _slicedToArray(_ps2[1], 2),\n        x1 = _ps2$2[0],\n        y1 = _ps2$2[1],\n        _ps2$3 = _slicedToArray(_ps2[2], 2),\n        x2 = _ps2$3[0],\n        y2 = _ps2$3[1],\n        _ps2$4 = _slicedToArray(_ps2[3], 2),\n        x3 = _ps2$4[0],\n        y3 = _ps2$4[1];\n\n    function f(t) {\n        var ts = t * t;\n        var omt = 1 - t;\n        var a = ts * x3;\n        var b = ts * y3;\n        var c = 2 * t - 3 * ts;\n        var d = (3 * t - 1) * omt;\n        var e = omt * omt;\n        var f = 3 * (a + c * x2 - d * x1 - e * x0);\n        var g = 3 * (b + c * y2 - d * y1 - e * y0);\n        var h = 6 * (t * y3 - (3 * t - 1) * y2 + (3 * t - 2) * y1 + omt * y0);\n        var i = 6 * (t * x3 - (3 * t - 1) * x2 + (3 * t - 2) * x1 + omt * x0);\n        var j = Math.sqrt(f * f + g * g);\n        return 4 * (f * (y3 - 3 * y2 + 3 * y1 - y0) - g * (x3 - 3 * x2 + 3 * x1 - x0)) * Math.pow(j, 3) - (f * h - i * g) * (2 * h * g + 2 * i * f) * j;\n    }\n    return t === undefined ? f : f(t);\n}\nexports.dκMod = dκMod;\n/**\n * Categorizes the given cubic bezier curve according to whether it has a loop,\n * a cusp, or zero, one or two inflection points all of which are mutually\n * exclusive.\n *\n * See <a href=\"http://graphics.pixar.com/people/derose/publications/CubicClassification/paper.pdf\">\n * this</a> paper.\n * @param ps - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @returns A value of 'L', 'C', '0', '1', or '2' depending on whether\n * the curve has a loop, a cusp, or zero, one or two inflection points.\n */\nfunction categorize(ps) {\n    // TODO - finish\n}\nfunction totalCurvature(ps, interval) {\n    var tanPs = tangent_1.tangent(ps);\n    function f(interval) {\n        return flo_gauss_quadrature_1.default(κds(ps), interval);\n        // TODO\n        /*\n        let [a,b] = interval;\n        let tangentA = tanPs(a);\n        let tangentB = tanPs(b);\n        let sinθ = Vector.cross(tanA, tanB)\n        */\n    }\n    // Curry\n    return interval === undefined ? f : f(interval);\n}\nexports.totalCurvature = totalCurvature;\nfunction totalAbsoluteCurvature(ps, interval) {\n    function f() {\n        var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 1];\n\n        // Numerically integrate the absolute curvature\n        var result = flo_gauss_quadrature_1.default(function (t) {\n            return Math.abs(κds(ps)(t));\n        }, interval);\n        return result;\n    }\n    // Curry\n    return interval === undefined ? f : f(interval);\n}\nexports.totalAbsoluteCurvature = totalAbsoluteCurvature;\nfunction len(interval, ps) {\n    function f(ps) {\n        if (interval[0] === interval[1]) {\n            return 0;\n        }\n\n        var _ps3 = _slicedToArray(ps, 4),\n            _ps3$ = _slicedToArray(_ps3[0], 2),\n            x0 = _ps3$[0],\n            y0 = _ps3$[1],\n            _ps3$2 = _slicedToArray(_ps3[1], 2),\n            x1 = _ps3$2[0],\n            y1 = _ps3$2[1],\n            _ps3$3 = _slicedToArray(_ps3[2], 2),\n            x2 = _ps3$3[0],\n            y2 = _ps3$3[1],\n            _ps3$4 = _slicedToArray(_ps3[3], 2),\n            x3 = _ps3$4[0],\n            y3 = _ps3$4[1];\n        // Keep line below to ensure zero length curve returns zero!\n\n\n        if (x0 === x1 && x1 === x2 && x2 === x3 && y0 === y1 && y1 === y2 && y2 === y3) {\n            return 0;\n        }\n        var evDs = ds(ps);\n        return flo_gauss_quadrature_1.default(evDs, interval);\n    }\n    // Curry\n    return ps === undefined ? f : f(ps);\n}\nexports.len = len;\nfunction getTAtLength(ps, s) {\n    var lenAtT = function lenAtT(t) {\n        return len([0, t], ps);\n    };\n    function f(s) {\n        return flo_poly_1.default.brent(function (t) {\n            return lenAtT(t) - s;\n        }, 0, 1);\n    }\n    // Curry\n    return s === undefined ? f : f(s);\n}\nexports.getTAtLength = getTAtLength;\nfunction ds(ps, t) {\n    var evDx = evaluate_dx_1.evaluateDx(ps);\n    var evDy = evaluate_dy_1.evaluateDy(ps);\n    function f(t) {\n        var dx = evDx(t);\n        var dy = evDy(t);\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    // Curry\n    return t === undefined ? f : f(t);\n}\nfunction evaluateDdx(ps, t) {\n    var ddPs = getDdx(ps); // Speed optimizing cache\n    var f = flo_poly_1.default.evaluate(ddPs);\n    return t === undefined ? f : f(t); // Curry\n}\nexports.evaluateDdx = evaluateDdx;\nfunction evaluateDdy(ps, t) {\n    var ddPs = getDdy(ps); // Speed optimizing cache\n    var f = flo_poly_1.default.evaluate(ddPs);\n    return t === undefined ? f : f(t); // Curry\n}\nexports.evaluateDdy = evaluateDdy;\nfunction evaluateDddx(ps, t) {\n    var dddPs = getDddx(ps); // Speed optimizing cache\n    var f = flo_poly_1.default.evaluate(dddPs);\n    return t === undefined ? f : f(t); // Curry\n}\nexports.evaluateDddx = evaluateDddx;\nfunction evaluateDddy(ps, t) {\n    var dddPs = getDddy(ps); // Speed optimizing cache\n    var f = flo_poly_1.default.evaluate(dddPs);\n    return t === undefined ? f : f(t); // Curry\n}\nexports.evaluateDddy = evaluateDddy;\n// TODO - refactor getBounds, getBoundingBox, etc.\n/**\n * Helper function. Returns the bounding box of the normalized (i.e. first point\n * moved to origin and rotated so that last point lies on x-axis) given cubic\n * bezier.\n * @ignore\n * @param ps - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @param sinθ - Sine of angle made by line from first bezier point to\n * last with x-axis.\n * @param cosθ - Cosine of angle made by line from first bezier point\n * to last with x-axis.\n * @returns Bounding box in the form [[minX, minY], [maxX,maxY]\n */\nfunction getNormalizedBoundingBox(ps, sinθ, cosθ) {\n    var vectorToOrigin = Vector.transform(ps[0], function (x) {\n        return -x;\n    });\n    var boundingPs = Vector.translateThenRotatePs(vectorToOrigin, -sinθ, cosθ, ps);\n    return getBoundingBox(boundingPs);\n}\n/**\n * Returns the tight bounding box of the given cubic bezier.\n * @returns The tight bounding box of the bezier as four ordered\n * points of a rotated rectangle.\n * TODO - test case of baseLength === 0\n */\nvar getBoundingBoxTight = memoize(function (ps) {\n    var _ps4 = _slicedToArray(ps, 4),\n        _ps4$ = _slicedToArray(_ps4[0], 2),\n        x0 = _ps4$[0],\n        y0 = _ps4$[1],\n        _ps4$2 = _slicedToArray(_ps4[1], 2),\n        x1 = _ps4$2[0],\n        y1 = _ps4$2[1],\n        _ps4$3 = _slicedToArray(_ps4[2], 2),\n        x2 = _ps4$3[0],\n        y2 = _ps4$3[1],\n        _ps4$4 = _slicedToArray(_ps4[3], 2),\n        x3 = _ps4$4[0],\n        y3 = _ps4$4[1];\n\n    var baseLength = Math.sqrt((x3 - x0) * (x3 - x0) + (y3 - y0) * (y3 - y0));\n    var sinθ = (y3 - y0) / baseLength;\n    var cosθ = (x3 - x0) / baseLength;\n    var box = getNormalizedBoundingBox(ps, sinθ, cosθ);\n\n    var _box = _slicedToArray(box, 2),\n        _box$ = _slicedToArray(_box[0], 2),\n        p0x = _box$[0],\n        p0y = _box$[1],\n        _box$2 = _slicedToArray(_box[1], 2),\n        p1x = _box$2[0],\n        p1y = _box$2[1];\n\n    var axisAlignedBox = [box[0], [p1x, p0y], box[1], [p0x, p1y]];\n    return Vector.rotateThenTranslatePs(sinθ, cosθ, ps[0], axisAlignedBox);\n});\nexports.getBoundingBoxTight = getBoundingBoxTight;\n/**\n * Returns the axis-aligned bounding box of a given bezier.\n * @param ps - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @returns the axis-aligned bounding box in the form\n * [[minx, miny], [maxx,maxy]\n */\nvar getBoundingBox = memoize(function (ps) {\n    return getBounds(ps).box;\n});\nexports.getBoundingBox = getBoundingBox;\n/**\n * Calculates and returns general bezier bounds.\n * @returns The axis-aligned bounding box together with the t values\n * where the bounds on the bezier are reached.\n */\nvar getBounds = memoize(function (ps) {\n    // Roots of derivative\n    var roots = [get_dx_1.getDx(ps), get_dy_1.getDy(ps)].map(function (poly) {\n        return flo_poly_1.default.allRoots(poly, 0, 1);\n    });\n    // Endpoints\n    roots[0].push(0, 1);\n    roots[1].push(0, 1);\n    var minX = Number.POSITIVE_INFINITY;\n    var maxX = Number.NEGATIVE_INFINITY;\n    var minY = Number.POSITIVE_INFINITY;\n    var maxY = Number.NEGATIVE_INFINITY;\n    var tMinX = undefined;\n    var tMinY = undefined;\n    var tMaxX = undefined;\n    var tMaxY = undefined;\n    // Test points\n    for (var i = 0; i < roots[0].length; i++) {\n        var t = roots[0][i];\n        var x = evaluate_x_1.evaluateX(ps, t);\n        if (x < minX) {\n            minX = x;\n            tMinX = t;\n        }\n        if (x > maxX) {\n            maxX = x;\n            tMaxX = t;\n        }\n    }\n    for (var _i = 0; _i < roots[1].length; _i++) {\n        var _t = roots[1][_i];\n        var y = evaluate_y_1.evaluateY(ps, _t);\n        if (y < minY) {\n            minY = y;\n            tMinY = _t;\n        }\n        if (y > maxY) {\n            maxY = y;\n            tMaxY = _t;\n        }\n    }\n    var ts = [[tMinX, tMinY], [tMaxX, tMaxY]];\n    var box = [[minX, minY], [maxX, maxY]];\n    return { ts: ts, box: box };\n});\nexports.getBounds = getBounds;\n/**\n * Returns 2 new beziers split at the given t parameter, i.e. for the ranges\n * [0,t] and [t,1]. Uses de Casteljau's algorithm.\n *\n * A loose bound on the accuracy of the resultant points is given by:\n * |δP| = 2n*max_k(|b_k|)η, where n = 3 (cubic), b_k are the control points\n * abd η is Number.EPSILON.\n * @param ps - A cubic bezier curve\n * @param t - The t parameter where the curve should be split\n */\nfunction splitAt(ps, t) {\n    var _ps5 = _slicedToArray(ps, 4),\n        _ps5$ = _slicedToArray(_ps5[0], 2),\n        x0 = _ps5$[0],\n        y0 = _ps5$[1],\n        _ps5$2 = _slicedToArray(_ps5[1], 2),\n        x1 = _ps5$2[0],\n        y1 = _ps5$2[1],\n        _ps5$3 = _slicedToArray(_ps5[2], 2),\n        x2 = _ps5$3[0],\n        y2 = _ps5$3[1],\n        _ps5$4 = _slicedToArray(_ps5[3], 2),\n        x3 = _ps5$4[0],\n        y3 = _ps5$4[1];\n\n    var s = 1 - t;\n    var t2 = t * t;\n    var t3 = t2 * t;\n    var s2 = s * s;\n    var s3 = s2 * s;\n    var ps1 = [[x0, y0], [t * x1 + s * x0, t * y1 + s * y0], [t2 * x2 + 2 * s * t * x1 + s2 * x0, t2 * y2 + 2 * s * t * y1 + s2 * y0], [t3 * x3 + 3 * s * t2 * x2 + 3 * s2 * t * x1 + s3 * x0, t3 * y3 + 3 * s * t2 * y2 + 3 * s2 * t * y1 + s3 * y0]];\n    var ps2 = [ps1[3], [t2 * x3 + 2 * t * s * x2 + s2 * x1, t2 * y3 + 2 * t * s * y2 + s2 * y1], [t * x3 + s * x2, t * y3 + s * y2], [x3, y3]];\n    return [ps1, ps2];\n}\nexports.splitAt = splitAt;\n/**\n * Returns a new bezier from the given bezier by limiting its t range.\n *\n * Uses de Casteljau's algorithm.\n *\n * @param ps A bezier\n * @param tRange A t range\n */\nfunction bezierFromBezierPiece(ps, tRange) {\n    // If tRange = [0,1] then return original bezier.\n    if (tRange[0] === 0 && tRange[1] === 1) {\n        return ps;\n    }\n    // If tRange[0] === tRange[1] then return a single point degenerated bezier.\n    if (tRange[0] === tRange[1]) {\n        var p = evaluate_1.evaluate(ps)(tRange[0]);\n        return [p, p, p, p];\n    }\n    if (tRange[0] === 0) {\n        return from_0_to_T_1.from0ToT(ps, tRange[1]);\n    }\n    if (tRange[1] === 1) {\n        return from_T_to_1_1.fromTTo1(ps, tRange[0]);\n    }\n    // At this stage we know the t range is not degenerate and tRange[0] !== 0 \n    // and tRange[1] !== 1\n    return from_0_to_T_1.from0ToT(from_T_to_1_1.fromTTo1(ps, tRange[0]), (tRange[1] - tRange[0]) / (1 - tRange[0]));\n}\nexports.bezierFromBezierPiece = bezierFromBezierPiece;\n/**\n * Returns a human readable string representation of the given bezier.\n * @param ps - A bezier curve\n */\nfunction toString(ps) {\n    var _ps6 = _slicedToArray(ps, 4),\n        _ps6$ = _slicedToArray(_ps6[0], 2),\n        x0 = _ps6$[0],\n        y0 = _ps6$[1],\n        _ps6$2 = _slicedToArray(_ps6[1], 2),\n        x1 = _ps6$2[0],\n        y1 = _ps6$2[1],\n        _ps6$3 = _slicedToArray(_ps6[2], 2),\n        x2 = _ps6$3[0],\n        y2 = _ps6$3[1],\n        _ps6$4 = _slicedToArray(_ps6[3], 2),\n        x3 = _ps6$4[0],\n        y3 = _ps6$4[1];\n\n    return \"[[\" + x0 + \",\" + y0 + \"],[\" + x1 + \",\" + y1 + \"],[\" + x2 + \",\" + y2 + \"],[\" + x3 + \",\" + y3 + \"]]\";\n}\n/**\n * Scales all control points of the given bezier by the given factor.\n * @param ps - A bezier curve\n * @param c - The scale factor\n */\nfunction scale(ps, c) {\n    return ps.map(function (x) {\n        return [x[0] * c, x[1] * c];\n    });\n}\nexports.scale = scale;\n/**\n * Returns the best least squares quadratic bezier approximation to the given\n * cubic bezier. Note that the two bezier endpoints differ in general.\n * @param ps - A cubic bezier curve.\n */\nfunction toQuadratic(ps) {\n    var _ps7 = _slicedToArray(ps, 4),\n        _ps7$ = _slicedToArray(_ps7[0], 2),\n        x0 = _ps7$[0],\n        y0 = _ps7$[1],\n        _ps7$2 = _slicedToArray(_ps7[1], 2),\n        x1 = _ps7$2[0],\n        y1 = _ps7$2[1],\n        _ps7$3 = _slicedToArray(_ps7[2], 2),\n        x2 = _ps7$3[0],\n        y2 = _ps7$3[1],\n        _ps7$4 = _slicedToArray(_ps7[3], 2),\n        x3 = _ps7$4[0],\n        y3 = _ps7$4[1];\n\n    return [[19 / 20 * x0 + 3 / 20 * x1 + -3 / 20 * x2 + 1 / 20 * x3, 19 / 20 * y0 + 3 / 20 * y1 + -3 / 20 * y2 + 1 / 20 * y3], [-1 / 4 * x0 + 3 / 4 * x1 + 3 / 4 * x2 + -1 / 4 * x3, -1 / 4 * y0 + 3 / 4 * y1 + 3 / 4 * y2 + -1 / 4 * y3], [1 / 20 * x0 + -3 / 20 * x1 + 3 / 20 * x2 + 19 / 20 * x3, 1 / 20 * y0 + -3 / 20 * y1 + 3 / 20 * y2 + 19 / 20 * y3]];\n}\nexports.toQuadratic = toQuadratic;\n/**\n * Evaluates the given hybrid quadratic at the given t and th parameters. (see\n * toHybridQuadratic for details).\n * @param hq - A hybrid quadratic\n * @param t - The bezier parameter value\n * @param th - The parameter value for the hybrid quadratic point.\n */\nfunction evaluateHybridQuadratic(hq, t, th) {\n    var P0 = hq[0];\n    var P1_ = hq[1];\n    var P2 = hq[2];\n    var P1 = evaluateLinear(hq[1], th);\n    return evaluateQuadratic([P0, P1, P2], t);\n}\nexports.evaluateHybridQuadratic = evaluateHybridQuadratic;\n/**\n * Evaluates the given linear bezier (line) at a specific t value.\n * @param ps - A linear bezier curve.\n * @param t - The value where the bezier should be evaluated\n */\nfunction evaluateLinear(ps, t) {\n    var _ps8 = _slicedToArray(ps, 2),\n        _ps8$ = _slicedToArray(_ps8[0], 2),\n        x0 = _ps8$[0],\n        y0 = _ps8$[1],\n        _ps8$2 = _slicedToArray(_ps8[1], 2),\n        x1 = _ps8$2[0],\n        y1 = _ps8$2[1];\n\n    var x = x0 * (1 - t) + x1 * t;\n    var y = y0 * (1 - t) + y1 * t;\n    return [x, y];\n}\nexports.evaluateLinear = evaluateLinear;\n/**\n * Returns a clone of the given cubic bezier. Use sparingly; this is not in the\n * spirit of functional programming.\n * @param ps - A cubic bezier given by its array of control points\n */\nfunction clone(ps) {\n    var _ps9 = _slicedToArray(ps, 4),\n        _ps9$ = _slicedToArray(_ps9[0], 2),\n        x0 = _ps9$[0],\n        y0 = _ps9$[1],\n        _ps9$2 = _slicedToArray(_ps9[1], 2),\n        x1 = _ps9$2[0],\n        y1 = _ps9$2[1],\n        _ps9$3 = _slicedToArray(_ps9[2], 2),\n        x2 = _ps9$3[0],\n        y2 = _ps9$3[1],\n        _ps9$4 = _slicedToArray(_ps9[3], 2),\n        x3 = _ps9$4[0],\n        y3 = _ps9$4[1];\n\n    return [[x0, y0], [x1, y1], [x2, y2], [x3, y3]];\n}\nexports.clone = clone;\n/**\n * Evaluates the given quadratic bezier at a specific t value.\n * @param ps - A quadratic bezier curve.\n * @param t - The value where the bezier should be evaluated\n */\nfunction evaluateQuadratic(ps, t) {\n    var _ps10 = _slicedToArray(ps, 3),\n        _ps10$ = _slicedToArray(_ps10[0], 2),\n        x0 = _ps10$[0],\n        y0 = _ps10$[1],\n        _ps10$2 = _slicedToArray(_ps10[1], 2),\n        x1 = _ps10$2[0],\n        y1 = _ps10$2[1],\n        _ps10$3 = _slicedToArray(_ps10[2], 2),\n        x2 = _ps10$3[0],\n        y2 = _ps10$3[1];\n\n    var x = x0 * Math.pow(1 - t, 2) + x1 * 2 * (1 - t) * t + x2 * Math.pow(t, 2);\n    var y = y0 * Math.pow(1 - t, 2) + y1 * 2 * (1 - t) * t + y2 * Math.pow(t, 2);\n    return [x, y];\n}\nexports.evaluateQuadratic = evaluateQuadratic;\n/**\n * Returns the cubic version of the given quadratic bezier curve. Quadratic\n * bezier curves can always be represented by cubics - the converse is false.\n * @param ps - A quadratic bezier curve.\n */\nfunction toCubic(ps) {\n    var _ps11 = _slicedToArray(ps, 3),\n        _ps11$ = _slicedToArray(_ps11[0], 2),\n        x0 = _ps11$[0],\n        y0 = _ps11$[1],\n        _ps11$2 = _slicedToArray(_ps11[1], 2),\n        x1 = _ps11$2[0],\n        y1 = _ps11$2[1],\n        _ps11$3 = _slicedToArray(_ps11[2], 2),\n        x2 = _ps11$3[0],\n        y2 = _ps11$3[1];\n\n    return [[x0, y0], [1 / 3 * x0 + 2 / 3 * x1, 1 / 3 * y0 + 2 / 3 * y1], [2 / 3 * x1 + 1 / 3 * x2, 2 / 3 * y1 + 1 / 3 * y2], [x2, y2]];\n}\nexports.toCubic = toCubic;\n/**\n * Returns the given points (e.g. bezier) in reverse order.\n * @param ps\n */\nfunction reverse(ps) {\n    return ps.slice().reverse();\n}\nexports.reverse = reverse;\nfunction equal(psA, psB) {\n    var _psA = _slicedToArray(psA, 4),\n        _psA$ = _slicedToArray(_psA[0], 2),\n        ax0 = _psA$[0],\n        ay0 = _psA$[1],\n        _psA$2 = _slicedToArray(_psA[1], 2),\n        ax1 = _psA$2[0],\n        ay1 = _psA$2[1],\n        _psA$3 = _slicedToArray(_psA[2], 2),\n        ax2 = _psA$3[0],\n        ay2 = _psA$3[1],\n        _psA$4 = _slicedToArray(_psA[3], 2),\n        ax3 = _psA$4[0],\n        ay3 = _psA$4[1];\n\n    var _psB = _slicedToArray(psB, 4),\n        _psB$ = _slicedToArray(_psB[0], 2),\n        bx0 = _psB$[0],\n        by0 = _psB$[1],\n        _psB$2 = _slicedToArray(_psB[1], 2),\n        bx1 = _psB$2[0],\n        by1 = _psB$2[1],\n        _psB$3 = _slicedToArray(_psB[2], 2),\n        bx2 = _psB$3[0],\n        by2 = _psB$3[1],\n        _psB$4 = _slicedToArray(_psB[3], 2),\n        bx3 = _psB$4[0],\n        by3 = _psB$4[1];\n\n    return ax0 === bx0 && ax1 === bx1 && ax2 === bx2 && ax3 === bx3 && ay0 === by0 && ay1 === by1 && ay2 === by2 && ay3 === by3;\n}\nexports.equal = equal;\n\n\n\n},{\"./src/bezier3-intersection-sylvester/bezier3-intersection-sylvester\":4,\"./src/bezier3-intersection/bezier3-intersection\":5,\"./src/coincident\":11,\"./src/de-casteljau\":12,\"./src/debug/debug\":13,\"./src/debug/fat-line\":15,\"./src/eval-de-casteljau\":16,\"./src/evaluate\":21,\"./src/evaluate-dx\":17,\"./src/evaluate-dy\":18,\"./src/evaluate-x\":19,\"./src/evaluate-y\":20,\"./src/from-0-to-T\":22,\"./src/from-T-to-1\":23,\"./src/from-to\":24,\"./src/get-dx\":25,\"./src/get-dy\":26,\"./src/get-x\":27,\"./src/get-y\":28,\"./src/line-intersection\":29,\"./src/normal\":30,\"./src/tangent\":31,\"./src/to-hybrid-quadratic\":32,\"./src/ts-at-x\":33,\"./src/ts-at-y\":34,\"flo-gauss-quadrature\":35,\"flo-graham-scan\":36,\"flo-memoize\":41,\"flo-poly\":42,\"flo-vector2d\":50}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar get_x_1 = _dereq_(\"../get-x\");\nvar get_y_1 = _dereq_(\"../get-y\");\nvar DELTA = 10 - 6;\n// Belongs in graveyard because it is not numerically stable enough, e.g. if\n// the cubic bezier resembles a quadratic no intersection can be found.\n/**\n * Returns the intersection points between two cubic beziers. This function is\n * not numerically stable and thus not publically exposed. It can not, for\n * instance, handle cases where one or both beziers degenerate into a quadratic\n * bezier. Use for experimentation and comparison only.\n * @ignore\n * @param ps1 - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @param ps2 - Another cubic bezier\n * @returns The t-value pairs at intersection of the first\n * and second beziers respectively.\n * See <a href=\"http://mat.polsl.pl/sjpam/zeszyty/z6/Silesian_J_Pure_Appl_Math_v6_i1_str_155-176.pdf\">\n * this paper</a>\n */\nfunction bezier3IntersectionSylvester(ps1, ps2) {\n    var _ps1$ = _slicedToArray(ps1[0], 2),\n        x1 = _ps1$[0],\n        y1 = _ps1$[1];\n\n    var _ps2$ = _slicedToArray(ps2[0], 2),\n        x2 = _ps2$[0],\n        y2 = _ps2$[1];\n    // Rotate by θ so that Δx ≡ d_0x - c_0x === 0 (as suggested by the paper)\n\n\n    var rotatedPs1 = void 0;\n    var rotatedPs2 = void 0;\n    if (Math.abs(x1 - x2) > 1e-12) {\n        var tanθ = (x1 - x2) / (y1 - y2);\n        var tanθ2 = tanθ * tanθ;\n        var sinθ = tanθ2 / (1 + tanθ2); // Trig. identity\n        var cosθ = sinθ / tanθ;\n        var rotatedPs1_ = flo_vector2d_1.rotatePs(sinθ, cosθ, ps1);\n        var rotatedPs2_ = flo_vector2d_1.rotatePs(sinθ, cosθ, ps2);\n        rotatedPs1 = rotatedPs1_;\n        rotatedPs2 = rotatedPs2_;\n    } else {\n        rotatedPs1 = ps1;\n        rotatedPs2 = ps2;\n    }\n    // Cache\n\n    var _get_x_1$getX = get_x_1.getX(rotatedPs1),\n        _get_x_1$getX2 = _slicedToArray(_get_x_1$getX, 4),\n        c_3x = _get_x_1$getX2[0],\n        c_2x = _get_x_1$getX2[1],\n        c_1x = _get_x_1$getX2[2],\n        c_0x = _get_x_1$getX2[3];\n\n    var _get_y_1$getY = get_y_1.getY(rotatedPs1),\n        _get_y_1$getY2 = _slicedToArray(_get_y_1$getY, 4),\n        c_3y = _get_y_1$getY2[0],\n        c_2y = _get_y_1$getY2[1],\n        c_1y = _get_y_1$getY2[2],\n        c_0y = _get_y_1$getY2[3];\n\n    var _get_x_1$getX3 = get_x_1.getX(rotatedPs2),\n        _get_x_1$getX4 = _slicedToArray(_get_x_1$getX3, 4),\n        d_3x = _get_x_1$getX4[0],\n        d_2x = _get_x_1$getX4[1],\n        d_1x = _get_x_1$getX4[2],\n        d_0x = _get_x_1$getX4[3];\n\n    var _get_y_1$getY3 = get_y_1.getY(rotatedPs2),\n        _get_y_1$getY4 = _slicedToArray(_get_y_1$getY3, 4),\n        d_3y = _get_y_1$getY4[0],\n        d_2y = _get_y_1$getY4[1],\n        d_1y = _get_y_1$getY4[2],\n        d_0y = _get_y_1$getY4[3];\n\n    var a = d_3x,\n        b = c_3x,\n        c = d_2x,\n        d = c_2x,\n        e = d_1x,\n        f = c_1x;\n    //let Δx = d_0x - c_0x; // === 0 after rotation\n\n    var m = d_3y,\n        n = c_3y,\n        p = d_2y,\n        q = c_2y,\n        r = d_1y,\n        s = c_1y;\n\n    var Δy = d_0y - c_0y;\n    var a2 = a * a;\n    var b2 = b * b;\n    var c2 = c * c;\n    var d2 = d * d;\n    var e2 = e * e;\n    var f2 = f * f;\n    var m2 = m * m;\n    var n2 = n * n;\n    var p2 = p * p;\n    var q2 = q * q;\n    var r2 = r * r;\n    var s2 = s * s;\n    var Δy2 = Δy * Δy;\n    var a3 = a2 * a;\n    var b3 = b2 * b;\n    var c3 = c2 * c;\n    var d3 = d2 * d;\n    var e3 = e2 * e;\n    var f3 = f2 * f;\n    var Δy3 = Δy2 * Δy;\n    var dΔy = d * Δy;\n    var dΔy2 = d * Δy2;\n    var bdΔy = b * dΔy;\n    var bdΔy2 = b * dΔy2;\n    var cΔy = c * Δy;\n    var cΔy2 = c * Δy2;\n    var bΔy = b * Δy;\n    var bΔy2 = b * Δy2;\n    var bΔy3 = b * Δy3;\n    // Rotate both beziers so that delta-x = 0, i.e. so that the x-coordinate of \n    // both beziers are equal. This reduces the complexity of calculating the \n    // determinant of the Sylvester matrix.\n    var k9 = -b2 * Δy * f * s2 + bdΔy * f * q * s + 2 * bΔy * f2 * n * s - d2 * Δy * f * n * s - b2 * dΔy2 * s - bΔy * f2 * q2 + dΔy * f2 * n * q - 2 * b2 * Δy2 * f * q + d2 * bΔy2 * q - Δy * f3 * n2 + 3 * bdΔy2 * f * n - d3 * Δy2 * n - b3 * Δy3;\n    var k8 = b2 * Δy * e * s2 + 2 * b2 * Δy * f * r * s - bdΔy * e * q * s - 4 * bΔy * e * f * n * s + d2 * Δy * e * n * s - bdΔy * f * q * r - 2 * bΔy * f2 * n * r + d2 * Δy * f * n * r + b2 * dΔy2 * r + 2 * bΔy * e * f * q2 - 2 * dΔy * e * f * n * q + 2 * b2 * Δy2 * e * q + 3 * Δy * e * f2 * n2 - 3 * bdΔy2 * e * n;\n    var k7 = -2 * b2 * Δy * e * r * s - b * cΔy * f * q * s - bdΔy * f * p * s + 2 * c * dΔy * f * n * s + 2 * bΔy * e2 * n * s + b2 * cΔy2 * s - b2 * Δy * f * r2 + bdΔy * e * q * r + 4 * bΔy * e * f * n * r - d2 * Δy * e * n * r - bΔy * e2 * q2 + 2 * bΔy * f2 * p * q - cΔy * f2 * n * q + dΔy * e2 * n * q - 2 * b * c * dΔy2 * q - dΔy * f2 * n * p + 2 * b2 * Δy2 * f * p - b * d2 * Δy2 * p - 3 * Δy * e2 * f * n2 - 3 * b * cΔy2 * f * n + 3 * c * d2 * Δy2 * n;\n    var k6 = 2 * a * bΔy * f * s2 - a * dΔy * f * q * s + b * cΔy * e * q * s + bdΔy * e * p * s - 2 * a * Δy * f2 * n * s - 2 * c * dΔy * e * n * s - 2 * bΔy * f2 * m * s + d2 * Δy * f * m * s + 2 * a * bdΔy2 * s + b2 * Δy * e * r2 + b * cΔy * f * q * r + bdΔy * f * p * r - 2 * c * dΔy * f * n * r - 2 * bΔy * e2 * n * r - b2 * cΔy2 * r + a * Δy * f2 * q2 - 4 * bΔy * e * f * p * q + 2 * cΔy * e * f * n * q - dΔy * f2 * m * q + 4 * a * bΔy2 * f * q - a * d2 * Δy2 * q + 2 * dΔy * e * f * n * p - 2 * b2 * Δy2 * e * p + Δy * e3 * n2 + 2 * Δy * f3 * m * n - 3 * a * dΔy2 * f * n + 3 * b * cΔy2 * e * n - 3 * bdΔy2 * f * m + d3 * Δy2 * m + 3 * a * b2 * Δy3;\n    var k5 = -2 * a * bΔy * e * s2 - 4 * a * bΔy * f * r * s + a * dΔy * e * q * s + b * cΔy * f * p * s + 4 * a * Δy * e * f * n * s - c2 * Δy * f * n * s + 4 * bΔy * e * f * m * s - d2 * Δy * e * m * s + a * dΔy * f * q * r - b * cΔy * e * q * r - bdΔy * e * p * r + 2 * a * Δy * f2 * n * r + 2 * c * dΔy * e * n * r + 2 * bΔy * f2 * m * r - d2 * Δy * f * m * r - 2 * a * bdΔy2 * r - 2 * a * Δy * e * f * q2 + 2 * bΔy * e2 * p * q - cΔy * e2 * n * q + 2 * dΔy * e * f * m * q - 4 * a * bΔy2 * e * q + b * c2 * Δy2 * q - bΔy * f2 * p2 + cΔy * f2 * n * p - dΔy * e2 * n * p + 2 * b * c * dΔy2 * p - 6 * Δy * e * f2 * m * n + 3 * a * dΔy2 * e * n - 3 * c2 * dΔy2 * n + 3 * bdΔy2 * e * m;\n    var k4 = 4 * a * bΔy * e * r * s + a * cΔy * f * q * s + a * dΔy * f * p * s - b * cΔy * e * p * s - 2 * a * Δy * e2 * n * s + c2 * Δy * e * n * s - 2 * c * dΔy * f * m * s - 2 * bΔy * e2 * m * s - 2 * a * b * cΔy2 * s + 2 * a * bΔy * f * r2 - a * dΔy * e * q * r - b * cΔy * f * p * r - 4 * a * Δy * e * f * n * r + c2 * Δy * f * n * r - 4 * bΔy * e * f * m * r + d2 * Δy * e * m * r + a * Δy * e2 * q2 - 2 * a * Δy * f2 * p * q + cΔy * f2 * m * q - dΔy * e2 * m * q + 2 * a * c * dΔy2 * q + 2 * bΔy * e * f * p2 - 2 * cΔy * e * f * n * p + dΔy * f2 * m * p - 4 * a * bΔy2 * f * p + a * d2 * Δy2 * p + 6 * Δy * e2 * f * m * n + 3 * a * cΔy2 * f * n + 3 * b * cΔy2 * f * m - 3 * c * d2 * Δy2 * m;\n    var k3 = -a2 * Δy * f * s2 - a * cΔy * e * q * s - a * dΔy * e * p * s + 2 * a * Δy * f2 * m * s + 2 * c * dΔy * e * m * s - a2 * dΔy2 * s - 2 * a * bΔy * e * r2 - a * cΔy * f * q * r - a * dΔy * f * p * r + b * cΔy * e * p * r + 2 * a * Δy * e2 * n * r - c2 * Δy * e * n * r + 2 * c * dΔy * f * m * r + 2 * bΔy * e2 * m * r + 2 * a * b * cΔy2 * r + 4 * a * Δy * e * f * p * q - 2 * cΔy * e * f * m * q - 2 * a2 * Δy2 * f * q - bΔy * e2 * p2 + cΔy * e2 * n * p - 2 * dΔy * e * f * m * p + 4 * a * bΔy2 * e * p - b * c2 * Δy2 * p - 2 * Δy * e3 * m * n - 3 * a * cΔy2 * e * n + c3 * Δy2 * n - Δy * f3 * m2 + 3 * a * dΔy2 * f * m - 3 * b * cΔy2 * e * m - 3 * a2 * bΔy3;\n    var k2 = a2 * Δy * e * s2 + 2 * a2 * Δy * f * r * s - a * cΔy * f * p * s - 4 * a * Δy * e * f * m * s + c2 * Δy * f * m * s + a * cΔy * e * q * r + a * dΔy * e * p * r - 2 * a * Δy * f2 * m * r - 2 * c * dΔy * e * m * r + a2 * dΔy2 * r - 2 * a * Δy * e2 * p * q + cΔy * e2 * m * q + 2 * a2 * Δy2 * e * q - a * c2 * Δy2 * q + a * Δy * f2 * p2 - cΔy * f2 * m * p + dΔy * e2 * m * p - 2 * a * c * dΔy2 * p + 3 * Δy * e * f2 * m2 - 3 * a * dΔy2 * e * m + 3 * c2 * dΔy2 * m;\n    var k1 = -2 * a2 * Δy * e * r * s + a * cΔy * e * p * s + 2 * a * Δy * e2 * m * s - c2 * Δy * e * m * s + a2 * cΔy2 * s - a2 * Δy * f * r2 + a * cΔy * f * p * r + 4 * a * Δy * e * f * m * r - c2 * Δy * f * m * r - 2 * a * Δy * e * f * p2 + 2 * cΔy * e * f * m * p + 2 * a2 * Δy2 * f * p - 3 * Δy * e2 * f * m2 - 3 * a * cΔy2 * f * m;\n    var k0 = a2 * Δy * e * r2 - a * cΔy * e * p * r - 2 * a * Δy * e2 * m * r + c2 * Δy * e * m * r - a2 * cΔy2 * r + a * Δy * e2 * p2 - cΔy * e2 * m * p - 2 * a2 * Δy2 * e * p + a * c2 * Δy2 * p + Δy * e3 * m2 + 3 * a * cΔy2 * e * m - c3 * Δy2 * m + a3 * Δy3;\n    var poly = [k9, k8, k7, k6, k5, k4, k3, k2, k1, k0];\n    var roots = flo_poly_1.default.allRoots(poly, 0);\n    var tPairs = [];\n    for (var i = 0; i < roots.length; i++) {\n        var k = roots[i];\n        var _k = k * k;\n        var _k2 = _k * k;\n        var ps1k = {\n            x: [c_3x * _k2, c_2x * _k, c_1x * k, c_0x],\n            y: [c_3y * _k2, c_2y * _k, c_1y * k, c_0y]\n        };\n        var ps2k = {\n            x: [d_3x * _k2, d_2x * _k, d_1x * k, d_0x],\n            y: [d_3y * _k2, d_2y * _k, d_1y * k, d_0y]\n        };\n        var xx = flo_poly_1.default.subtract(get_x_1.getX(rotatedPs2), ps1k.x);\n        var yy = flo_poly_1.default.subtract(get_y_1.getY(rotatedPs2), ps1k.y);\n        var rootsx = flo_poly_1.default.allRoots(xx, 0, 1);\n        var rootsy = flo_poly_1.default.allRoots(yy, 0, 1);\n        for (var j = 0; j < rootsx.length; j++) {\n            var rootx = rootsx[j];\n            for (var l = 0; l < rootsy.length; l++) {\n                var rooty = rootsy[l];\n                if (Math.abs(rootx - rooty) < DELTA) {\n                    var t = (rootx + rooty) / 2;\n                    var tk = t * k;\n                    if (t >= 0 && t <= 1 && tk >= 0 && tk <= 1) {\n                        tPairs.push([tk, t]);\n                    }\n                }\n            }\n        }\n    }\n    return tPairs;\n}\nexports.bezier3IntersectionSylvester = bezier3IntersectionSylvester;\n\n\n\n},{\"../get-x\":27,\"../get-y\":28,\"flo-poly\":42,\"flo-vector2d\":50}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar coincident_1 = _dereq_(\"../coincident\");\nvar from_to_1 = _dereq_(\"../from-to\");\nvar get_distance_to_line_function_1 = _dereq_(\"./get-distance-to-line-function\");\nvar calc_other_t_1 = _dereq_(\"./calc-other-t\");\nvar geo_clip_1 = _dereq_(\"./geo-clip\");\nvar center_1 = _dereq_(\"./center\");\nvar evaluate_1 = _dereq_(\"../evaluate\");\nvar fat_line_1 = _dereq_(\"../debug/fat-line\");\n/**\n * Extremely accurate and extremely fast (cubically convergent in general with\n * fast iteration steps) algorithm that returns the intersections between two\n * cubic beziers.\n *\n * At stretches where the two curves run extremely close to (or on top of) each\n * other and curve the same direction an interval is returned instead of a\n * point. This tolerance can be set by the Δ parameter.\n *\n * The algorithm is based on a <a href=\"http://scholarsarchive.byu.edu/cgi/viewcontent.cgi?article=2206&context=etd\">paper</a>\n * that finds the intersection of a fat line and a so-called geometric interval\n * making it faster and more accurate than the standard fat-line intersection\n * algorithm. The algorithm has been modified to prevent run-away recursion\n * by checking for coincident pieces at subdivision steps.\n *\n * @param ps1 - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @param ps2 - Another cubic bezier\n * @param δ - An optional tolerance to within which the t parameter\n * should be calculated - defaults to the minimum value of 24*Number.EPSILON or\n * approximately 5e-15. Note that it might not make sense to set this to as\n * large as say 1e-5 since only a single iteration later the maximum accuracy\n * will be attained and not much speed will be gained anyway. Similarly if δ is\n * set to 1e-2 only two iterations will be saved. This is due to the algorithm\n * being cubically convergent (usually converging in about 4 to 8 iterations for\n * typical intersections).\n * @param Δ - A tolerance that indicates how closely a stretch of the\n * beziers can run together before being considered coincident. Defaults to the\n * minimum possible value of 1e-6 if not specified.\n * @returns An array that contains the t-value pairs at intersection\n * of the first and second beziers respectively. The array can also contain t\n * range pairs for coincident pieces that can be either used or ignored\n * depending on the application, e.g. the return value might be [[0.1,0.2],\n * [0.3,0.5],[[0.4,0.5],[0.6,0.7]]] that indicates intersection points at t\n * values of t1=0.1 and t2=0.2 for the first and second bezier respectively as\n * well as at t1=0.3 and t2=0.5 and finally indicates the curves to be nearly\n * coincident from t1=0.4 to t1=0.5 for the first bezier and t2=0.6 to t=0.7 for\n * the second bezier.\n */\nfunction bezier3Intersection(ps1, ps2, δ, Δ) {\n    // The minimum value Δ can be. If it is too small the algorithm may take too\n    // long in cases where the two curves run extremely close to each other for\n    // their entire length and curve the same direction.\n    var ΔMin = 1e-6;\n    // This is an estimate of the relative floating point error during clipping.\n    // A bound is given by |δP| = 2n*max_k(|b_k|)η, where n = 3 (cubic), b_k\n    // are the control points indexed by k=0,1,2,3 and η is machine epsilon, \n    // i.e. Number.EPSILON. We quadruple the bound to be sure.\n    //const δMin = 6*4*Number.EPSILON; \n    var δMin = 6 * 4 * 8 * Number.EPSILON;\n    // Maximum error - limited to take rounding error into account.\n    if (δ === undefined) {\n        δ = 0;\n    }\n    δ = Math.max(δ, δMin);\n    if (Δ === undefined) {\n        Δ = ΔMin;\n    }\n    Δ = Math.max(Δ, ΔMin);\n    var flip = 0;\n    // Intersection t values for both beziers\n    var tss = [];\n    var kk = 0;\n    if (typeof _bez_debug_ !== 'undefined') {\n        _bez_debug_.generated.elems.beziers.push([ps1, ps2]);\n        _bez_debug_.generated.elems.fatLine.push(new fat_line_1.FatLine([[0, 0], [1e-10, 1e-10]], 0, 0) // unused\n        );\n    }\n    var stack = [];\n    stack.push({ ps1: ps1, ps2: ps2, tRange1: [0, 1], tRange2: [0, 1], idx: 1 });\n    while (stack.length !== 0) {\n        var toCheck = stack.pop();\n        var _ps = toCheck.ps1,\n            _ps2 = toCheck.ps2,\n            tRange1 = toCheck.tRange1,\n            tRange2 = toCheck.tRange2,\n            idx = toCheck.idx;\n\n        f(_ps, _ps2, tRange1, tRange2, idx);\n    }\n    //f(ps1, ps2, [0,1], [0,1], 1);\n    if (typeof _bez_debug_ !== 'undefined') {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = tss[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var ts = _step.value;\n\n                _bez_debug_.generated.elems.intersection.push(evaluate_1.evaluate(ps1, ts[0]));\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    return tss;\n    // Helper function\n    function f(Q_, P_, qRange, pRange, idx) {\n        var cidx = idx === 0 ? 1 : 0; // Counter flip-flop index\n        // Move intersection toward the origin to prevent floating point issues\n        // that are introduced specifically by the getLineEquation function. \n        // This allows us to get a relative error in the final result usually in \n        // the 10 ULPS or less range.\n        //let [mx, my] = cc(P_, Q_); // TODO - REMOVE! JUST FOR TESTING\n\n        var _center_1$center = center_1.center(P_, Q_);\n\n        var _center_1$center2 = _slicedToArray(_center_1$center, 2);\n\n        P_ = _center_1$center2[0];\n        Q_ = _center_1$center2[1];\n\n        if (typeof _bez_debug_ !== 'undefined') {\n            _bez_debug_.generated.elems.beziers.push([P_, Q_]);\n        }\n\n        var _Q_ = Q_,\n            _Q_2 = _slicedToArray(_Q_, 4),\n            Q0 = _Q_2[0],\n            Q3 = _Q_2[3];\n        // Get the implict line equation for the line defined by the first and \n        // last control point of Q. This equation gives the distance between any \n        // point and the line.\n\n\n        var dQ = void 0;\n        var dMin = void 0;\n        var dMax = void 0;\n        flip++;\n        var doA = flip === 1 || flip === 2;\n        if (flip === 4) {\n            flip = 0;\n        }\n        //if (doA) {\n        dQ = get_distance_to_line_function_1.getDistanceToLineFunction([Q0, Q3]);\n        // Calculate the distance from the control points of Q to the line \n        var dQi = function dQi(i) {\n            return dQ(Q_[i]);\n        };\n\n        var _map = [1, 2].map(dQi),\n            _map2 = _slicedToArray(_map, 2),\n            dQ1 = _map2[0],\n            dQ2 = _map2[1];\n        // Calculate the fat line of Q.\n\n\n        var C = dQ1 * dQ2 > 0 ? 3 / 4 : 4 / 9;\n        dMin = C * Math.min(0, dQ1, dQ2);\n        dMax = C * Math.max(0, dQ1, dQ2);\n        if (typeof _bez_debug_ !== 'undefined') {\n            _bez_debug_.generated.elems.fatLine.push(new fat_line_1.FatLine([Q0, Q3], dMin, dMax));\n        }\n        /*} else if (!doA) {\n            \r\n            let mid = [(Q0[0] + Q3[0]) / 2, (Q0[1] + Q3[1]) / 2];\n            // Rotate line [Q0,Q3]\n            let l_ = [[-Q0[1], Q0[0]], [-Q3[1], Q3[0]]];\n              let v = [l_[1][0] - l_[0][0], l_[1][1] - l_[0][1]];\n            let l = [\n                [mid[0], mid[1]],\n                [mid[0] + v[0], mid[1] + v[1]]\n            ];\n            dQ = getDistanceToLineFunction(l);\n              // Calculate the distance from the control points of Q to the line\n            let dQi = (i: number) => dQ(Q_[i]);\n            let dQs = [0,1,2,3].map(dQi);\n            let [dQ0,dQ1,dQ2,dQ3] = dQs;\n              // Calculate the fat line of Q.\n            dMin = Math.min(0,dQ0,dQ1,dQ2,dQ3);\n            dMax = Math.max(0,dQ0,dQ1,dQ2,dQ3);\n              //console.log(dMin, dMax)\n            if (typeof _bez_debug_ !== 'undefined') {\n                _bez_debug_.generated.elems.fatLine.push(\n                    new FatLine(l, dMin, dMax)\n                );\n            }\n        }*/\n\n        var _geo_clip_1$geoClip = geo_clip_1.geoClip(P_, dQ, dMin, dMax),\n            tMin = _geo_clip_1$geoClip.tMin,\n            tMax = _geo_clip_1$geoClip.tMax;\n\n        if (tMin === Number.POSITIVE_INFINITY) {\n            return; // No intersection\n        }\n        // The paper calls for a heuristic that if less than 30% will be\n        // clipped, rather split the longest curve and find intersections in the\n        // two halfs seperately.\n        if (tMax - tMin > 0.7) {\n            // Some length measure\n            var pSpan = pRange[1] - pRange[0];\n            var qSpan = qRange[1] - qRange[0];\n            var pq = coincident_1.coincident(P_, Q_);\n            if (pq !== undefined) {\n                return;\n            }\n            // Split the curve in half\n            if (pSpan <= qSpan) {\n                cidx = idx;\n                var _ref = [Q_, P_];\n                P_ = _ref[0];\n                Q_ = _ref[1];\n                var _ref2 = [qRange, pRange];\n                pRange = _ref2[0];\n                qRange = _ref2[1];\n            }\n            // Update t range.\n            var _span = pRange[1] - pRange[0];\n            // 1st half\n            var tMinA = pRange[0];\n            var tMaxA = tMinA + _span / 2;\n            // 2nd half\n            var tMinB = tMaxA;\n            var tMaxB = pRange[1];\n            var A = from_to_1.fromTo(P_)(0, 0.5);\n            var B = from_to_1.fromTo(P_)(0.5, 1);\n            stack.push({ ps1: A, ps2: Q_, tRange1: [tMinA, tMaxA], tRange2: qRange, idx: cidx });\n            stack.push({ ps1: B, ps2: Q_, tRange1: [tMinB, tMaxB], tRange2: qRange, idx: cidx });\n            //f(A, Q_, [tMinA, tMaxA], qRange, cidx);\n            //f(B, Q_, [tMinB, tMaxB], qRange, cidx);\n            return;\n        }\n        // Update t range.\n        var span = pRange[1] - pRange[0];\n        var tMin_ = tMin * span + pRange[0];\n        var tMax_ = tMax * span + pRange[0];\n        // Clip\n        P_ = from_to_1.fromTo(P_)(tMin, tMax);\n        if (Math.abs(tMax_ - tMin_) < δ) {\n            var t1 = (tMax_ + tMin_) / 2;\n            var _pq = idx === 0 ? [ps1, ps2] : [ps2, ps1];\n            var t2 = calc_other_t_1.calcOtherT(t1, _pq[0], _pq[1]);\n            if (t2 === undefined) {\n                return undefined;\n            }\n            var _ts = idx === 0 ? [t1, t2] : [t2, t1];\n            tss.push(_ts);\n            return;\n        }\n        // Swap Q and P and iterate.\n        stack.push({ ps1: P_, ps2: Q_, tRange1: [tMin_, tMax_], tRange2: qRange, idx: cidx });\n        //f(P_, Q_, [tMin_,tMax_], qRange, cidx);\n    }\n}\nexports.bezier3Intersection = bezier3Intersection;\n\n\n\n},{\"../coincident\":11,\"../debug/fat-line\":15,\"../evaluate\":21,\"../from-to\":24,\"./calc-other-t\":6,\"./center\":7,\"./geo-clip\":8,\"./get-distance-to-line-function\":9}],6:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar evaluate_1 = _dereq_(\"../evaluate\");\nvar ts_at_x_1 = _dereq_(\"../ts-at-x\");\nvar ts_at_y_1 = _dereq_(\"../ts-at-y\");\n/**\n * Calculates the t-value of the closest point on Q to P(t).\n * @param δ\n * @param t\n * @param P\n * @param Q\n */\nfunction calcOtherT(t, P, Q) {\n    // Get some length measure on P and Q\n    var max = Math.max(P[0][0], P[0][1], P[1][0], P[1][1], P[2][0], P[2][1], P[3][0], P[3][1], Q[0][0], Q[0][1], Q[1][0], Q[1][1], Q[2][0], Q[2][1], Q[3][0], Q[3][1]);\n    var pp = evaluate_1.evaluate(P)(t);\n\n    var _pp = _slicedToArray(pp, 2),\n        x = _pp[0],\n        y = _pp[1];\n\n    var tqsh = ts_at_y_1.tsAtY(Q, y);\n    var tqsv = ts_at_x_1.tsAtX(Q, x);\n    if (!tqsh.length && !tqsv.length) {\n        return undefined;\n    }\n    var tqs = [].concat(_toConsumableArray(tqsh), _toConsumableArray(tqsv));\n    var bestT = undefined;\n    var bestD = Number.POSITIVE_INFINITY;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = tqs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var tq = _step.value;\n\n            var pq = evaluate_1.evaluate(Q)(tq);\n            var d = flo_vector2d_1.squaredDistanceBetween(pp, pq);\n            if (d < bestD) {\n                bestD = d;\n                bestT = tq;\n            }\n        }\n        // If the best distance > the max allowed tolerance then no intersection\n        // occured - this happens only in special cases where clipping occured at\n        // the endpoint of a curve.\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    var maxTolerance = 256 * 24 * Number.EPSILON * max;\n    if (bestD > maxTolerance * maxTolerance) {\n        return undefined;\n    }\n    return bestT;\n}\nexports.calcOtherT = calcOtherT;\n\n\n\n},{\"../evaluate\":21,\"../ts-at-x\":33,\"../ts-at-y\":34,\"flo-vector2d\":50}],7:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\n/**\n * Return the given two beziers but translated such that the shorter (by\n * some length measure) is closer to the origin.\n * @private\n * @param P\n * @param Q\n */\nfunction center(P, Q) {\n    var _P = P,\n        _P2 = _slicedToArray(_P, 4),\n        P0 = _P2[0],\n        P1 = _P2[1],\n        P2 = _P2[2],\n        P3 = _P2[3];\n\n    var _Q = Q,\n        _Q2 = _slicedToArray(_Q, 4),\n        Q0 = _Q2[0],\n        Q1 = _Q2[1],\n        Q2 = _Q2[2],\n        Q3 = _Q2[3];\n\n    var lengthP = flo_vector2d_1.squaredDistanceBetween(P0, P1) + flo_vector2d_1.squaredDistanceBetween(P1, P2) + flo_vector2d_1.squaredDistanceBetween(P2, P3);\n    var lengthQ = flo_vector2d_1.squaredDistanceBetween(Q0, Q1) + flo_vector2d_1.squaredDistanceBetween(Q1, Q2) + flo_vector2d_1.squaredDistanceBetween(Q2, Q3);\n    var moveX = void 0;\n    var moveY = void 0;\n    if (lengthQ < lengthP) {\n        moveX = (Q0[0] + Q1[0] + Q2[0] + Q3[0]) / 4;\n        moveY = (Q0[1] + Q1[1] + Q2[1] + Q3[1]) / 4;\n    } else {\n        moveX = (P0[0] + P1[0] + P2[0] + P3[0]) / 4;\n        moveY = (P0[1] + P1[1] + P2[1] + P3[1]) / 4;\n    }\n    P = P.map(function (x) {\n        return [x[0] - moveX, x[1] - moveY];\n    });\n    Q = Q.map(function (x) {\n        return [x[0] - moveX, x[1] - moveY];\n    });\n    return [P, Q];\n}\nexports.center = center;\n\n\n\n},{\"flo-vector2d\":50}],8:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar to_hybrid_quadratic_1 = _dereq_(\"../to-hybrid-quadratic\");\n/**\n * @param P\n * @param dQ\n * @param dMin\n * @param dMax\n */\nfunction geoClip(P, dQ, dMin, dMax) {\n    var hq = to_hybrid_quadratic_1.toHybridQuadratic(P);\n    var dH0 = dQ(hq[0]);\n    var dH2 = dQ(hq[2]);\n    var dH10 = dQ(hq[1][0]);\n    var dH11 = dQ(hq[1][1]);\n    var dHmin = Math.min(dH10, dH11);\n    var dHmax = Math.max(dH10, dH11);\n    var DyMin = [dH0 - 2 * dHmin + dH2, -2 * dH0 + 2 * dHmin, dH0];\n    var DyMax = [dH0 - 2 * dHmax + dH2, -2 * dH0 + 2 * dHmax, dH0];\n    var errorBound = 2 * Math.max(flo_poly_1.default.hornerErrorBound(DyMin, 1), flo_poly_1.default.hornerErrorBound(DyMax, 1));\n    dMin = dMin - errorBound;\n    dMax = dMax + errorBound;\n    var DyMinMin = DyMin.slice();\n    DyMinMin[2] = DyMinMin[2] - dMin;\n    var DyMinMax = DyMin.slice();\n    DyMinMax[2] = DyMinMax[2] - dMax;\n    var DyMaxMin = DyMax.slice();\n    DyMaxMin[2] = DyMaxMin[2] - dMin;\n    var DyMaxMax = DyMax.slice();\n    DyMaxMax[2] = DyMaxMax[2] - dMax;\n    var tMin = Number.POSITIVE_INFINITY;\n    var tMax = Number.NEGATIVE_INFINITY;\n    var rootsMinMin = flo_poly_1.default.allRoots(DyMinMin, 0, 1);\n    var rootsMinMax = flo_poly_1.default.allRoots(DyMinMax, 0, 1);\n    var rootsMaxMin = flo_poly_1.default.allRoots(DyMaxMin, 0, 1);\n    var rootsMaxMax = flo_poly_1.default.allRoots(DyMaxMax, 0, 1);\n    tMin = Math.min.apply(Math, _toConsumableArray(rootsMinMin).concat(_toConsumableArray(rootsMinMax), _toConsumableArray(rootsMaxMin), _toConsumableArray(rootsMaxMax)));\n    tMax = Math.max.apply(Math, _toConsumableArray(rootsMinMin).concat(_toConsumableArray(rootsMinMax), _toConsumableArray(rootsMaxMin), _toConsumableArray(rootsMaxMax)));\n    if (dH0 >= dMin && dH0 <= dMax) {\n        tMin = 0;\n    }\n    if (dH2 >= dMin && dH2 <= dMax) {\n        tMax = 1;\n    }\n    if (tMin < 0) {\n        tMin = 0;\n    }\n    if (tMax > 1) {\n        tMax = 1;\n    }\n    return { tMin: tMin, tMax: tMax };\n}\nexports.geoClip = geoClip;\n\n\n\n},{\"../to-hybrid-quadratic\":32,\"flo-poly\":42}],9:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_line_equation_1 = _dereq_(\"./get-line-equation\");\n/**\n * @private\n * @param l\n */\nfunction getDistanceToLineFunction(l) {\n    var _get_line_equation_1$ = get_line_equation_1.getLineEquation(l),\n        _get_line_equation_1$2 = _slicedToArray(_get_line_equation_1$, 3),\n        a = _get_line_equation_1$2[0],\n        b = _get_line_equation_1$2[1],\n        c = _get_line_equation_1$2[2];\n\n    return function (p) {\n        return a * p[0] + b * p[1] + c;\n    };\n}\nexports.getDistanceToLineFunction = getDistanceToLineFunction;\n\n\n\n},{\"./get-line-equation\":10}],10:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Get the implicit line equation from two 2d points in the form f(x,y) ax + by + c = 0\n * returned as the array [a,b,c].\n * @param l - A line given by two points, e.g. [[2,0],[3,3]]\n */\nfunction getLineEquation(l) {\n    var _l = _slicedToArray(l, 2),\n        _l$ = _slicedToArray(_l[0], 2),\n        x1 = _l$[0],\n        y1 = _l$[1],\n        _l$2 = _slicedToArray(_l[1], 2),\n        x2 = _l$2[0],\n        y2 = _l$2[1];\n\n    var a = y1 - y2;\n    var b = x2 - x1;\n    var c = x1 * y2 - x2 * y1;\n    var d = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    return [a / d, b / d, c / d];\n}\nexports.getLineEquation = getLineEquation;\n\n\n\n},{}],11:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Vector = _dereq_(\"flo-vector2d\");\nvar evaluate_1 = _dereq_(\"./evaluate\");\nvar line_intersection_1 = _dereq_(\"./line-intersection\");\nvar normal_1 = _dereq_(\"./normal\");\nvar sdst = Vector.squaredDistanceBetween;\n/**\n * Check if the two given cubic beziers are nearly coincident everywhere along\n * a finite stretch and returns the coincident stretch (if any), otherwise\n * returns undefined.\n * @param P - A cubic bezier curve.\n * @param Q - Another cubic bezier curve.\n * @param δ - An indication of how closely the curves should stay to\n * each other before considered coincident.\n */\nfunction coincident(P, Q) {\n    var δ = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1e-6;\n\n    //let [P0, P1, P2, P3] = P; \n    //let [Q0, Q1, Q2, Q3] = Q; \n    var PtoQs = [0.01, 0.99].map(function (i) {\n        return calcPointAndNeighbor(P, Q, i);\n    });\n    var QtoPs = [0.01, 0.99].map(function (i) {\n        return calcPointAndNeighbor(Q, P, i);\n    });\n    // Check if start and end points are coincident.\n    var tStartQ = 0.01;\n    var tEndQ = 0.99;\n    var tStartP = 0.01;\n    var tEndP = 0.99;\n    /*\n    let c = 0;\n    if (PtoQs[0].d <= δ) { tStartQ = PtoQs[0].t;  c++; }\n    if (PtoQs[1].d <= δ) { tEndQ   = PtoQs[1].t;  c++; }\n    if (QtoPs[0].d <= δ) { tStartP = QtoPs[0].t;  c++; }\n    if (QtoPs[1].d <= δ) { tEndP   = QtoPs[1].t;  c++; }\n    // At least 2 endpoints must be coincident.\n    if (c < 2) { return undefined; }\n    */\n    if (PtoQs[0].d <= δ) {\n        tStartQ = PtoQs[0].t;\n    }\n    if (PtoQs[1].d <= δ) {\n        tEndQ = PtoQs[1].t;\n    }\n    if (QtoPs[0].d <= δ) {\n        tStartP = QtoPs[0].t;\n    }\n    if (QtoPs[1].d <= δ) {\n        tEndP = QtoPs[1].t;\n    }\n    if (tStartP > tEndP) {\n        var _ref = [tEndP, tStartP];\n        tStartP = _ref[0];\n        tEndP = _ref[1];\n    }\n    if (tStartQ > tEndQ) {\n        var _ref2 = [tEndQ, tStartQ];\n        tStartQ = _ref2[0];\n        tEndQ = _ref2[1];\n    }\n    var tSpanP = tEndP - tStartP;\n    var tSpanQ = tEndQ - tStartQ;\n    // We must check at least 10 points to ensure entire curve is coincident, \n    // otherwise we may simply have found intersection points. We cannot simply \n    // check the control points for closeness since well seperated control \n    // points does not necessarily translate into well seperated curves.\n    //let lengthP = sdst(P0,P1) + sdst(P1,P2) + sdst(P2,P3);\n    //let lengthQ = sdst(Q0,Q1) + sdst(Q1,Q2) + sdst(Q2,Q3);\n    // If the overlapping part is smaller than 1/10 (a heuristical value) then\n    // do not consider pieces overlapping.\n    if (tSpanP < 0.1 && tSpanQ < 0.1) {\n        return undefined;\n    }\n    var res = true;\n    //for (let i=1; i<10; i++) {\n    for (var i = 0; i < 10; i++) {\n        var t = tStartP + tSpanP * (i / 10);\n\n        var _calcPointAndNeighbor = calcPointAndNeighbor(P, Q, t),\n            d = _calcPointAndNeighbor.d;\n\n        if (d > δ) {\n            return undefined;\n        }\n    }\n    return { p: [tStartP, tEndP], q: [tStartQ, tEndQ] };\n}\nexports.coincident = coincident;\nfunction calcPointAndNeighbor(P, Q, t) {\n    // TODO - must also check crossing of normals - for if two curves open\n    // at endpoints and stop essentially at same point.\n    var pp1 = evaluate_1.evaluate(P)(t);\n    //let normalVector = normal(P)(0);\n    var normalVector = normal_1.normal(P)(t);\n    var pp2 = Vector.translate(pp1, normalVector);\n    var ts = line_intersection_1.lineIntersection(Q, [pp1, pp2]);\n    var bestT = undefined;\n    var bestQ = undefined;\n    var bestD = Number.POSITIVE_INFINITY;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = ts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _t = _step.value;\n\n            var q = evaluate_1.evaluate(Q)(_t);\n            var d = Vector.distanceBetween(q, pp1);\n            if (d < bestD) {\n                bestT = _t;\n                bestQ = q;\n                bestD = d;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return { t: bestT, p: bestQ, d: bestD };\n}\n\n\n\n},{\"./evaluate\":21,\"./line-intersection\":29,\"./normal\":30,\"flo-vector2d\":50}],12:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction deCasteljau(cs, t) {\n    // See https://en.wikipedia.org/wiki/De_Casteljau%27s_algorithm\n    function f(t) {\n        if (t === 0) {\n            return [[cs[0], cs[0], cs[0], cs[0]], cs];\n        }\n        if (t === 1) {\n            return [cs, [cs[3], cs[3], cs[3], cs[3]]];\n        }\n        var t_ = 1 - t;\n        // j === 0, ..., n (with n === 3 -> cubic bezier)\n        var b00 = cs[0]; // i === 0 \n        var b10 = cs[1]; // i === 1 \n        var b20 = cs[2]; // i === 2 \n        var b30 = cs[3]; // i === 3 \n        // j === 1\n        var b01 = b00 * t_ + b10 * t; // i === 0\n        var b11 = b10 * t_ + b20 * t; // i === 1\n        var b21 = b20 * t_ + b30 * t; // i === 2\n        // j === 2\n        var b02 = b01 * t_ + b11 * t; // i === 0\n        var b12 = b11 * t_ + b21 * t; // i === 1\n        // j === 3\n        var b03 = b02 * t_ + b12 * t; // i === 0\n        return [[b00, b01, b02, b03], [b03, b12, b21, b30]];\n    }\n    return t === undefined ? f : f(t); // Curry\n}\nexports.deCasteljau = deCasteljau;\n\n\n\n},{}],13:[function(_dereq_,module,exports){\n\"use strict\";\n//import * as Vector from 'flo-vector2d';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar draw_elem_1 = _dereq_(\"./draw-elem/draw-elem\");\n\nvar BezDebug =\n/**\n * @param config - configuration settings.\n * @param fs - some useful functions.\n * @private\n */\nfunction BezDebug(draw, g) {\n    _classCallCheck(this, BezDebug);\n\n    //(this as any).Bezier3 = Bezier3; // Included only for quick debugging from console\n    //(this as any).Vector2d = Vector; // ...\n    this.draw = draw;\n    this.g = g;\n    //-----------------------------------------------\n    // Generated by debug object for later inspection\n    //-----------------------------------------------\n    this.generated = {\n        elems: {\n            beziers: [],\n            fatLine: [],\n            looseBoundingBox: [],\n            tightBoundingBox: [],\n            extreme: [],\n            boundingHull: [],\n            intersection: []\n        }\n    };\n    this.fs = {\n        draw: draw,\n        drawElem: draw_elem_1.drawElemFunctions\n    };\n};\n\nexports.BezDebug = BezDebug;\n\n\n\n},{\"./draw-elem/draw-elem\":14}],14:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nfunction fatLine(g, fatLine) {\n    var draw = _bez_debug_.fs.draw;\n    var l = fatLine.l,\n        minD = fatLine.minD,\n        maxD = fatLine.maxD;\n\n    var _l = _slicedToArray(l, 2),\n        lp1 = _l[0],\n        lp2 = _l[1];\n\n    var E = 1024;\n    var lv = flo_vector2d_1.fromTo(lp1, lp2);\n    var lvTimes10 = [+E * lv[0], +E * lv[1]];\n    var reverseLvTimes10 = [-E * lv[0], -E * lv[1]];\n    var normal = [-lv[1], lv[0]]; // Rotate by -90 degrees\n    var normMin = flo_vector2d_1.toLength(normal, minD);\n    var normMax = flo_vector2d_1.toLength(normal, maxD);\n    var extLp1 = flo_vector2d_1.translate(lp1, reverseLvTimes10);\n    var extLp2 = flo_vector2d_1.translate(lp2, lvTimes10);\n    var nl11 = flo_vector2d_1.translate(extLp1, normMin);\n    var nl12 = flo_vector2d_1.translate(extLp2, normMin);\n    var nl21 = flo_vector2d_1.translate(extLp1, normMax);\n    var nl22 = flo_vector2d_1.translate(extLp2, normMax);\n    var nl1 = [nl11, nl12];\n    var nl2 = [nl21, nl22];\n    var $line1 = draw.line(g, nl1);\n    var $line2 = draw.line(g, nl2);\n    return [].concat(_toConsumableArray($line1), _toConsumableArray($line2));\n}\nfunction beziers(g, beziers) {\n    var draw = _bez_debug_.fs.draw;\n    var $bezier1 = draw.bezier(g, beziers[0], 'blue thin5 nofill');\n    var $bezier2 = draw.bezier(g, beziers[1], 'green thin5 nofill');\n    var size = getSize([].concat(_toConsumableArray(beziers[0]), _toConsumableArray(beziers[1]))) / 400;\n    var $dots = [].concat(_toConsumableArray(draw.dot(g, beziers[0][0], size, 'blue')), _toConsumableArray(draw.dot(g, beziers[0][1], size, 'blue')), _toConsumableArray(draw.dot(g, beziers[0][2], size, 'blue')), _toConsumableArray(draw.dot(g, beziers[0][3], size, 'blue')), _toConsumableArray(draw.dot(g, beziers[1][0], size, 'green')), _toConsumableArray(draw.dot(g, beziers[1][1], size, 'green')), _toConsumableArray(draw.dot(g, beziers[1][2], size, 'green')), _toConsumableArray(draw.dot(g, beziers[1][3], size, 'green')));\n    return [].concat(_toConsumableArray($bezier1), _toConsumableArray($bezier2), _toConsumableArray($dots));\n}\nfunction getSize(ps) {\n    var minX = Number.POSITIVE_INFINITY;\n    var minY = Number.POSITIVE_INFINITY;\n    var maxX = Number.NEGATIVE_INFINITY;\n    var maxY = Number.NEGATIVE_INFINITY;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = ps[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var p = _step.value;\n\n            if (p[0] < minX) {\n                minX = p[0];\n            }\n            if (p[1] < minY) {\n                minY = p[1];\n            }\n            if (p[0] > maxX) {\n                maxX = p[0];\n            }\n            if (p[1] > maxY) {\n                maxY = p[1];\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    return Math.max(width, height);\n}\nfunction intersection(g, p) {\n    var $elems = _bez_debug_.fs.draw.crossHair(g, p, 'red thin5 nofill', 0.05);\n    return $elems;\n}\nfunction extreme(g, extreme) {\n    var $elems = _bez_debug_.fs.draw.crossHair(g, extreme.p, 'red thin10 nofill', 0.05);\n    return $elems;\n}\nfunction boundingHull(g, hull) {\n    var $polygon = _bez_debug_.fs.draw.polygon(g, hull, 'thin5 black nofill');\n    return $polygon;\n}\nfunction looseBoundingBox(g, box) {\n    var $box = _bez_debug_.fs.draw.rect(g, box, 'thin5 brown nofill');\n    return $box;\n}\nfunction tightBoundingBox(g, box) {\n    var $box = _bez_debug_.fs.draw.polygon(g, box, 'thin5 black nofill');\n    return $box;\n}\nvar drawElemFunctions = {\n    beziers: beziers,\n    intersection: intersection,\n    extreme: extreme,\n    boundingHull: boundingHull,\n    looseBoundingBox: looseBoundingBox,\n    tightBoundingBox: tightBoundingBox,\n    fatLine: fatLine\n};\nexports.drawElemFunctions = drawElemFunctions;\n\n\n\n},{\"flo-vector2d\":50}],15:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar FatLine = function FatLine(l, minD, maxD) {\n    _classCallCheck(this, FatLine);\n\n    this.l = l;\n    this.minD = minD;\n    this.maxD = maxD;\n};\n\nexports.FatLine = FatLine;\n\n\n\n},{}],16:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar de_casteljau_1 = _dereq_(\"./de-casteljau\");\nfunction evalDeCasteljau(ps, t) {\n    var _ps = _slicedToArray(ps, 4),\n        _ps$ = _slicedToArray(_ps[0], 2),\n        x0 = _ps$[0],\n        y0 = _ps$[1],\n        _ps$2 = _slicedToArray(_ps[1], 2),\n        x1 = _ps$2[0],\n        y1 = _ps$2[1],\n        _ps$3 = _slicedToArray(_ps[2], 2),\n        x2 = _ps$3[0],\n        y2 = _ps$3[1],\n        _ps$4 = _slicedToArray(_ps[3], 2),\n        x3 = _ps$4[0],\n        y3 = _ps$4[1];\n\n    var evX = de_casteljau_1.deCasteljau([x0, x1, x2, x3]);\n    var evY = de_casteljau_1.deCasteljau([y0, y1, y2, y3]);\n    function f(t) {\n        if (t === 0) {\n            return [x0, y0];\n        } else if (t === 1) {\n            return [x3, y3];\n        }\n        return [evX(t)[1][0], evY(t)[1][0]];\n    }\n    return t === undefined ? f : f(t);\n}\nexports.evalDeCasteljau = evalDeCasteljau;\n\n\n\n},{\"./de-casteljau\":12}],17:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar get_dx_1 = _dereq_(\"./get-dx\");\nfunction evaluateDx(ps, t) {\n    var dPs = get_dx_1.getDx(ps); // Speed optimizing cache\n    var f = flo_poly_1.default.evaluate(dPs);\n    return t === undefined ? f : f(t); // Curry\n}\nexports.evaluateDx = evaluateDx;\n\n\n\n},{\"./get-dx\":25,\"flo-poly\":42}],18:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar get_dy_1 = _dereq_(\"./get-dy\");\nfunction evaluateDy(ps, t) {\n    var dPs = get_dy_1.getDy(ps); // Speed optimizing cache\n    var f = flo_poly_1.default.evaluate(dPs);\n    return t === undefined ? f : f(t); // Curry\n}\nexports.evaluateDy = evaluateDy;\n\n\n\n},{\"./get-dy\":26,\"flo-poly\":42}],19:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar get_x_1 = _dereq_(\"./get-x\");\nfunction evaluateX(ps, t) {\n    var xPs = get_x_1.getX(ps); // Speed optimizing cache\n    var evPs = flo_poly_1.default.evaluate(xPs);\n    function f(t) {\n        if (t === 0) {\n            return ps[0][0];\n        }\n        if (t === 1) {\n            return ps[3][0];\n        }\n        return evPs(t);\n    }\n    return t === undefined ? f : f(t); // Curry\n}\nexports.evaluateX = evaluateX;\n\n\n\n},{\"./get-x\":27,\"flo-poly\":42}],20:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar get_y_1 = _dereq_(\"./get-y\");\nfunction evaluateY(ps, t) {\n    var yPs = get_y_1.getY(ps); // Speed optimizing cache\n    var evPs = flo_poly_1.default.evaluate(yPs);\n    function f(t) {\n        if (t === 0) {\n            return ps[0][1];\n        }\n        if (t === 1) {\n            return ps[3][1];\n        }\n        return evPs(t);\n    }\n    return t === undefined ? f : f(t); // Curry\n}\nexports.evaluateY = evaluateY;\n\n\n\n},{\"./get-y\":28,\"flo-poly\":42}],21:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar evaluate_x_1 = _dereq_(\"./evaluate-x\");\nvar evaluate_y_1 = _dereq_(\"./evaluate-y\");\nfunction evaluate(ps, t) {\n    var _ps = _slicedToArray(ps, 4),\n        _ps$ = _slicedToArray(_ps[0], 2),\n        x0 = _ps$[0],\n        y0 = _ps$[1],\n        _ps$2 = _slicedToArray(_ps[3], 2),\n        x3 = _ps$2[0],\n        y3 = _ps$2[1];\n\n    var evX = evaluate_x_1.evaluateX(ps);\n    var evY = evaluate_y_1.evaluateY(ps);\n    function f(t) {\n        if (t === 0) {\n            return [x0, y0];\n        } else if (t === 1) {\n            return [x3, y3];\n        }\n        return [evX(t), evY(t)];\n    }\n    return t === undefined ? f : f(t);\n}\nexports.evaluate = evaluate;\n\n\n\n},{\"./evaluate-x\":19,\"./evaluate-y\":20}],22:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar de_casteljau_1 = _dereq_(\"./de-casteljau\");\n/**\n * Returns a cubic bezier curve that starts at the given curve's t=0 and ends\n * at the given t parameter. Uses de Casteljau's algorithm.\n *\n * A loose bound on the accuracy of the resultant points is given by:\n * |δP| = 2n*max_k(|b_k|)η, where n = 3 (cubic), b_k are the control points\n * abd η is Number.EPSILON.\n * @param ps - A cubic bezier curve\n * @param t - The t parameter where the resultant bezier should end\n */\n/*\nfunction from0ToT(ps: number[][], t: number): number[][] {\n    let [[x0, y0], [x1, y1], [x2, y2], [x3, y3]] = ps;\n    \r\n    let s  = 1  - t;\n    let t2 = t  * t;\n    let t3 = t2 * t;\n    let s2 = s  * s;\n    let s3 = s2 * s;\n\r\n    return [\n        [x0, y0],\n        [t*x1  + s*x0, t*y1 + s*y0],\n        [t2*x2 + 2*s*t*x1 + s2*x0, t2*y2 + 2*s*t*y1 + s2*y0],\n        [t3*x3 + 3*s*t2*x2 + 3*s2*t*x1 + s3*x0,\n         t3*y3 + 3*s*t2*y2 + 3*s2*t*y1 + s3*y0]\n    ];\n}\n*/\nfunction from0ToT(ps, t) {\n    var _ps = _slicedToArray(ps, 4),\n        _ps$ = _slicedToArray(_ps[0], 2),\n        x0 = _ps$[0],\n        y0 = _ps$[1],\n        _ps$2 = _slicedToArray(_ps[1], 2),\n        x1 = _ps$2[0],\n        y1 = _ps$2[1],\n        _ps$3 = _slicedToArray(_ps[2], 2),\n        x2 = _ps$3[0],\n        y2 = _ps$3[1],\n        _ps$4 = _slicedToArray(_ps[3], 2),\n        x3 = _ps$4[0],\n        y3 = _ps$4[1];\n\n    var xs = [x0, x1, x2, x3];\n    var ys = [y0, y1, y2, y3];\n\n    var _de_casteljau_1$deCas = _slicedToArray(de_casteljau_1.deCasteljau(xs, t)[0], 4),\n        x0_ = _de_casteljau_1$deCas[0],\n        x1_ = _de_casteljau_1$deCas[1],\n        x2_ = _de_casteljau_1$deCas[2],\n        x3_ = _de_casteljau_1$deCas[3];\n\n    var _de_casteljau_1$deCas2 = _slicedToArray(de_casteljau_1.deCasteljau(ys, t)[0], 4),\n        y0_ = _de_casteljau_1$deCas2[0],\n        y1_ = _de_casteljau_1$deCas2[1],\n        y2_ = _de_casteljau_1$deCas2[2],\n        y3_ = _de_casteljau_1$deCas2[3];\n\n    return [[x0_, y0_], [x1_, y1_], [x2_, y2_], [x3_, y3_]];\n}\nexports.from0ToT = from0ToT;\n\n\n\n},{\"./de-casteljau\":12}],23:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar de_casteljau_1 = _dereq_(\"./de-casteljau\");\n/**\n * Returns a cubic bezier curve that starts at the given t parameter and\n * ends at t=1. Uses de Casteljau's algorithm.\n *\n * A loose bound on the accuracy of the resultant points is given by:\n * |δP| = 2n*max_k(|b_k|)η, where n = 3 (cubic), b_k are the control points\n * abd η is Number.EPSILON.\n * @param ps - A cubic bezier curve\n * @param t - The t parameter where the resultant bezier should start\n */\n/*\nfunction fromTTo1(ps: number[][], t: number): number[][] {\n    let [[x0, y0], [x1, y1], [x2, y2], [x3, y3]] = ps;\n    \r\n    let s  = 1  - t;\n    let t2 = t  * t;\n    let t3 = t2 * t;\n    let s2 = s  * s;\n    let s3 = s2 * s;\n\r\n    return [\n        [t3*x3 + 3*s*t2*x2 + 3*s2*t*x1 + s3*x0,\n         t3*y3 + 3*s*t2*y2 + 3*s2*t*y1 + s3*y0],\n        [t2*x3 + 2*t*s*x2 + s2*x1, t2*y3 + 2*t*s*y2 + s2*y1],\n        [t*x3 + s*x2, t*y3 + s*y2],\n        [x3, y3]\n    ];\n}\n*/\nfunction fromTTo1(ps, t) {\n    var _ps = _slicedToArray(ps, 4),\n        _ps$ = _slicedToArray(_ps[0], 2),\n        x0 = _ps$[0],\n        y0 = _ps$[1],\n        _ps$2 = _slicedToArray(_ps[1], 2),\n        x1 = _ps$2[0],\n        y1 = _ps$2[1],\n        _ps$3 = _slicedToArray(_ps[2], 2),\n        x2 = _ps$3[0],\n        y2 = _ps$3[1],\n        _ps$4 = _slicedToArray(_ps[3], 2),\n        x3 = _ps$4[0],\n        y3 = _ps$4[1];\n\n    var xs = [x0, x1, x2, x3];\n    var ys = [y0, y1, y2, y3];\n\n    var _de_casteljau_1$deCas = _slicedToArray(de_casteljau_1.deCasteljau(xs, t)[1], 4),\n        x0_ = _de_casteljau_1$deCas[0],\n        x1_ = _de_casteljau_1$deCas[1],\n        x2_ = _de_casteljau_1$deCas[2],\n        x3_ = _de_casteljau_1$deCas[3];\n\n    var _de_casteljau_1$deCas2 = _slicedToArray(de_casteljau_1.deCasteljau(ys, t)[1], 4),\n        y0_ = _de_casteljau_1$deCas2[0],\n        y1_ = _de_casteljau_1$deCas2[1],\n        y2_ = _de_casteljau_1$deCas2[2],\n        y3_ = _de_casteljau_1$deCas2[3];\n\n    return [[x0_, y0_], [x1_, y1_], [x2_, y2_], [x3_, y3_]];\n}\nexports.fromTTo1 = fromTTo1;\n\n\n\n},{\"./de-casteljau\":12}],24:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar evaluate_1 = _dereq_(\"./evaluate\");\nvar from_0_to_T_1 = _dereq_(\"./from-0-to-T\");\nvar from_T_to_1_1 = _dereq_(\"./from-T-to-1\");\n/**\n * Returns a cubic bezier curve that starts at the given curve and ends at the\n * given t parameter. Uses de Casteljau's algorithm.\n *\n * A loose bound on the accuracy of the resultant points is given by:\n * |δP| = 2*2n*max_k(|b_k|)η, where n = 3 (cubic), b_k are the control points\n * abd η is Number.EPSILON.\n * @param ps - A cubic bezier curve\n * @param t1 - The t parameter where the resultant bezier should start\n * @param t2 - The t parameter where the resultant bezier should end\n */\nfunction fromTo(ps) {\n    return function (t1, t2) {\n        if (t1 === t2) {\n            // Degenerate case\n            var p = evaluate_1.evaluate(ps, t1);\n            return [p, p, p, p];\n        } else if (t1 === 0 && t2 === 1) {\n            return ps;\n        } else if (t1 === 0) {\n            return from_0_to_T_1.from0ToT(ps, t2);\n        } else if (t2 === 1) {\n            return from_T_to_1_1.fromTTo1(ps, t1);\n        }\n        var t = from_T_to_1_1.fromTTo1(ps, t1);\n        return from_0_to_T_1.from0ToT(t, (t2 - t1) / (1 - t1));\n    };\n}\nexports.fromTo = fromTo;\n\n\n\n},{\"./evaluate\":21,\"./from-0-to-T\":22,\"./from-T-to-1\":23}],25:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar flo_memoize_1 = _dereq_(\"flo-memoize\");\nvar get_x_1 = _dereq_(\"./get-x\");\nvar memoize = flo_memoize_1.default.m1;\n/**\n * Returns the derivative of the power basis representation of the bezier's\n * x-coordinates. This function is memoized on its points parameter by object\n * reference.\n * @param ps - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n */\nvar getDx = memoize(function (ps) {\n  return flo_poly_1.default.differentiate(get_x_1.getX(ps));\n});\nexports.getDx = getDx;\n\n\n\n},{\"./get-x\":27,\"flo-memoize\":41,\"flo-poly\":42}],26:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar flo_memoize_1 = _dereq_(\"flo-memoize\");\nvar get_y_1 = _dereq_(\"./get-y\");\nvar memoize = flo_memoize_1.default.m1;\n/**\n * Returns the derivative of the power basis representation of the bezier's\n * y-coordinates. This function is memoized on its points parameter by object\n * reference.\n * @param ps - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @returns The differentiated power basis polynomial from highest\n * power to lowest, e.g. at^2 + bt + c is returned as [a,b,c]\n */\nvar getDy = memoize(function (ps) {\n  return flo_poly_1.default.differentiate(get_y_1.getY(ps));\n});\nexports.getDy = getDy;\n\n\n\n},{\"./get-y\":28,\"flo-memoize\":41,\"flo-poly\":42}],27:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_memoize_1 = _dereq_(\"flo-memoize\");\nvar memoize = flo_memoize_1.default.m1;\n/**\n * Returns the power basis representation of the bezier's x-coordinates.\n * This function is memoized on its points parameter by object reference.\n * @param ps - A cubic bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n * @returns The power basis polynomial from highest power to lowest,\n * e.g. at^3 + bt^2 + ct + d is returned as [a,b,c,d]\n */\nvar getX = memoize(function (ps) {\n    var _ps = _slicedToArray(ps, 4),\n        _ps$ = _slicedToArray(_ps[0], 1),\n        x0 = _ps$[0],\n        _ps$2 = _slicedToArray(_ps[1], 1),\n        x1 = _ps$2[0],\n        _ps$3 = _slicedToArray(_ps[2], 1),\n        x2 = _ps$3[0],\n        _ps$4 = _slicedToArray(_ps[3], 1),\n        x3 = _ps$4[0];\n\n    return [x3 - 3 * x2 + 3 * x1 - x0, 3 * x2 - 6 * x1 + 3 * x0, 3 * x1 - 3 * x0, x0];\n});\nexports.getX = getX;\n\n\n\n},{\"flo-memoize\":41}],28:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_memoize_1 = _dereq_(\"flo-memoize\");\nvar memoize = flo_memoize_1.default.m1;\n/**\n * Returns the power basis representation of the bezier's y-coordinates.\n * This function is memoized on its points parameter by object reference.\n * @param ps - A bezier, e.g. [[0,0],[1,1],[2,1],[2,0]]\n */\nvar getY = memoize(function (ps) {\n    var _ps = _slicedToArray(ps, 4),\n        _ps$ = _slicedToArray(_ps[0], 2),\n        y0 = _ps$[1],\n        _ps$2 = _slicedToArray(_ps[1], 2),\n        y1 = _ps$2[1],\n        _ps$3 = _slicedToArray(_ps[2], 2),\n        y2 = _ps$3[1],\n        _ps$4 = _slicedToArray(_ps[3], 2),\n        y3 = _ps$4[1];\n\n    return [y3 - 3 * y2 + 3 * y1 - y0, 3 * y2 - 6 * y1 + 3 * y0, 3 * y1 - 3 * y0, y0];\n});\nexports.getY = getY;\n\n\n\n},{\"flo-memoize\":41}],29:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar get_y_1 = _dereq_(\"./get-y\");\n/**\n * Returns the bezier t values of the intersection between the given cubic\n * bezier and the given line.\n * @param ps - The bezier curve\n * @param l - The line given as a start and end point\n */\nfunction lineIntersection(ps, l) {\n    var _l = _slicedToArray(l, 2),\n        _l$ = _slicedToArray(_l[0], 2),\n        x0 = _l$[0],\n        y0 = _l$[1],\n        _l$2 = _slicedToArray(_l[1], 2),\n        x1 = _l$2[0],\n        y1 = _l$2[1];\n\n    var x = x1 - x0,\n        y = y1 - y0;\n\n    if (x === 0 && y === 0) {\n        return [];\n    } // It is not a line, it's a point. \n    // Move the line and the bezier together so the line's first point is on the\n    // origin.\n    ps = flo_vector2d_1.translatePs([-x0, -y0], ps);\n    // Rotate the bezier and line together so the line is y=0.\n    var len = Math.sqrt(x * x + y * y);\n    var sinθ = y / len;\n    var cosθ = x / len;\n    ps = flo_vector2d_1.rotatePs(-sinθ, cosθ, ps);\n    // Find the intersection t values\n    return flo_poly_1.default.allRoots(get_y_1.getY(ps), 0, 1);\n}\nexports.lineIntersection = lineIntersection;\n\n\n\n},{\"./get-y\":28,\"flo-poly\":42,\"flo-vector2d\":50}],30:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tangent_1 = _dereq_(\"./tangent\");\nfunction normal(ps, t) {\n    var tanPs = tangent_1.tangent(ps);\n    function f(t) {\n        var v = tanPs(t);\n        return [v[1], -v[0]];\n    }\n    // Curry\n    return t === undefined ? f : f(t);\n}\nexports.normal = normal;\n\n\n\n},{\"./tangent\":31}],31:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar evaluate_dx_1 = _dereq_(\"./evaluate-dx\");\nvar evaluate_dy_1 = _dereq_(\"./evaluate-dy\");\nfunction tangent(ps, t) {\n    var evDx = evaluate_dx_1.evaluateDx(ps);\n    var evDy = evaluate_dy_1.evaluateDy(ps);\n    function f(t) {\n        var dx = evDx(t);\n        var dy = evDy(t);\n        var d = Math.sqrt(dx * dx + dy * dy);\n        return [dx / d, dy / d];\n    }\n    // Curry\n    return t === undefined ? f : f(t);\n}\nexports.tangent = tangent;\n\n\n\n},{\"./evaluate-dx\":17,\"./evaluate-dy\":18}],32:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns the hybrid quadratic version of the given cubic bezier. For a\n * definition of hybrid quadratic bezier curves see <a href=\"http://scholarsarchive.byu.edu/cgi/viewcontent.cgi?article=2206&context=etd\">\n * this paper</a>.\n * @param ps - A cubic bezier curve.\n * @returns An array of three quadratic bezier points where the\n * middle point is a 'hybrid' point represented as a line (itself represented\n * by two points (a linear bezier curve)) which can be evaluated at a different\n * t value (call it th). If evaluated at the same t value the result is the same\n * as evaluating the original cubic bezier at t. The set generated by evaluating\n * the hybrid quadratic curve for all (t,th) value pairs forms a geometric area\n * bound around the orginal cubic bezier curve. The length of the linear bezier\n * curve mentioned above is a measure of how closely the cubic can be\n * represented as a quadratic bezier curve.\n */\nfunction toHybridQuadratic(ps) {\n    var _ps = _slicedToArray(ps, 4),\n        _ps$ = _slicedToArray(_ps[0], 2),\n        x0 = _ps$[0],\n        y0 = _ps$[1],\n        _ps$2 = _slicedToArray(_ps[1], 2),\n        x1 = _ps$2[0],\n        y1 = _ps$2[1],\n        _ps$3 = _slicedToArray(_ps[2], 2),\n        x2 = _ps$3[0],\n        y2 = _ps$3[1],\n        _ps$4 = _slicedToArray(_ps[3], 2),\n        x3 = _ps$4[0],\n        y3 = _ps$4[1];\n\n    return [[x0, y0], [[(3 * x1 - x0) / 2, (3 * y1 - y0) / 2], [(3 * x2 - x3) / 2, (3 * y2 - y3) / 2]], [x3, y3] // evaluated at t\n    ];\n}\nexports.toHybridQuadratic = toHybridQuadratic;\n\n\n\n},{}],33:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar get_x_1 = _dereq_(\"./get-x\");\n/**\n * Returns the bezier t values of the intersection between the given cubic\n * bezier and the given vertical line.\n * @param ps - The bezier curve\n * @param y - The y value of the horizontal line\n */\nfunction tsAtX(ps, x) {\n  // Translate ps so that x = 0.\n  ps = ps.map(function (p) {\n    return [p[0] - x, p[1]];\n  });\n  // Find the intersection t values\n  return flo_poly_1.default.allRoots(get_x_1.getX(ps), 0, 1);\n}\nexports.tsAtX = tsAtX;\n\n\n\n},{\"./get-x\":27,\"flo-poly\":42}],34:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar get_y_1 = _dereq_(\"./get-y\");\n/**\n * Returns the bezier t values of the intersection between the given cubic\n * bezier and the given horizontal line.\n * @param ps - The bezier curve\n * @param y - The y value of the horizontal line\n */\nfunction tsAtY(ps, y) {\n  // Translate ps so that y = 0.\n  ps = ps.map(function (p) {\n    return [p[0], p[1] - y];\n  });\n  // Find the intersection t values\n  return flo_poly_1.default.allRoots(get_y_1.getY(ps), 0, 1);\n}\nexports.tsAtY = tsAtY;\n\n\n\n},{\"./get-y\":28,\"flo-poly\":42}],35:[function(_dereq_,module,exports){\n\"use strict\";\n// TODO A future improvement can be to use the Gauss–Kronrod rules\n// to estimate the error and thus choose a number of constants based\n// on the error.\n// TODO In future, the constants can be calculated and cached so we can\n// chooce any value for the order.\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * <p>\n * Integrates the given function using the Gaussian Quadrature method.\n * </p>\n * <p>\n * See https://en.wikipedia.org/wiki/Gaussian_quadrature\n * </p>\n * <p>\n * See http://pomax.github.io/bezierinfo/#arclength\n * </p>\n * @param f - The univariate function to be integrated\n * @param interval - The integration interval\n * @param order - Can be 2, 4, 8, or 16. Higher values give\n * more accurate results but is slower - defaults to 16.\n */\nfunction gaussQuadrature(f, interval) {\n    var order = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 16;\n\n    if (interval[0] === interval[1]) {\n        return 0;\n    }\n    var _GAUSS_CONSTANTS$orde = GAUSS_CONSTANTS[order],\n        weights = _GAUSS_CONSTANTS$orde.weights,\n        abscissas = _GAUSS_CONSTANTS$orde.abscissas;\n\n    var _interval = _slicedToArray(interval, 2),\n        a = _interval[0],\n        b = _interval[1];\n\n    var result = 0;\n    var m1 = (b - a) / 2;\n    var m2 = (b + a) / 2;\n    for (var i = 0; i <= order - 1; i++) {\n        result += weights[i] * f(m1 * abscissas[i] + m2);\n    }\n    return m1 * result;\n}\n// The Gaussian Legendre Quadrature method constants. \nvar GAUSS_CONSTANTS = {\n    2: {\n        weights: [1, 1],\n        abscissas: [-0.5773502691896257, 0.5773502691896257]\n    },\n    4: {\n        weights: [0.6521451548625461, 0.6521451548625461, 0.3478548451374538, 0.3478548451374538],\n        abscissas: [-0.3399810435848563, 0.3399810435848563, -0.8611363115940526, 0.8611363115940526]\n    },\n    8: {\n        weights: [0.3626837833783620, 0.3626837833783620, 0.3137066458778873, 0.3137066458778873, 0.2223810344533745, 0.2223810344533745, 0.1012285362903763, 0.1012285362903763],\n        abscissas: [-0.1834346424956498, 0.1834346424956498, -0.5255324099163290, 0.5255324099163290, -0.7966664774136267, 0.7966664774136267, -0.9602898564975363, 0.9602898564975363]\n    },\n    // Taken from http://keisan.casio.com/exec/system/1330940731\n    16: {\n        abscissas: [-0.989400934991649932596, -0.944575023073232576078, -0.86563120238783174388, -0.7554044083550030338951, -0.6178762444026437484467, -0.4580167776572273863424, -0.28160355077925891323, -0.0950125098376374401853, 0.0950125098376374401853, 0.28160355077925891323, 0.4580167776572273863424, 0.617876244402643748447, 0.755404408355003033895, 0.8656312023878317438805, 0.944575023073232576078, 0.989400934991649932596],\n        weights: [0.0271524594117540948518, 0.062253523938647892863, 0.0951585116824927848099, 0.1246289712555338720525, 0.1495959888165767320815, 0.169156519395002538189, 0.182603415044923588867, 0.189450610455068496285, 0.1894506104550684962854, 0.182603415044923588867, 0.1691565193950025381893, 0.149595988816576732081, 0.124628971255533872053, 0.095158511682492784809, 0.062253523938647892863, 0.027152459411754094852]\n    }\n};\nexports.default = gaussQuadrature;\n\n},{}],36:[function(_dereq_,module,exports){\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nconst DELTA = 1e-10;\n/**\n * Performs a functional stable sort on the given array and\n * returns the newly sorted array.\n * @ignore\n */\nfunction stableSort(arr, f) {\n    let indxArray = [];\n    for (let i = 0; i < arr.length; i++) {\n        indxArray.push(i);\n    }\n    indxArray.sort(function (a, b) {\n        let res = f(arr[a], arr[b]);\n        if (res !== 0) {\n            return res;\n        }\n        return a - b;\n    });\n    let sorted = [];\n    for (let i = 0; i < arr.length; i++) {\n        sorted.push(arr[indxArray[i]]);\n    }\n    return sorted;\n}\n/**\n * In-place swap two elements in the given array.\n * @ignore\n */\nfunction swap(arr, a, b) {\n    if (a === b) {\n        return;\n    }\n    let temp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = temp;\n}\n/**\n * @private\n */\nfunction getSmallestIndxYThenX(ps) {\n    let smallest = [\n        Number.POSITIVE_INFINITY,\n        Number.POSITIVE_INFINITY\n    ];\n    let smallestI;\n    for (let i = 0; i < ps.length; i++) {\n        let y = ps[i][1];\n        if ((y < smallest[1]) ||\n            (y === smallest[1] && ps[i][0] < smallest[0])) {\n            smallestI = i;\n            smallest = ps[i];\n        }\n    }\n    return smallestI;\n}\n/**\n * <p>\n * Finds the convex hull of the given set of 2d points using the\n * Graham Scan algorithm and returns the hull as an array of points.\n * </p>\n * <p>\n * See https://en.wikipedia.org/wiki/Graham_scan\n * </p>\n * @param ps_ - A set of points\n * @param includeAllBoundaryPoints - Set this to true to if all boundary points\n * should be returned, even redundant ones - defaults to false\n * @param delta - Tolerance at which three points are considered collinear -\n * defaults to 1e-10\n */\nfunction grahamScan(ps_, includeAllBoundaryPoints = false, delta = DELTA) {\n    includeAllBoundaryPoints = !!includeAllBoundaryPoints;\n    function fail(p1, p2, p3) {\n        let res = flo_vector2d_1.default.ccw(p1, p2, p3, delta);\n        if (includeAllBoundaryPoints) {\n            return res < 0;\n        }\n        return res <= 0;\n    }\n    let ps = ps_.slice();\n    let n = ps.length;\n    let idx = getSmallestIndxYThenX(ps);\n    let [p] = ps.splice(idx, 1);\n    ps = stableSort(ps, function (a, b) {\n        let res = flo_vector2d_1.default.cross(flo_vector2d_1.default.fromTo(p, b), flo_vector2d_1.default.fromTo(p, a));\n        res = Math.abs(res) < delta ? 0 : res;\n        if (res !== 0) {\n            return res;\n        }\n        res = a[1] - b[1];\n        res = Math.abs(res) < delta ? 0 : res;\n        if (res !== 0) {\n            return res;\n        }\n        return a[0] - b[0];\n    });\n    ps.unshift(p);\n    let m = 1;\n    for (let i = 2; i < n; i++) {\n        while (fail(ps[m - 1], ps[m], ps[i])) {\n            if (m > 1) {\n                m -= 1;\n                continue;\n            }\n            else if (i === n - 1) {\n                m -= 1;\n                break;\n            }\n            else {\n                i += 1;\n            }\n        }\n        m += 1;\n        swap(ps, m, i);\n    }\n    return ps.slice(0, m + 1);\n}\nexports.default = grahamScan;\n\n},{\"flo-vector2d\":50}],37:[function(_dereq_,module,exports){\n\"use strict\";\n/*\n * Concise, Destructive, Left Leaning Red Black Tree implementation.\n * See: https://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n * See: https://en.wikipedia.org/wiki/Left-leaning_red%E2%80%93black_tree\n * See: http://www.teachsolaisgames.com/articles/balanced_left_leaning.html\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tree_node_1 = _dereq_(\"./src/tree-node\");\nvar tree_node_color_1 = _dereq_(\"./src/tree-node-color\");\nvar tree_node_direction_1 = _dereq_(\"./src/tree-node-direction\");\nfunction isRed(node) {\n    return node && node.color === tree_node_color_1.default.RED;\n}\n/**\n * @param compare\n * @param datas\n * @param replaceDups - If true then if a duplicate is\n * inserted (as per the equivalence relation induced by the compare)\n * then replace it. If false then keep an array of values at the relevant\n * node.\n */\n\nvar LlRbTree = function () {\n    function LlRbTree(compare, datas, replaceDups) {\n        _classCallCheck(this, LlRbTree);\n\n        this.getMinNode = this.getMinOrMaxNode(tree_node_direction_1.default.LEFT);\n        this.getMaxNode = this.getMinOrMaxNode(tree_node_direction_1.default.RIGHT);\n        var tree = this;\n        tree.setComparator(compare, replaceDups);\n        tree.replaceDups = replaceDups;\n        tree.root = null;\n        if (!datas) {\n            return;\n        }\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = datas[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var data = _step.value;\n\n                tree.insert(data);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    /**\n     * Destructively sets the tree compare. This function can be used for for e.g.\n     * the Bentley Ottmann algorithm.\n     */\n\n\n    _createClass(LlRbTree, [{\n        key: \"setComparator\",\n        value: function setComparator(compare, replaceDups) {\n            if (replaceDups) {\n                this.compare = compare;\n            } else {\n                this.compare = function (a, b) {\n                    return compare(a, b[0]);\n                };\n            }\n        }\n    }, {\n        key: \"isEmpty\",\n        value: function isEmpty() {\n            return !this.root;\n        }\n        /**\n         * Find the node in the tree with the given data using the tree compare\n         * function.\n         * @returns {Node} node or null if not found.\n         */\n\n    }, {\n        key: \"find\",\n        value: function find(data) {\n            var tree = this;\n            var node = this.root;\n            while (node) {\n                var c = tree.compare(data, node.data);\n                if (c === 0) {\n                    return node;\n                } else {\n                    node = node[c > 0 ? tree_node_direction_1.default.RIGHT : tree_node_direction_1.default.LEFT];\n                }\n            }\n            return null;\n        }\n        /**\n         * .\n         */\n\n    }, {\n        key: \"toArrayInOrder\",\n        value: function toArrayInOrder() {\n            var nodes = [];\n            f(this.root);\n            function f(node) {\n                if (!node) {\n                    return;\n                }\n                f(node[tree_node_direction_1.default.LEFT]);\n                nodes.push(node);\n                f(node[tree_node_direction_1.default.RIGHT]);\n            }\n            return nodes;\n        }\n        /**\n         * Inserts a node with the given data into the tree.\n         */\n\n    }, {\n        key: \"insert\",\n        value: function insert(data) {\n            var tree = this;\n            tree.root = f(tree.root, data);\n            tree.root.color = tree_node_color_1.default.BLACK;\n            tree.root.parent = undefined;\n            function f(h, data) {\n                if (!h) {\n                    return new tree_node_1.default(data, !tree.replaceDups);\n                }\n                var c = tree.compare(data, h.data);\n                if (c === 0) {\n                    if (tree.replaceDups) {\n                        h.data = data;\n                    } else {\n                        h.data.push(data);\n                    }\n                } else {\n                    var dir = c > 0 ? tree_node_direction_1.default.RIGHT : tree_node_direction_1.default.LEFT;\n                    h[dir] = f(h[dir], data);\n                    h[dir].parent = h;\n                }\n                if (isRed(h[tree_node_direction_1.default.RIGHT]) && !isRed(h[tree_node_direction_1.default.LEFT])) {\n                    h = rotate(tree_node_direction_1.default.LEFT, h);\n                }\n                if (isRed(h[tree_node_direction_1.default.LEFT]) && isRed(h[tree_node_direction_1.default.LEFT][tree_node_direction_1.default.LEFT])) {\n                    h = rotate(tree_node_direction_1.default.RIGHT, h);\n                }\n                if (isRed(h[tree_node_direction_1.default.LEFT]) && isRed(h[tree_node_direction_1.default.RIGHT])) {\n                    flipColors(h);\n                }\n                return h;\n            }\n        }\n        /**\n         * Removes an item from the tree based on the given data.\n         * @param {LlRbTree} tree\n         * @param {*} data\n         * @param {boolean} all - If the data is an array, remove all.\n         */\n\n    }, {\n        key: \"remove\",\n        value: function remove(data, all) {\n            var tree = this;\n            tree.root = f(tree.root, data);\n            if (tree.root) {\n                tree.root.color = tree_node_color_1.default.BLACK;\n                tree.root.parent = undefined;\n            }\n            function f(h, data) {\n                //let h = h_;\n                var c = tree.compare(data, h.data);\n                if (!tree.replaceDups && c === 0 && !all && h.data.length > 1) {\n                    removeFromArray(data, h.data);\n                    return h;\n                }\n                if (c < 0 && !h[tree_node_direction_1.default.LEFT] || c > 0 && !h[tree_node_direction_1.default.RIGHT]) {\n                    return h;\n                }\n                if (c < 0) {\n                    if (!isRed(h[tree_node_direction_1.default.LEFT]) && !isRed(h[tree_node_direction_1.default.LEFT][tree_node_direction_1.default.LEFT])) {\n                        h = moveRedLeft(h);\n                    }\n                    h[tree_node_direction_1.default.LEFT] = f(h[tree_node_direction_1.default.LEFT], data);\n                    if (h[tree_node_direction_1.default.LEFT]) {\n                        h[tree_node_direction_1.default.LEFT].parent = h;\n                    }\n                    return fixUp(h);\n                }\n                if (isRed(h[tree_node_direction_1.default.LEFT])) {\n                    h = rotate(tree_node_direction_1.default.RIGHT, h);\n                    c = tree.compare(data, h.data);\n                    if (!tree.replaceDups && c === 0 && !all && h.data.length > 1) {\n                        removeFromArray(data, h.data);\n                        return h;\n                    }\n                }\n                if (c === 0 && !h[tree_node_direction_1.default.RIGHT]) {\n                    return null;\n                }\n                if (!isRed(h[tree_node_direction_1.default.RIGHT]) && !isRed(h[tree_node_direction_1.default.RIGHT][tree_node_direction_1.default.LEFT])) {\n                    h = moveRedRight(h);\n                    c = tree.compare(data, h.data);\n                    if (!tree.replaceDups && c === 0 && !all && h.data.length > 1) {\n                        removeFromArray(data, h.data);\n                        return h;\n                    }\n                }\n                if (c === 0) {\n                    h.data = tree.min(h[tree_node_direction_1.default.RIGHT]);\n                    h[tree_node_direction_1.default.RIGHT] = removeMin(h[tree_node_direction_1.default.RIGHT]);\n                } else {\n                    h[tree_node_direction_1.default.RIGHT] = f(h[tree_node_direction_1.default.RIGHT], data);\n                }\n                if (h[tree_node_direction_1.default.RIGHT]) {\n                    h[tree_node_direction_1.default.RIGHT].parent = h;\n                }\n                return fixUp(h);\n            }\n        }\n        /**\n         * Returns the two ordered nodes bounding the data. If the\n         * data falls on a node, that node and the next (to the right) is\n         * returned.\n         * @returns {Node[]}\n         */\n\n    }, {\n        key: \"findBounds\",\n        value: function findBounds(data) {\n            var tree = this;\n            var node = tree.root;\n            var bounds = [undefined, undefined];\n            if (node === null) {\n                return bounds;\n            }\n            while (node) {\n                var c = tree.compare(data, node.data);\n                if (c >= 0) {\n                    bounds[0] = node;\n                } else {\n                    bounds[1] = node;\n                }\n                node = node[c >= 0 ? tree_node_direction_1.default.RIGHT : tree_node_direction_1.default.LEFT];\n            }\n            return bounds;\n        }\n        /**\n         * @param {LlRbTree} tree\n         * @param {*} data\n         * @returns {Node[]} The two ordered nodes bounding the data. If the\n         * data falls on a node, returns the nodes before and after this one.\n         */\n\n    }, {\n        key: \"findBoundsExcl\",\n        value: function findBoundsExcl(data) {\n            var tree = this;\n            var node = tree.root;\n            var bounds = [undefined, undefined];\n            if (node === null) {\n                return bounds;\n            }\n            f(node);\n            function f(node) {\n                while (node) {\n                    var c = tree.compare(data, node.data);\n                    if (c === 0) {\n                        // Search on both sides\n                        f(node[tree_node_direction_1.default.LEFT]);\n                        f(node[tree_node_direction_1.default.RIGHT]);\n                        return;\n                    }\n                    if (c > 0) {\n                        bounds[0] = node;\n                    } else if (c < 0) {\n                        bounds[1] = node;\n                    }\n                    node = node[c > 0 ? tree_node_direction_1.default.RIGHT : tree_node_direction_1.default.LEFT];\n                }\n            }\n            return bounds;\n        }\n        /**\n         *\n         */\n\n    }, {\n        key: \"findAllInOrder\",\n        value: function findAllInOrder(data) {\n            var tree = this;\n            var nodes = [];\n            f(tree.root);\n            function f(node) {\n                while (node) {\n                    var c = tree.compare(data, node.data);\n                    if (c === 0) {\n                        f(node[tree_node_direction_1.default.LEFT]);\n                        nodes.push(node);\n                        f(node[tree_node_direction_1.default.RIGHT]);\n                        return;\n                    }\n                    node = node[c > 0 ? tree_node_direction_1.default.RIGHT : tree_node_direction_1.default.LEFT];\n                }\n            }\n            return nodes;\n        }\n    }, {\n        key: \"getMinOrMaxNode\",\n        value: function getMinOrMaxNode(dir) {\n            return function (node) {\n                if (!node) {\n                    return undefined;\n                }\n                while (node[dir]) {\n                    node = node[dir];\n                }\n                return node;\n            };\n        }\n    }, {\n        key: \"min\",\n        value: function min(node) {\n            return this.getMinNode(node).data;\n        }\n    }, {\n        key: \"max\",\n        value: function max(node) {\n            return this.getMaxNode(node).data;\n        }\n    }]);\n\n    return LlRbTree;\n}();\n/**\n * Removes the data from the tuple using ===.\n * Note this function uses === and not the compare function!\n */\n\n\nfunction removeFromArray(elem, arr) {\n    var index = arr.indexOf(elem);\n    if (index !== -1) {\n        arr.splice(index, 1);\n    }\n}\n/**\n * Destructively rotates the given node, say h, in the\n * given direction as far as tree rotations go.\n * @param {boolean} dir true -> right, false -> left\n * @param {Node} h\n * @returns The node that is at the top after the rotation.\n */\nfunction rotate(dir, h) {\n    var otherDir = dir ? tree_node_direction_1.default.LEFT : tree_node_direction_1.default.RIGHT;\n    var x = h[otherDir];\n    h[otherDir] = x[dir];\n    if (x[dir]) {\n        x[dir].parent = h;\n    }\n    x[dir] = h;\n    h.parent = x;\n    x.color = h.color;\n    h.color = tree_node_color_1.default.RED;\n    return x;\n}\nfunction removeMin(h) {\n    if (!h[tree_node_direction_1.default.LEFT]) {\n        return null;\n    }\n    if (!isRed(h[tree_node_direction_1.default.LEFT]) && !isRed(h[tree_node_direction_1.default.LEFT][tree_node_direction_1.default.LEFT])) {\n        h = moveRedLeft(h);\n    }\n    h[tree_node_direction_1.default.LEFT] = removeMin(h[tree_node_direction_1.default.LEFT]);\n    if (h[tree_node_direction_1.default.LEFT]) {\n        h[tree_node_direction_1.default.LEFT].parent = h;\n    }\n    return fixUp(h);\n}\nfunction flipColor(color) {\n    return color === tree_node_color_1.default.RED ? tree_node_color_1.default.BLACK : tree_node_color_1.default.RED;\n}\n/**\n * Destructively flips the color of the given node and both\n * it's childrens' colors.\n * @param {Node} h\n */\nfunction flipColors(h) {\n    h.color = flipColor(h.color);\n    h[tree_node_direction_1.default.LEFT].color = flipColor(h[tree_node_direction_1.default.LEFT].color);\n    h[tree_node_direction_1.default.RIGHT].color = flipColor(h[tree_node_direction_1.default.RIGHT].color);\n}\n/**\n * @description\n * @param h\n * @returns The node that is at the top after the move.\n */\nfunction moveRedLeft(h) {\n    flipColors(h);\n    if (isRed(h[tree_node_direction_1.default.RIGHT][tree_node_direction_1.default.LEFT])) {\n        var a = rotate(tree_node_direction_1.default.RIGHT, h[tree_node_direction_1.default.RIGHT]);\n        h[tree_node_direction_1.default.RIGHT] = a;\n        a.parent = h;\n        h = rotate(tree_node_direction_1.default.LEFT, h);\n        flipColors(h);\n    }\n    return h;\n}\n/**\n * @description\n * @param h\n * @returns The node that is at the top after the move.\n */\nfunction moveRedRight(h) {\n    flipColors(h);\n    if (isRed(h[tree_node_direction_1.default.LEFT][tree_node_direction_1.default.LEFT])) {\n        h = rotate(tree_node_direction_1.default.RIGHT, h);\n        flipColors(h);\n    }\n    return h;\n}\n/**\n * @description Fix right-leaning red nodes.\n * @returns The node that is at the top after the fix.\n */\nfunction fixUp(h) {\n    if (isRed(h[tree_node_direction_1.default.RIGHT])) {\n        h = rotate(tree_node_direction_1.default.LEFT, h);\n    }\n    if (isRed(h[tree_node_direction_1.default.LEFT]) && isRed(h[tree_node_direction_1.default.LEFT][tree_node_direction_1.default.LEFT])) {\n        h = rotate(tree_node_direction_1.default.RIGHT, h);\n    }\n    // Split 4-nodes.\n    if (isRed(h[tree_node_direction_1.default.LEFT]) && isRed(h[tree_node_direction_1.default.RIGHT])) {\n        flipColors(h);\n    }\n    return h;\n}\nexports.default = LlRbTree;\n\n},{\"./src/tree-node\":40,\"./src/tree-node-color\":38,\"./src/tree-node-direction\":39}],38:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TreeNodeColor;\n(function (TreeNodeColor) {\n    TreeNodeColor[TreeNodeColor[\"BLACK\"] = 0] = \"BLACK\";\n    TreeNodeColor[TreeNodeColor[\"RED\"] = 1] = \"RED\";\n})(TreeNodeColor || (TreeNodeColor = {}));\nexports.default = TreeNodeColor;\n\n},{}],39:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TreeNodeDirection;\n(function (TreeNodeDirection) {\n    TreeNodeDirection[TreeNodeDirection[\"LEFT\"] = 0] = \"LEFT\";\n    TreeNodeDirection[TreeNodeDirection[\"RIGHT\"] = 1] = \"RIGHT\";\n})(TreeNodeDirection || (TreeNodeDirection = {}));\nexports.default = TreeNodeDirection;\n\n},{}],40:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tree_node_color_1 = _dereq_(\"./tree-node-color\");\n/**\n * Red Black Tree node.\n * @constructor\n * @param {*} data\n */\n\nvar TreeNode = function TreeNode(data, asArray) {\n    _classCallCheck(this, TreeNode);\n\n    if (asArray) {\n        this.data = [data];\n    } else {\n        this.data = data;\n    }\n    this.color = tree_node_color_1.default.RED;\n};\n\nexports.default = TreeNode;\n\n},{\"./tree-node-color\":38}],41:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar SUPPORTED = typeof WeakMap === 'function';\n/**\n * Memoize the given arity 1 function.\n */\nfunction m1(f) {\n    if (!SUPPORTED) {\n        return f;\n    }\n    var results = new WeakMap();\n    return function (a) {\n        var result = results.get(a);\n        if (result !== undefined) {\n            //console.log('cache hit');\n            return result;\n        }\n        //console.log('cache miss');\n        result = f(a);\n        results.set(a, result);\n        return result;\n    };\n}\nvar Memoize = { m1: m1 };\nexports.default = Memoize;\n\n},{}],42:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_operators_1 = _dereq_(\"./src/core-operators\");\nvar root_operators_1 = _dereq_(\"./src/root-operators\");\nvar root_bounds_1 = _dereq_(\"./src/root-bounds\");\nvar all_roots_recursive_1 = _dereq_(\"./src/all-roots-recursive\");\nvar random_1 = _dereq_(\"./src/random\");\nvar error_analysis_1 = _dereq_(\"./src/error-analysis\");\nvar from_roots_1 = _dereq_(\"./src/from-roots\");\nvar multiply = core_operators_1.default.multiply;\n/**\n* Simple & fast practical library functions for functional univariate\n* polynomials over the reals (actually ECMAScript numbers, i.e. double\n* floats).\n*\n* All polinomials are represented as a simple array starting with the\n* highest non-zero power, e.g.\n*   3x^3 + 5x^2 + 7x + 2 -> [3,5,7,2]\n*\n* @ignore\n*/\nvar FloPoly = Object.assign({}, core_operators_1.default, root_operators_1.default, root_bounds_1.default, error_analysis_1.default, { random: random_1.default,\n    fromRoots: from_roots_1.default,\n    allRoots: all_roots_recursive_1.default });\nexports.default = FloPoly;\n\n},{\"./src/all-roots-recursive\":43,\"./src/core-operators\":44,\"./src/error-analysis\":45,\"./src/from-roots\":46,\"./src/random\":47,\"./src/root-bounds\":48,\"./src/root-operators\":49}],43:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_operators_1 = _dereq_(\"./core-operators\");\nvar root_operators_1 = _dereq_(\"./root-operators\");\nvar root_bounds_1 = _dereq_(\"./root-bounds\");\nvar _core_operators_1$def = core_operators_1.default,\n    clip0 = _core_operators_1$def.clip0,\n    evaluate = _core_operators_1$def.evaluate,\n    differentiate = _core_operators_1$def.differentiate,\n    toCasStr = _core_operators_1$def.toCasStr;\nvar _root_operators_1$def = root_operators_1.default,\n    brent = _root_operators_1$def.brent,\n    quadraticRoots = _root_operators_1$def.quadraticRoots;\nvar _root_bounds_1$defaul = root_bounds_1.default,\n    rootMagnitudeUpperBound_fujiwara = _root_bounds_1$defaul.rootMagnitudeUpperBound_fujiwara,\n    positiveRootUpperBound_LMQ = _root_bounds_1$defaul.positiveRootUpperBound_LMQ,\n    positiveRootLowerBound_LMQ = _root_bounds_1$defaul.positiveRootLowerBound_LMQ,\n    negativeRootUpperBound_LMQ = _root_bounds_1$defaul.negativeRootUpperBound_LMQ,\n    negativeRootLowerBound_LMQ = _root_bounds_1$defaul.negativeRootLowerBound_LMQ;\n\nvar INF = Number.POSITIVE_INFINITY;\n/**\n * <p>Finds a near optimal approximation to the real roots (or those\n * within a range) of the input polynomial.\n * </p>\n * <p>\n * Only multiple roots of even order that is very close together may be\n * missed. (This is rarely a problem in practice - in a geometrical\n * application, for instance, this may mean two objects are barely\n * touching and returning either, all, or none of the repeated even\n * roots should not break the algorithm).\n * </p>\n * @param p - The polynomial\n * @param a - Lower limit of root values that should be returned -\n * defaults to -∞\n * @param b - Upper limit of root values that should be returned -\n * defaults to +∞\n * @example\n * FloPoly.allRoots([1, -10, 35, -50, 24]); //=> [1, 2.0000000000000036, 3.0000000000000067, 4]\n */\nfunction allRoots(p) {\n    var a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -INF;\n    var b = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : +INF;\n\n    p = clip0(p);\n    var d = p.length - 1;\n    var rangeFilter = inRange(a, b);\n    if (d === 2) {\n        return quadraticRoots(p).filter(rangeFilter);\n        // Investigate if any numerically stable algorithm could be as fast\n        // as this algorithm (i.e by finding cubic roots within quadratic\n        // root demarcated intervals via Brent's method. The cubicRoots \n        // algoritm below has been removed since it was numerically \n        // unstable.\n        /*} else if (d === 3) {\n            return cubicRoots(p)\n                .filter(rangeFilter)\n                .sort((a,b) => a-b)\n        } else if (d > 3) {*/\n    } else if (d > 2) {\n        // TODO The root bounding function below might have an impact on \n        // performance - it would probably be better to use \n        // positiveRootUpperBound_LMQ or (possibly) even better, the \n        // linear version of it (see paper of Viglas, Akritas and \n        // Strzebonski) and re-calculate bounds on every iteration.\n        var lowerBound = void 0;\n        var upperBound = void 0;\n        if (a === -INF || b === +INF) {\n            //let magnitudeBound = rootMagnitudeUpperBound_fujiwara(p);\n            //lowerBound = a === -INF ? -magnitudeBound : a;\n            //upperBound = b === +INF ? +magnitudeBound : b;\n            if (a === -INF) {\n                lowerBound = negativeRootLowerBound_LMQ(p);\n            } else {\n                lowerBound = a;\n            }\n            if (b === +INF) {\n                upperBound = positiveRootUpperBound_LMQ(p);\n            } else {\n                upperBound = b;\n            }\n        } else {\n            lowerBound = a;\n            upperBound = b;\n        }\n        // If the roots of the differentiated polynomial is out of range \n        // then the roots of the polynomial itself will also be out of \n        // range.\n        var dp = differentiate(p);\n        var roots = allRoots(dp, lowerBound, upperBound).filter(rangeFilter);\n        if (roots[0] !== lowerBound) {\n            // For code coverage to cover the 'else' case we would need\n            // to find a case where the lower bound actually matches the\n            // root which would be very rare - needs further \n            // investigation.\n            // Not an actual root.\n            roots.unshift(lowerBound);\n        }\n        if (roots[roots.length - 1] !== upperBound) {\n            // Not an actual root.\n            roots.push(upperBound);\n        }\n        return rootsWithin(p, roots);\n    } else if (d === 1) {\n        // Less likely so put near bottom (micro optimization)\n        return [-p[1] / p[0]].filter(rangeFilter);\n    } else if (d === 0) {\n        return []; // y = c -> no roots\t\n    }\n    // Least likely so put at bottom (micro optimization)\n    // d === -1\n    // y = 0 -> infinite number of roots\n    return [];\n}\n/**\n * Returns a function that returns true if x is in the range [a,b].\n * @param a\n * @param b\n * @private\n */\nfunction inRange(a, b) {\n    return function (x) {\n        return x >= a && x <= b;\n    };\n}\n/**\n * Finds all roots of the given polynomial within the given intervals.\n * @private\n * @param p\n * @param intervals\n */\nfunction rootsWithin(p, intervals) {\n    var roots = [];\n    var peval = evaluate(p);\n    var prevRoot = void 0;\n    var a = intervals[0];\n    for (var i = 1; i < intervals.length; i++) {\n        var root = void 0;\n        var b = intervals[i];\n        var evA = peval(a);\n        var evB = peval(b);\n        var k = evA * evB;\n        if (k === 0) {\n            if (evA === 0) {\n                root = a;\n            } else if (evB === 0 && i === intervals.length - 1) {\n                root = b;\n            }\n        } else if (evA * evB < 0) {\n            root = brent(peval, a, b);\n        }\n        // Add root if it exists and suppress exact duplicates\n        if (root !== undefined && root !== prevRoot) {\n            roots.push(root);\n            prevRoot = root;\n        }\n        a = b;\n    }\n    return roots;\n}\nexports.default = allRoots;\n\n},{\"./core-operators\":44,\"./root-bounds\":48,\"./root-operators\":49}],44:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Returns true if two polynomials are exactly equal by comparing\n * coefficients.\n * @param p1 - A polynomial\n * @param p2 - Another polynomial\n * @example\n * FloPoly.equal([1,2,3,4], [1,2,3,4]);   //=> true\n * FloPoly.equal([1,2,3,4], [1,2,3,4,5]); //=> false\n */\nfunction equal(p1, p2) {\n    if (p1.length !== p2.length) {\n        return false;\n    }\n    for (var i = 0; i < p1.length; i++) {\n        if (p1[i] !== p2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Adds two polynomials.\n * @param p1 - The first polynomial\n * @param p2 - The second polynomial\n * @example\n * FloPoly.add([1,2,3],[3,4]); //=> [1,5,7]\n */\nfunction add(p1, p2) {\n    // Initialize result array  \n    var d1 = p1.length - 1;\n    var d2 = p2.length - 1;\n    var Δd = d1 - d2;\n    var Δd1 = 0;\n    var Δd2 = 0;\n    if (Δd > 0) {\n        Δd2 = -Δd;\n    } else if (Δd < 0) {\n        Δd1 = +Δd;\n    }\n    var d = Math.max(d1, d2);\n    // Add coefficients\n    var result = [];\n    for (var i = 0; i < d + 1; i++) {\n        var c1 = p1[i + Δd1];\n        var c2 = p2[i + Δd2];\n        result.push((c1 || 0) + (c2 || 0));\n    }\n    // Ensure the result is a valid polynomial representation\n    return clip0(result);\n}\n/**\n * Subtracts the second polynomial from first (p1 - p2).\n * @param p1 - The polynomial from which will be subtracted\n * @param p2 - The polynomial that will be subtracted\n * @example\n * FloPoly.subtract([2,3],[4,4]); //=> [-2, -1]\n */\nfunction subtract(p1, p2) {\n    // Initialize result array  \n    var d1 = p1.length - 1;\n    var d2 = p2.length - 1;\n    var Δd = d1 - d2;\n    var Δd1 = 0;\n    var Δd2 = 0;\n    if (Δd > 0) {\n        Δd2 = -Δd;\n    } else if (Δd < 0) {\n        Δd1 = +Δd;\n    }\n    var d = Math.max(d1, d2);\n    // Add coefficients\n    var result = [];\n    for (var i = 0; i < d + 1; i++) {\n        var c1 = p1[i + Δd1];\n        var c2 = p2[i + Δd2];\n        result.push((c1 || 0) - (c2 || 0));\n    }\n    // Ensure the result is a valid polynomial representation\n    return clip0(result);\n}\n/**\n * Negate the given polynomial (p -> -p).\n * @param p - The polynomial\n * @example\n * FloPoly.negate([0.1, -0.2]); //=> [-0.1, 0.2]\n */\nfunction negate(p) {\n    return multiplyByConst(-1, p);\n}\n/**\n * Differentiates the given polynomial.\n * @param p - The polynomial\n * @example\n * FloPoly.differentiate([5, 4, 3, 2, 1]); //=> [20, 12, 6, 2]\n */\nfunction differentiate(p) {\n    var result = [];\n    var d = p.length - 1;\n    for (var i = 0; i < d; i++) {\n        result.push((d - i) * p[i]);\n    }\n    return result;\n}\n/**\n * <p>\n * Multiplies the two given polynomials and returns the result.\n * </p>\n * <p>\n * See <a href=\"https://en.wikipedia.org/wiki/Polynomial_arithmetic\">polynomial arithmetic</a>\n * </p>\n * <p>\n * See <a href=\"https://en.wikipedia.org/wiki/Discrete_Fourier_transform#Polynomial_multiplication\">polynomial multiplication</a>\n * </p>\n * <p>\n * See <a herf=\"http://web.cs.iastate.edu/~cs577/handouts/polymultiply.pdf\">polynomial multiplication (pdf)</a>\n * </p>\n * @param p1 - The one polynomial.\n * @param p2 - The other polynomial.\n * @example\n * FloPoly.multiply([1,2,3], [2,5,3,5]); //=> [2, 9, 19, 26, 19, 15]\n */\nfunction multiply(p1, p2) {\n    var d1 = p1.length - 1;\n    var d2 = p2.length - 1;\n    var d = d1 + d2;\n    var result = new Array(d + 1).fill(0);\n    for (var i = 0; i < d1 + 1; i++) {\n        for (var j = 0; j < d2 + 1; j++) {\n            result[d - (i + j)] += p1[d1 - i] * p2[d2 - j];\n        }\n    }\n    return clip0(result);\n}\n/**\n * Multiplies 2 polynomials by a constant.\n * @param c - The constant\n * @param p - The polynomial\n * @example\n * FloPoly.multiplyByConst(0.25, [3,2,1]); //=> [0.75, 0.5, 0.25]\n */\nfunction multiplyByConst(c, p) {\n    if (c === 0) {\n        return [];\n    }\n    var d = p.length - 1;\n    var result = [];\n    for (var i = 0; i < d + 1; i++) {\n        result.push(c * p[i]);\n    }\n    // We have to clip due to possible floating point underflow\n    return clip0(result);\n}\n/**\n * Returns the degree of the polynomial.\n * @param p - The polynomial\n * @example\n * FloPoly.degree([9,8,7,6,5,4,3,2,1]); //=> 9\n */\nfunction degree(p) {\n    return p.length - 1;\n}\nfunction evaluate(p, a) {\n    function f(a) {\n        //if p.length === 0 { return 0; }\n        var result = p[0];\n        for (var i = 1; i < p.length; i++) {\n            result = p[i] + result * a;\n        }\n        return result;\n    }\n    // Curry the function\n    return a === undefined ? f : f(a);\n}\n/**\n * Evaluates the given polynomial at 0 - it is much faster than at an\n * arbitrary point.\n * @param p - The polynomial\n * @example\n * FloPoly.evaluateAt0([3,2,99]); //=> 99\n */\nfunction evaluateAt0(p) {\n    return p[p.length - 1];\n}\n;\n/**\n * <p>\n * Returns the number of sign changes in the polynomial coefficents\n * when ordered in descending order; zeros are ignored.\n * </p>\n * <p>\n * Descartes' rule of signs states (quoted from Wikipedia):\n * \"if the terms of a polynomial are ordered by descending variable\n * exponent, then the number of positive roots of the polynomial is\n * either equal to the number of sign differences between consecutive\n * nonzero coefficients, or is less than it by an even number. Multiple\n * roots of the same value are counted separately.\"\n * </p>\n * See https://en.wikipedia.org/wiki/Descartes%27_rule_of_signs\n * @param p - The polynomial\n * @example\n * FloPoly.signChanges([1,2,-3,0,0,3,-1]); //=> 3\n */\nfunction signChanges(p) {\n    var d = p.length - 1;\n    var result = 0;\n    var prevSign = Math.sign(p[0]);\n    for (var i = 1; i < d + 1; i++) {\n        var sign = Math.sign(p[i]);\n        if (sign !== prevSign && sign !== 0) {\n            result++;\n            prevSign = sign;\n        }\n    }\n    return result;\n}\n/**\n * Deflates the given polynomial by removing a factor (x - r), where\n * r is a root of the polynomial.\n * @param p - The polynomial\n * @param root - A pre-calculated root of the polynomial.\n * @example\n * // The polynomial x^3 - 5x^2 + 8x - 4 has a root at 1 and a double root at 2\n * FloPoly.deflate([1, -5, 8, -4], 2); //=> [1, -3, 2]\n * FloPoly.deflate([1, -3, 2], 2);     //=> [1,-1]\n * FloPoly.deflate([1, -1], 1);        //=> [1]\n */\nfunction deflate(p, root) {\n    var d = p.length - 1;\n    var bs = [p[0]];\n    for (var i = 1; i < d; i++) {\n        bs.push(p[i] + root * bs[i - 1]);\n    }\n    return bs;\n}\n/**\n * Inverts the given polynomial by reversing the order of the\n * coefficients, i.e. p(x) -> x^deg(p) * p(1/x)\n * @param p - The polynomial\n * @example\n * FloPoly.invert([1,2,3,4]); // => [4,3,2,1]\n * FloPoly.invert([3,2,-5]);  // => [-5,2,3]\n */\nfunction invert(p) {\n    return p.slice().reverse();\n}\n/**\n * <p>\n * Performs a change of variables of the form: p(x) <- p(ax + b).\n * </p>\n * <p>\n * See <a href=\"http://stackoverflow.com/questions/141422/how-can-a-transform-a-polynomial-to-another-coordinate-system\">this stackoverflow question</a>\n * </p>\n * @param p - The polynomial\n * @param a\n * @param b\n * @example\n * FloPoly.changeVariables([1,2,7], 3, 4); //=> [9, 30, 31]\n */\nfunction changeVariables(p, a, b) {\n    // We let the coefficients of p(ax + b) be denoted by d_i in the \n    // code below. \n    // d_i is calculated as d = T*c, where c are the original \n    // coefficients.\n    var d = p.length - 1;\n    // Initialize a zero matrix\n    var t = [];\n    for (var i = 0; i < d + 1; i++) {\n        t.push(new Array(d + 1).fill(0));\n    }\n    // Calculate the triangular matrix T\n    t[0][0] = 1;\n    for (var j = 1; j <= d; j++) {\n        t[0][j] = b * t[0][j - 1];\n        for (var _i = 1; _i <= j; _i++) {\n            t[_i][j] = b * t[_i][j - 1] + a * t[_i - 1][j - 1];\n        }\n    }\n    // Multiply\n    var res = new Array(d + 1).fill(0);\n    for (var _i2 = 0; _i2 <= d; _i2++) {\n        res[d - _i2] = 0;\n        for (var _j = _i2; _j <= d; _j++) {\n            var acc = t[_i2][_j] * p[d - _j];\n            res[d - _i2] += acc;\n        }\n    }\n    return res;\n}\n/**\n * Reflects the given polynomial about the Y-axis, i.e. perform the\n * change of variables: p(x) <- p(-x).\n * @param p - The polynomial to reflect\n * @example\n * FloPoly.reflectAboutYAxis([5,4,3,2,1]); //=> [5, -4, 3, -2, 1]\n */\nfunction reflectAboutYAxis(p) {\n    var d = p.length - 1;\n    var result = p.slice();\n    for (var i = 0; i < d + 1; i++) {\n        if (i % 2) {\n            result[i] = -result[i];\n        }\n    }\n    return result;\n}\n/**\n * Generates a sturm chain for the given polynomial.\n * See https://en.wikipedia.org/wiki/Sturm%27s_theorem\n * @param p - The polynomial\n * @example\n * FloPoly.sturmChain([-3,4,2,-2]); //=> [[-3, 4, 2, -2], [-9, 8, 2], [-2.5185185185185186, 1.7037037037037037], [-3.2932525951557086]]\n */\nfunction sturmChain(p) {\n    /**\n     * Returns the negative of the remainder when dividing the first\n     * polynomial (the dividend) by the second (the divisor) provided\n     * that deg(p1) - deg(p2) === 1.\n     * @private\n     * @param p1 - The first polynomial (dividend)\n     * @param p2 - The second polynomial (divisor)\n     * See https://en.wikipedia.org/wiki/Sturm%27s_theorem\n     */\n    function negRemainder(p1, p2) {\n        var d1 = p1.length - 1;\n        var d2 = p2.length - 1;\n        var d = d1 - d2;\n        var a = p1[1] / p1[0] - p2[1] / p2[0];\n        var b = p1[0] / p2[0];\n        var p3 = multiply(multiplyByConst(b, p2), [1, a]);\n        return subtract(p3, p1);\n    }\n    var m = []; // Sturm chain\n    m.push(p);\n    m.push(differentiate(p));\n    //const δ = 10 * Number.EPSILON;\n    var i = 1;\n    while (m[i].length - 1 > 0) {\n        var pnext = negRemainder(m[i - 1], m[i]);\n        //pnext = clip(pnext, δ);\n        // If the polynomial degree was not reduced due to roundoff\n        // such that the first 1 or more terms are very small.\n        while (m[i].length - pnext.length < 1) {\n            pnext.shift();\n        }\n        /*\n        if (pnext.length === 0) {\n            break;\n        }\n        */\n        m.push(pnext);\n        i++;\n    }\n    return m;\n}\n/**\n * If the highest power coefficient is small in the sense that the\n * highest power term has a negligible contribution (compared to the\n * other terms) at x = 1 then clip() can be called to remove all such\n * highest terms. A contribution of less than Number.EPSILON of the\n * highest coefficient will be considered negligible by default.\n * @param p - The polynomial to be clipped.\n * @param δ - The optional contribution tolerence else\n *        Number.EPSILON will be used by default.\n * @example\n * FloPoly.clip([1e-18, 1e-10, 1e-5]); //=> [1e-18, 1e-10, 1e-5]\n * FloPoly.clip([1e-18, 1e-10, 1e-1]); //=> [1e-10, 1e-1]\n */\nfunction clip(p, δ) {\n    δ = δ === undefined ? Number.EPSILON : δ;\n    var c = maxCoefficient(p);\n    if (c === 0) {\n        return [];\n    }\n    if (Math.abs(p[0]) > δ * c) {\n        return p;\n    }\n    var p_ = p.slice(1);\n    while (Math.abs(p_[0]) < δ * c) {\n        p_ = p_.slice(1);\n    }\n    return clip(p_, δ);\n}\n/**\n * If the highest power coefficient is 0 then clip() can be called to\n * remove all such highest terms so that the array is a valid\n * presentation of a polynomial.\n * @param p - The polynomial to be clipped.\n * @example\n * FloPoly.clip0([1e-18, 1e-10, 1e-1]); //=> [1e-18, 1e-10, 1e-1]\n * FloPoly.clip0([0, 1e-10, 1e-1]); //=> [1e-10, 1e-1]\n */\nfunction clip0(p) {\n    return p[0] !== 0 ? p : clip0(p.slice(1));\n}\n/**\n * Returns the absolute value of the highest coefficient of the polynomial.\n * @param p - The polynomial.\n * @example\n * FloPoly.maxCoefficient([-2, 0.1, 0.2]); //=> 2\n */\nfunction maxCoefficient(p) {\n    var max = 0;\n    for (var i = 0; i < p.length; i++) {\n        var c = Math.abs(p[i]);\n        if (c > max) {\n            max = c;\n        }\n    }\n    return max;\n}\n/**\n * Returns a string representing the given polynomial that is readable\n * by a human or a CAS (Computer Algebra System).\n * @param p - The polynomial\n * @example\n * FloPoly.toCasStr([5,4,3,2,1]); //=> \"x^4*5 + x^3*4 + x^2*3 + x*2 + 1\"\n */\nfunction toCasStr(p) {\n    var d = p.length - 1;\n    var str = '';\n    for (var i = 0; i < d + 1; i++) {\n        var cStr = p[i].toString();\n        if (i === d) {\n            str += cStr;\n        } else if (i === d - 1) {\n            str += 'x*' + cStr + ' + ';\n        } else {\n            str += 'x^' + (d - i).toString() + '*' + cStr + ' + ';\n        }\n    }\n    return str;\n}\nvar coreOperators = {\n    equal: equal,\n    add: add,\n    subtract: subtract,\n    multiplyByConst: multiplyByConst,\n    negate: negate,\n    differentiate: differentiate,\n    multiply: multiply,\n    degree: degree,\n    evaluate: evaluate,\n    evaluateAt0: evaluateAt0,\n    signChanges: signChanges,\n    invert: invert,\n    changeVariables: changeVariables,\n    reflectAboutYAxis: reflectAboutYAxis,\n    sturmChain: sturmChain,\n    clip: clip,\n    clip0: clip0,\n    deflate: deflate,\n    maxCoefficient: maxCoefficient,\n    toCasStr: toCasStr\n};\nexports.default = coreOperators;\n\n},{}],45:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_operators_1 = _dereq_(\"./core-operators\");\nvar evaluate = core_operators_1.default.evaluate;\n/**\n * <p>\n * Approximate condition number for polynomial evaluation multiplied by the\n * exact value of the polynomial evaluation.\n * </p>\n * <p>\n * See <a href=\"http://www-pequan.lip6.fr/~jmc/polycopies/Compensation-horner.pdf\">Compensated Horner Scheme - paragraph 1.1</a>\n * </p>\n * @ignore\n * @param p - The polynomial\n * @param x - The evaluation point\n */\n\nfunction conditionNumber(p, x) {\n    var d = p.length - 1;\n    var res = 0;\n    for (var i = 0; i < d; i++) {\n        res += Math.abs(p[i] * Math.pow(x, d - i));\n    }\n    return res;\n}\n/**\n * <p>\n * Classic rule of thumb approximate error bound when using Horner's\n * method to evaluate polynomials.\n * </p>\n * <p>\n * See for instance <a href=\"http://www-pequan.lip6.fr/~jmc/polycopies/Compensation-horner.pdf\">compensated horner evaluation</a>\n * </p>\n * @param p - The polynomial\n * @param x - Value at which polynomial is evaluated.\n  * @example\n * hornerErrorBound([1.1,2.2,-3.3], 1.5); //=> 5.1292303737682235e-15\n */\nfunction hornerErrorBound(p, x) {\n    var δ = Number.EPSILON;\n    var d = p.length - 1;\n    return 2 * d * δ * conditionNumber(p, x);\n}\nvar errorAnalysis = {\n    hornerErrorBound: hornerErrorBound\n};\nexports.default = errorAnalysis;\n\n},{\"./core-operators\":44}],46:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_operators_1 = _dereq_(\"./core-operators\");\nvar multiply = core_operators_1.default.multiply;\n/**\n * <p>\n * Constructs a polynomial from the given roots by multiplying out the\n * factors (x - root1)(x - root2)... Note that the resulting polynomial\n * will not have any complex roots.\n * </p>\n * <p>\n * Mostly provided for testing purposes. Note that the real roots of the\n * constructed polynomial may not be exactly the same as the roots that\n * the polynomial has been constructed from due to floating-point\n * round-off.\n * </p>\n *\n * @param roots - The roots\n * @example\n * FloPoly.fromRoots([1,2,3,3]); //=> [1, -9, 29, -39, 18]\n * FloPoly.allRoots([1, -9, 29, -39, 18]); //=> [1.0000000000000007, 2.000000000000004]\n * // In the above note the rounding error. Also note the multiple root of 3 that has been missed but as stated previously this does not generally pose a problem for even multiple roots. See the examples below.\n * FloPoly.allRoots([1, -9, 29, -39, 17.99999999999999]); //=> [0.9999999999999973, 2.00000000000002, 2.9999999999999982]\n * FloPoly.allRoots([1, -9, 29, -39, 17.9999999999999]); //=> [0.999999999999975, 2.0000000000000986, 2.9999997898930832, 3.0000002095475775]\n */\n\nfunction fromRoots(roots) {\n    var p = [1];\n    for (var i = 0; i < roots.length; i++) {\n        p = multiply(p, [1, -roots[i]]);\n    }\n    return p;\n}\nexports.default = fromRoots;\n\n},{\"./core-operators\":44}],47:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar from_roots_1 = _dereq_(\"./from-roots\");\n/**\n * Some seed value for the simple random number generator.\n * @ignore\n */\nvar SEED = 123456789;\n/**\n * The range for the simple random number generator, i.e. the generated\n * numbers will be in [0,RANGE].\n * @ignore\n */\nvar RANGE = 4294967296;\n/**\n * Creates a function from the given function with parameters similar\n * to flatRoots but with an extra parameter in the beginning indicating\n * the length of the array generated by the original function.\n * @private\n * @param {function} f\n * @returns {function}\n */\nfunction createArrFunction(f) {\n    return function (n, d, a, b) {\n        var seed = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : SEED;\n        var odds = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n        var res = [];\n        for (var i = 0; i < n; i++) {\n            var v = f(d, a, b, seed, odds);\n            var p = v.p;\n            seed = v.seed;\n            res.push(p);\n        }\n        return res;\n    };\n}\n/**\n * Generates an array of random polynomials with parameters as specified\n * by flatRoots. The exact same polynomials will be created on each\n * call to this function if the same seed is used - this is by design to\n * improve testability.\n * @memberof Random\n * @param n - The number of polynomials to generate.\n * @param d - The degree of the polynomials\n * @param a - The lower bound of the distribution - defaults\n * to 0\n * @param b - The upper bound of the distribution - defaults\n * to 1\n * @param seed - A seed value for generating random values (so\n * that the results are reproducable)\n * @param odds - The odds that a root will be doubled (applied\n * recursively so that some roots will be tripled, etc. - defaults to 0\n * @example\n * FloPoly.Random.flatRootsArr(2,3,0,10); //=> [[1, -17.27247918024659, 97.33487287168995, -179.34094494147305], [1, -14.934967160224915, 57.624514485645406, -14.513933300587215]]\n * FloPoly.Random.flatRootsArr(2,3,0,10); //=> [[1, -17.27247918024659, 97.33487287168995, -179.34094494147305], [1, -14.934967160224915, 57.624514485645406, -14.513933300587215]]\n */\nvar flatRootsArr = createArrFunction(flatRoots);\n/**\n * Generates an array of random polynomials as specified by\n * flatCoefficients. The exact same polynomials will be created on each\n * call to this function if the same seed is used - this is by design to\n * improve testability.\n *\n * @memberof Random\n * @param n - The number of polynomials to generate.\n * @param d - The degree of the polynomials\n * @param a - The lower bound of the distribution - defaults\n * to 0\n * @param b - The upper bound of the distribution - defaults\n * to 1\n * @param seed - A seed value for generating random values (so\n * that the results are reproducable)\n * @returns {number[][]} The array of random polynomials.\n * @example\n * FloPoly.Random.flatCoefficientsArr(2,3,-2,2); //=> [[0.1749166026711464, -0.20349335670471191, 0.9375684261322021], [1.0617692470550537, -1.8918039798736572, 0.8040215969085693]]\n * FloPoly.Random.flatCoefficientsArr(2,3,-2,2); //=> [[0.1749166026711464, -0.20349335670471191, 0.9375684261322021], [1.0617692470550537, -1.8918039798736572, 0.8040215969085693]]\n */\nvar flatCoefficientsArr = createArrFunction(flatCoefficients);\n/**\n * Returns a quasi-random number to be used as the next input to this function.\n * See https://stackoverflow.com/questions/3062746/special-simple-random-number-generator\n * @private\n * @param seed\n */\nfunction predictiveRandom(seed) {\n    var a = 134775813;\n    return (a * seed + 1) % RANGE;\n}\n/**\n * Generates a random array of numbers picked from a bounded flat\n * distribution (i.e. a rectangular distribution) with specified odds of\n * duplication of consecutive values.\n *\n * @ignore\n * @param n - The number of values to generate.\n * @param a - The lower bound of the distribution - defaults\n * to 0\n * @param b - The upper bound of the distribution - defaults\n * to 1\n * @param seed - A seed value for generating random values (so\n * that the results are reproducable)\n * @param odds - The odds that a root will be doubled (applied\n * recursively so that some roots will be tripled, etc. - defaults to 0\n */\nfunction randomArray(n, a, b) {\n    var seed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : SEED;\n    var odds = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n    var vs = [];\n    for (var i = 0; i < n; i++) {\n        seed = predictiveRandom(seed);\n        var v = seed / RANGE * (b - a) + a;\n        seed = push(seed, vs, v, odds);\n    }\n    vs = vs.slice(0, n);\n    return { vs: vs, seed: seed };\n}\n/**\n * Helper function that will add more numbers to the passed array - modifies the\n * values parameter.\n * @private\n * @param seed\n * @param values - An existing array of values - will be modified!\n * @param x - The number that will be added (possibly multiple times)\n * @param odds - The odds that the number will be added again (recursively).\n */\nfunction push(seed, values, x, odds) {\n    seed = predictiveRandom(seed);\n    values.push(x);\n    if (seed / RANGE < odds) {\n        seed = push(seed, values, x, odds);\n    }\n    return seed;\n}\n/**\n * Generates a random polynomial with roots picked from a bounded flat\n * distribution (i.e. a rectangular distribution) with specified odds of\n * duplication of consecutive values. Note that the resulting polynomial\n * won't have any complex roots.\n * @memberof Random\n * @param d - The degree of the polynomials\n * @param a - The lower bound of the distribution - defaults\n * to 0\n * @param b - The upper bound of the distribution - defaults\n * to 1\n * @param seed - A seed value for generating random values (so\n * that the results are reproducable)\n * @param odds - The odds that a root will be doubled (applied\n * recursively so that some roots will be tripled, etc. - defaults to 0\n * @example\n * FloPoly.Random.flatRoots(3,0,10); //=> { p: [1, -17.27247918024659, 97.33487287168995, -179.34094494147305], seed: 939629312 }\n */\nfunction flatRoots(d) {\n    var a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var b = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var seed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : SEED;\n    var odds = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n    var randArr = randomArray(d, a, b, seed, odds);\n    seed = randArr.seed;\n    var p = from_roots_1.default(randArr.vs);\n    return { p: p, seed: seed };\n}\n/**\n * Generates a random polynomial with coefficients picked from a bounded\n * flat distribution (i.e. a rectangular distribution).\n * @memberof Random\n * @param d - The degree of the polynomials\n * @param a - The lower bound of the distribution - defaults to -1\n * @param b - The upper bound of the distribution - defaults to 1\n * @param seed - A seed value for generating random values (so that the results\n * are reproducable)\n * @example\n * FloPoly.Random.flatCoefficients(3,-5,5); //=> { p: [0.437291506677866, -0.5087333917617798, 2.3439210653305054], seed: 939629312 }\n */\nfunction flatCoefficients(d) {\n    var a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n    var b = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : +1;\n    var seed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : SEED;\n\n    a = a === undefined ? -1 : a;\n    b = b === undefined ? +1 : b;\n    seed = seed === undefined ? SEED : seed;\n    var randArr = randomArray(d, a, b, seed);\n    seed = randArr.seed;\n    var p = randArr.vs;\n    return { p: p, seed: seed };\n}\nvar random = {\n    flatRoots: flatRoots,\n    flatRootsArr: flatRootsArr,\n    flatCoefficients: flatCoefficients,\n    flatCoefficientsArr: flatCoefficientsArr\n};\nexports.default = random;\n\n},{\"./from-roots\":46}],48:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_operators_1 = _dereq_(\"./core-operators\");\nvar _core_operators_1$def = core_operators_1.default,\n    invert = _core_operators_1$def.invert,\n    negate = _core_operators_1$def.negate,\n    reflectAboutYAxis = _core_operators_1$def.reflectAboutYAxis;\n/**\n * Returns the maximum magnitude value within the supplied array of numbers.\n * @private\n */\n\nfunction maxAbs(ns) {\n    return Math.max.apply(Math, _toConsumableArray(ns.map(function (n) {\n        return Math.abs(n);\n    })));\n}\n/**\n * Finds an upper bound on the magnitude (absolute value) of the roots\n * (including complex roots) of the given polynomial using Rouche's\n * Theorem with k = n. This function is fast but the bound is not tight.\n * @param p - The polynomial.\n */\nfunction rootMagnitudeUpperBound_rouche(p) {\n    var d = p.length - 1;\n    var R = 1 + 1 / p[0] * maxAbs(p.slice(1));\n    return R;\n}\n/**\n * Finds an upper bound on the magnitude (absolute value) of the roots\n * of the given polynomial using the near-optimal Fujiwara bound. Note\n * that the bound includes complex roots. The bound is tight but slow\n * due to usage of Math.pow().\n * See https://en.wikipedia.org/wiki/Properties_of_polynomial_roots#cite_note-Fujiwara1916-4\n * @param p - The polynomial.\n * @example\n * FloPoly.rootMagnitudeUpperBound_fujiwara([2,-3,6,5,-130]); //=> 6.753296750770361\n * FloPoly.allRoots([2,-3,6,5,-130]); //=> [-2.397918624065303, 2.8793785310848383]\n */\nfunction rootMagnitudeUpperBound_fujiwara(p) {\n    var d = p.length - 1;\n    var an = p[0];\n    var bs = [];\n    for (var i = 1; i < d; i++) {\n        var b = Math.pow(Math.abs(p[i] / an), 1 / i);\n        bs.push(b);\n    }\n    bs.push(Math.pow(Math.abs(p[d] / 2 * an), 1 / d));\n    return 2 * Math.max.apply(undefined, bs);\n}\nvar POWERS = [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152];\n/**\n * <p>\n * Returns an upper bound for the positive real roots of the given\n * polynomial.\n * </p>\n * <p>\n * See algoritm 6 of the paper by Vigklas, Akritas and Strzeboński,\n * specifically the LocalMaxQuadratic algorithm hence LMQ.\n * </p>\n * @param p - The polynomial\n * @example\n * FloPoly.positiveRootUpperBound_LMQ([2,-3,6,5,-130]); //=> 4.015534272870436\n * FloPoly.positiveRootUpperBound_LMQ([2,3]);           //=> 0\n * FloPoly.positiveRootUpperBound_LMQ([-2,-3,-4]);      //=> 0\n */\nfunction positiveRootUpperBound_LMQ(p) {\n    var deg = p.length - 1;\n    if (deg < 1) {\n        return 0;\n    }\n    if (p[0] < 0) {\n        p = negate(p);\n    }\n    var timesUsed = [];\n    for (var i = 0; i < deg; i++) {\n        timesUsed.push(1);\n    }\n    var ub = 0;\n    for (var m = 0; m <= deg; m++) {\n        if (p[m] >= 0) continue;\n        var tempub = Number.POSITIVE_INFINITY;\n        var any = false;\n        for (var k = 0; k < m; k++) {\n            if (p[k] <= 0) {\n                continue;\n            }\n            // Table lookup is about 70% faster but both are\n            // extemely fast anyway. \n            // Result is at https://www.measurethat.net/Benchmarks/ShowResult/6610\n            var pow = timesUsed[k];\n            var powres = void 0;\n            if (pow > 20) {\n                powres = Math.pow(2, pow);\n            } else {\n                powres = POWERS[pow];\n            }\n            var temp = Math.pow(-p[m] / (p[k] / powres), 1 / (m - k));\n            timesUsed[k]++;\n            if (tempub > temp) {\n                tempub = temp;\n            }\n            any = true;\n        }\n        if (any && ub < tempub) ub = tempub;\n    }\n    return ub;\n}\n/**\n * <p>\n * Calculates a lower bound for the positive roots of the given\n * polynomial.\n * </p>\n * <p>\n * See algoritm 6 of the paper by Vigklas, Akritas and Strzeboński,\n * specifically the LocalMaxQuadratic algorithm hence LMQ.\n * </p>\n * @param p - The polynomial\n * @example\n * FloPoly.positiveRootLowerBound_LMQ([2,-3,6,5,-130]); //=> 1.6883241876925903\n * FloPoly.positiveRootLowerBound_LMQ([2,3]);           //=> 0\n * FloPoly.positiveRootLowerBound_LMQ([-2,-3,-4]);      //=> 0\n */\nfunction positiveRootLowerBound_LMQ(p) {\n    var ub = positiveRootUpperBound_LMQ(invert(p));\n    if (ub === 0) {\n        return 0;\n    }\n    return 1 / ub;\n}\n/**\n * See positiveRootUpperBound_LMQ\n *\n * @param p - The polynomial\n * @returns {number} An upper bound.\n */\nfunction negativeRootUpperBound_LMQ(p) {\n    return -positiveRootLowerBound_LMQ(reflectAboutYAxis(p));\n}\n/**\n * See positiveRootLowerBound_LMQ\n *\n * @param p - The polynomial\n * @returns {number} A lower bound.\n */\nfunction negativeRootLowerBound_LMQ(p) {\n    return -positiveRootUpperBound_LMQ(reflectAboutYAxis(p));\n}\nvar rootBounds = {\n    rootMagnitudeUpperBound_fujiwara: rootMagnitudeUpperBound_fujiwara,\n    positiveRootUpperBound_LMQ: positiveRootUpperBound_LMQ,\n    positiveRootLowerBound_LMQ: positiveRootLowerBound_LMQ,\n    negativeRootUpperBound_LMQ: negativeRootUpperBound_LMQ,\n    negativeRootLowerBound_LMQ: negativeRootLowerBound_LMQ,\n    rootMagnitudeUpperBound_rouche: rootMagnitudeUpperBound_rouche\n};\nexports.default = rootBounds;\n\n},{\"./core-operators\":44}],49:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_operators_1 = _dereq_(\"./core-operators\");\nvar _core_operators_1$def = core_operators_1.default,\n    sturmChain = _core_operators_1$def.sturmChain,\n    evaluate = _core_operators_1$def.evaluate,\n    signChanges = _core_operators_1$def.signChanges;\n/**\n * <p>\n * Floating-point-stably calculates and returns the ordered quadratic\n * roots of the given quadratic polynomial.\n * </p>\n * <p>\n * This function is included only because it might be slightly faster\n * than calling allRoots due to allRoots first checking if the\n * polynomial is quadratic and checking if the roots are within the\n * given range.\n * </p>\n * @param p - The 2nd order polynomial\n * @example\n * FloPoly.quadraticRoots([1, -3, 2]); //=> [1,2]\n */\n\nfunction quadraticRoots(p) {\n    var _p = _slicedToArray(p, 3),\n        a = _p[0],\n        b = _p[1],\n        c = _p[2];\n\n    var delta = b * b - 4 * a * c;\n    if (delta < 0) {\n        // No real roots;\n        return [];\n    }\n    if (delta === 0) {\n        return [-b / (2 * a)];\n    }\n    delta = Math.sqrt(delta);\n    var root1 = void 0;\n    var root2 = void 0;\n    if (b >= 0) {\n        root1 = (-b - delta) / (2 * a);\n        root2 = 2 * c / (-b - delta);\n    } else {\n        root1 = 2 * c / (-b + delta);\n        root2 = (-b + delta) / (2 * a);\n    }\n    if (root1 < root2) {\n        return [root1, root2];\n    }\n    return [root2, root1];\n}\n/**\n * Calculates the roots of the given cubic polynomial.\n *\n * This code is mostly from the Pomax guide found at\n * https://pomax.github.io/bezierinfo/#extremities\n *\n * @param p - A cubic polynomial.\n */\n// TODO - This function as it currently stands is very sensitive to\n// the first coefficient if it is very small, e.g. compare:\n// cubicRoots([1e-5, 1560,-1740,96]) = [1.1903631761670113, -156000001.1153846, -0.07497859001159668] \n// vs\n// quadraticRoots([1560,-1740,96]) = [0.05821032751613551, 1.0571742878684798]\n// It is completely useless in some ranges of its input domain:\n// the part of the function 'if (discriminant < 0) {}'\n// is highly problematic for numerical stability.\n// Simply use allRoots / allRootsRecursive instead.\n/*\nfunction cubicRoots(p) {\n\r\n    function cuberoot(v) {\n        return v < 0\n            ? -Math.pow(-v, 1/3)\n            : +Math.pow(v, 1/3);\n    }\n    \r\n    let cbrt = Math.cbrt || cuberoot;\n    \r\n    let d = p[0];\n    let a = p[1] / d;\n    let b = p[2] / d;\n    let c = p[3] / d;\n    \r\n    let s  = (3*b - a*a) / 9;\n    let q  = (2*a*a*a - 9*a*b + 27*c) / 54;\n    \r\n    let s3 = s*s*s;\n    let q2 = q*q;\n    \r\n    let discriminant = q2 + s3;\n\r\n    if (!Number.isFinite(discriminant)) {\n        \r\n        // Overflow occured - in which case one root will be very large.\n        // We might want to report such large roots as positive or\n        // negative infinity but since they are rarely of interest we\n        // report only the smaller roots.\n        \r\n        // Here q*q   === (729*c^2 - 486*a*b*c + 108*a^3*c + 81*a^2*b^2 - 36*a^4*b + 4*a^6) / (729*4)\n        // and  s*s*s === (27*b^3 - 27*a^2*b^2 + 9*a^4*b - a^6) / (729*1)\n        \r\n        return quadraticRoots(p.slice(1));\n    }\n    \r\n    if (discriminant < 0) {\n        // three real roots\n        \r\n        let r = Math.sqrt(-s3);\n        let t = -q / r;\n        \r\n        let cosphi = t < -1 ? -1 : t > 1 ? 1 : t;\n        let phi    = Math.acos(cosphi);\n        let\tt1     = 2*cbrt(r);\n        \r\n        let ao3 = a/3;\n        \r\n        return [\n            t1*Math.cos((phi            )/3) - ao3,\n            t1*Math.cos((phi + 2*Math.PI)/3) - ao3,\n            t1*Math.cos((phi + 4*Math.PI)/3) - ao3\n        ]\n    } else if (discriminant === 0) {\n        // three real roots, but two of them are equal\n        \r\n        let u1 = q < 0 ? cbrt(-q) : -cbrt(q);\n        let ao3 = a/3;\n        \r\n        return [\n            2*u1 - ao3,\n            -u1 - ao3\n        ];\n    } else {\n        // one real root, two complex roots\n        \r\n        let sd = Math.sqrt(discriminant);\n        let u1 = cbrt(sd - q);\n        let v1 = cbrt(sd + q);\n        \r\n        return [u1 - v1 - a/3];\n    }\n}\n*/\n/**\n * Returns the number of real roots in the interval (a,b) of the given\n * polynomial.\n * @param p - The polynomial\n * @param a - The lower bound\n * @param b - The upper bound\n * @example\n * let p = [1, 1, -64, 236, -240];\n * FloPoly.numRootsWithin(p,-20,-11); //=> 0\n * FloPoly.numRootsWithin(p,-11,-9);  //=> 1\n * FloPoly.numRootsWithin(p,-11,3.5); //=> 3\n * FloPoly.numRootsWithin(p,-11,5);   //=> 4\n */\nfunction numRootsWithin(p, a, b) {\n    var ps = sturmChain(p);\n    var ev = evaluate(p);\n    var as = ps.map(function (p) {\n        return evaluate(p)(a);\n    });\n    var bs = ps.map(function (p) {\n        return evaluate(p)(b);\n    });\n    return signChanges(as) - signChanges(bs);\n}\n/**\n * <p>\n * Searches an interval (a,b) for a root (i.e. zero) of the\n * given function with respect to its first argument using the Bisection\n * Method root-finding algorithm. Any function can be supplied (it does\n * not even have to be continuous) as long as the root is bracketed.\n * </p>\n * <p>\n * Note: This function has no advantages above the Brent method except\n * for its simpler implementation and can be much slower. Use brent\n * instead.\n * </p>\n * @param f - The function for which the root is sought.\n * @param a - The lower limit of the search interval.\n * @param b - The upper limit of the search interval.\n * @example\n * let p = FloPoly.fromRoots([-10,2,3,4]);  //=> [1, 1, -64, 236, -240]\n * let f = FloPoly.evaluate(p);\n * FloPoly.bisection(f,2.2,3.8); //=> 3\n * FloPoly.bisection(f,2.2,3.1); //=> 3.0000000000000044\n */\nfunction bisection(f, a, b) {\n    if (a === b) {\n        // Presumably the root is already found.\n        return a;\n    } else if (b < a) {\n        // Swap a and b \n        var _ref = [b, a];\n        a = _ref[0];\n        b = _ref[1];\n    }\n    var fa = f(a);\n    var fb = f(b);\n    if (fa === 0) {\n        return a;\n    }\n    if (fb === 0) {\n        return b;\n    }\n    if (fa * fb > 0) {\n        // Root is not bracketed - this is a precondition.\n        throw new Error('Root not bracketed');\n    }\n    while (true) {\n        var c = a + (b - a) / 2; // Take midpoint\n        var fc = f(c);\n        if (fc === 0) {\n            return c;\n        }\n        if (fa * fc < 0) {\n            b = c;\n        } else {\n            a = c;\n        }\n        // We don't add Number.EPSILON in the line below because we want\n        // accuracy to improve even below 1.\n        var δ = 2 * Number.EPSILON * Math.abs(b) /*+ Number.EPSILON*/;\n        if (Math.abs(a - b) <= δ) {\n            return b;\n        }\n    }\n}\n/**\n * <p>\n * Searches an interval (a,b) for a root (i.e. zero) of the\n * given function with respect to its first argument using the Brent's\n * Method root-finding algorithm. Any function can be supplied (it does\n * not even have to be continuous) as long as the root is bracketed.\n * </p>\n * <p>\n * Brent's Method is an excellent root-finding choice since it is\n * (1) guaranteed to converge (unlike the Newton and other so-called\n * single-point methods), (2) converges in a reasonable number of\n * iterations even for highly contrived functions (unlike Dekker's\n * Method) and (3) nearly always converges extremely fast, i.e. super-\n * linearly (unlike the Secant and Regula-Falsi methods).\n * </p>\n * <p>\n * The max error, δ, is set equal to 2*Number.EPSILON*Math.abs(b)\n * after each iteration where b is the max of the current 2 best\n * guesses.\n * </p>\n * <p>\n * See <a href=\"https://en.wikipedia.org/wiki/Brent%27s_method\">Wikipedia</a>\n * </p>\n * <p>\n * See <a href=\"https://maths-people.anu.edu.au/~brent/pd/rpb011i.pdf\">Brent (page 47)</a>\n * </p>\n * @param f - The function for which the root is sought.\n * @param a - The lower limit of the search interval.\n * @param b - The upper limit of the search interval.\n * about 1e-15 multiplied by the root magnitued).\n * @example\n * let p = FloPoly.fromRoots([-10,2,3,4]);  //=> [1, 1, -64, 236, -240]\n * let f = FloPoly.evaluate(p);\n * FloPoly.brent(f,2.2,3.8); //=> 3.000000000000003\n * FloPoly.brent(f,2.2,3.1); //=> 3.000000000000001\n */\nfunction brent(f, a, b) {\n    if (a === b) {\n        // Presumably the root is already found.\n        return a;\n    }\n    // We assume on the first iteration f(a) !== 0 && f(b) !== 0. \n    var fa = f(a);\n    var fb = f(b);\n    if (fa * fb > 0) {\n        // Root is not bracketed - this is a precondition.\n        throw new Error('Root not bracketed');\n    }\n    var c = void 0; // Value of previous guess - set to a initially \n    if (Math.abs(fa) < Math.abs(fb)) {\n        // Swap a,b\n        c = a;\n        a = b;\n        b = c;\n        // Swap fa,fb\n        var temp = fa;\n        fa = fb;\n        fb = temp;\n    }\n    c = a;\n    var mflag = true;\n    var d = void 0; // Value of guess before previous guess\n    while (true) {\n        var δ = 2 * Number.EPSILON * Math.abs(b); // + Number.EPSILON;\n        var fc = f(c);\n        // Calculate provisional interpolation value\n        var s = void 0;\n        if (fa !== fc && fb !== fc) {\n            // 3 points available - inverse quadratic interpolation\n            var fac = fa - fc;\n            var fab = fa - fb;\n            var fbc = fb - fc;\n            // The below has been multiplied out to speed up the algorithm.\n            /*s = ((a * fb * fc) / ( fab * fac)) +\n                  ((b * fa * fc) / (-fab * fbc)) +\n                  ((c * fa * fb) / ( fac * fbc));*/\n            s = ((a * fb * fbc - b * fa * fac) * fc + c * fa * fab * fb) / (fab * fac * fbc);\n        } else {\n            // only 2 points available - secant method\n            s = b - fb * ((b - a) / (fb - fa));\n        }\n        var t1 = (3 * a + b) / 4;\n        var b_c = Math.abs(b - c);\n        var s_b = Math.abs(s - b);\n        var c_d = Math.abs(c - d);\n        if (!(s > t1 && s < b || s < t1 && s > b) || mflag && (\n        // condition 2\n        s_b >= b_c / 2 ||\n        // condition 4\n        b_c < δ) || !mflag && (\n        // condition 3\n        s_b >= c_d / 2 ||\n        // condition 5\n        c_d < δ)) {\n            // Bisection\n            s = (a + b) / 2;\n            mflag = true;\n        } else {\n            mflag = false;\n        }\n        var fs = f(s);\n        d = c;\n        c = b;\n        if (fa * fs < 0) {\n            b = s;\n        } else {\n            a = s;\n        }\n        if (Math.abs(fa) < Math.abs(fb)) {\n            // Swap a,b\n            var _temp = a;\n            a = b;\n            b = _temp;\n        }\n        if (fb === 0) {\n            return b;\n        }\n        if (fs === 0) {\n            return s;\n        }\n        if (Math.abs(a - b) <= δ) {\n            return b;\n        }\n        fa = f(a);\n        fb = f(b);\n    }\n}\nvar rootOperators = {\n    quadraticRoots: quadraticRoots,\n    numRootsWithin: numRootsWithin,\n    brent: brent,\n    bisection: bisection\n};\nexports.default = rootOperators;\n\n},{\"./core-operators\":44}],50:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DELTA = 1e-10;\n/**\n * Curry the given arity two function.\n * @param f - A function\n */\nfunction curry2(f) {\n    function g(t, u) {\n        return u === undefined ? function (u) {\n            return f(t, u);\n        } : f(t, u);\n    }\n    return g;\n}\n/**\n* Creates a transformation function that operates on multiple points from the\n* given arity two function.\n* @private\n*/\nfunction mapCurry2(f) {\n    function g(t, us) {\n        var h = f(t);\n        var hUs = function hUs(us) {\n            return us.map(h);\n        };\n        // Curry the function\n        return us === undefined ? hUs : hUs(us);\n    }\n    return g;\n}\n/**\n* Creates a transformation function that operates on multiple points from the\n* given arity 3 curried function (keeping the first two parameters uncurried).\n* @private\n*/\nfunction specialMapCurry(f) {\n    function g(s, t, us) {\n        var h = f(s, t);\n        var hUs = function hUs(us) {\n            return us.map(h);\n        };\n        // Curry the function\n        return us === undefined ? hUs : hUs(us);\n    }\n    return g;\n}\n/**\n * Returns the dot (inner) product between two 2-vectors.\n * @param a - The first vector\n * @param b - The second vector\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\nexports.dot = dot;\n/**\n * Returns the cross product signed magnitude between two 2-vectors.\n * @param a - The first vector\n * @param b - The second vector\n */\nfunction cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\nexports.cross = cross;\n/**\n * Three 2d points are a counter-clockwise turn if ccw > 0, clockwise if\n * ccw < 0, and colinear if ccw = 0 because ccw is a determinant that gives\n * twice the signed area of the triangle formed by p1, p2 and p3.\n * @param p1 - The first point\n * @param p2 - The second point\n * @param p3 - The third point\n * @param delta - The tolerance at which the three points are considered\n * collinear - defaults to 1e-10.\n */\nfunction ccw(p1, p2, p3) {\n    var delta = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DELTA;\n\n    var res = (p2[0] - p1[0]) * (p3[1] - p1[1]) - (p2[1] - p1[1]) * (p3[0] - p1[0]);\n    return Math.abs(res) <= delta ? 0 : res;\n}\nexports.ccw = ccw;\n/**\n* <p>\n* Returns the point where two line segments intersect or undefined if they\n* don't intersect or a line if they intersect at infinitely many points.\n* </p>\n* <p>\n* See <a href=\"http://algs4.cs.princeton.edu/91primitives\">Geometric primitves</a>\n* </p>\n* @param ab - The first line\n* @param cd - The second line\n* @param delta - The tolerance at which the lines are considered parallel -\n* defaults to 1e-10.\n*/\nfunction segSegIntersection(ab, cd) {\n    var delta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DELTA;\n\n    var _ab = _slicedToArray(ab, 2),\n        a = _ab[0],\n        b = _ab[1];\n\n    var _cd = _slicedToArray(cd, 2),\n        c = _cd[0],\n        d = _cd[1];\n\n    var denom = (b[0] - a[0]) * (d[1] - c[1]) - (b[1] - a[1]) * (d[0] - c[0]);\n    var rNumer = (a[1] - c[1]) * (d[0] - c[0]) - (a[0] - c[0]) * (d[1] - c[1]);\n    var sNumer = (a[1] - c[1]) * (b[0] - a[0]) - (a[0] - c[0]) * (b[1] - a[1]);\n    if (Math.abs(denom) <= delta) {\n        // parallel\n        if (Math.abs(rNumer) <= delta) {\n            // colinear\n            // TODO Check if x-projections and y-projections intersect\n            // and return the line of intersection if they do.\n            return undefined;\n        }\n        return undefined;\n    }\n    var r = rNumer / denom;\n    var s = sNumer / denom;\n    if (0 <= r && r <= 1 && 0 <= s && s <= 1) {\n        return [a[0] + r * (b[0] - a[0]), a[1] + r * (b[1] - a[1])];\n    }\n    return undefined;\n}\nexports.segSegIntersection = segSegIntersection;\n/**\n* Returns true if the two given 2d line segments intersect, false otherwise.\n* @param a - A line segment\n* @param b - Another line segment\n*/\nfunction doesSegSegIntersect(a, b) {\n    if (ccw(a[0], a[1], b[0]) * ccw(a[0], a[1], b[1]) > 0) {\n        return false;\n    } else if (ccw(b[0], b[1], a[0]) * ccw(b[0], b[1], a[1]) > 0) {\n        return false;\n    }\n    return true;\n}\nexports.doesSegSegIntersect = doesSegSegIntersect;\n/**\n* Returns the squared distance between two 2d points.\n* @param p1 - A point\n* @param p2 - Another point\n*/\nfunction squaredDistanceBetween(p1, p2) {\n    var x = p2[0] - p1[0];\n    var y = p2[1] - p1[1];\n    return x * x + y * y;\n}\nexports.squaredDistanceBetween = squaredDistanceBetween;\n/**\n* Returns a scaled version of the given 2-vector.\n* @param p - A vector\n* @param factor - A scale factor\n*/\nfunction scale(p, factor) {\n    return [p[0] * factor, p[1] * factor];\n}\nexports.scale = scale;\n/**\n* Returns the given 2-vector reversed.\n* @param p - A vector\n*/\nfunction reverse(p) {\n    return [-p[0], -p[1]];\n}\nexports.reverse = reverse;\n/**\n* Returns the given 2-vector scaled to a length of one.\n* @param p - A vector\n*/\nfunction toUnitVector(p) {\n    var scaleFactor = 1 / len(p);\n    return [p[0] * scaleFactor, p[1] * scaleFactor];\n}\nexports.toUnitVector = toUnitVector;\n/**\n* Returns the given 2-vector scaled to the given length.\n* @param p - A vector\n* @param length - The length to scale to\n*/\nfunction toLength(p, length) {\n    var scaleFactor = length / len(p);\n    return [p[0] * scaleFactor, p[1] * scaleFactor];\n}\nexports.toLength = toLength;\n/**\n* Returns the second 2-vector minus the first.\n* @param p1 - The first vector\n* @param p2 - The second vector\n*/\nfunction fromTo(p1, p2) {\n    return [p2[0] - p1[0], p2[1] - p1[1]];\n}\nexports.fromTo = fromTo;\n/**\n* Performs linear interpolation between two 2d points and returns the resultant point.\n* @param p1 - The first point.\n* @param p2 - The second point.\n* @param t - The interpolation fraction (often in [0,1]).\n*/\nfunction interpolate(p1, p2, t) {\n    return [p1[0] + (p2[0] - p1[0]) * t, p1[1] + (p2[1] - p1[1]) * t];\n}\nexports.interpolate = interpolate;\n/**\n* Returns the mean of two 2d points.\n* @param ps - The two points\n*/\nfunction mean(ps) {\n    var p1 = ps[0];\n    var p2 = ps[1];\n    return [(p1[0] + p2[0]) / 2, (p1[1] + p2[1]) / 2];\n}\nexports.mean = mean;\n/**\n* Returns the distance between two 2d points.\n* @param p1 - A point.\n* @param p2 - Another point.\n*/\nfunction distanceBetween(p1, p2) {\n    return Math.sqrt(squaredDistanceBetween(p1, p2));\n}\nexports.distanceBetween = distanceBetween;\n/**\n* Returns the length of the given 2-vector.\n* @param p - A vector\n*/\nfunction len(p) {\n    return Math.sqrt(p[0] * p[0] + p[1] * p[1]);\n}\nexports.len = len;\n/**\n* Returns the squared length of the given 2-vector.\n* @param p - A vector\n*/\nfunction lengthSquared(v) {\n    return v[0] * v[0] + v[1] * v[1];\n}\nexports.lengthSquared = lengthSquared;\n/**\n* Returns the Manhattan distance between two 2d points.\n* @param p1 - A point.\n* @param p2 - Another point.\n*/\nfunction manhattanDistanceBetween(p1, p2) {\n    return Math.abs(p1[0] - p2[0]) + Math.abs(p1[1] - p2[1]);\n}\nexports.manhattanDistanceBetween = manhattanDistanceBetween;\n/**\n* Returns the Manhattan length of the given 2-vector.\n* @param p - A vector\n*/\nfunction manhattanLength(p) {\n    return Math.abs(p[0]) + Math.abs(p[1]);\n}\nexports.manhattanLength = manhattanLength;\n/**\n* <p>\n* Returns the distance between the given point and line.\n* </p>\n* <p>\n* See <a href=\"https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line#Line_defined_by_two_points\">\n* this Wikipedia article</a>\n* </p>\n* @param p - A point\n* @param l - A line\n*/\nfunction distanceBetweenPointAndLine(p, l) {\n    var _p = _slicedToArray(p, 2),\n        x0 = _p[0],\n        y0 = _p[1];\n\n    var _l = _slicedToArray(l, 2),\n        _l$ = _slicedToArray(_l[0], 2),\n        x1 = _l$[0],\n        y1 = _l$[1],\n        _l$2 = _slicedToArray(_l[1], 2),\n        x2 = _l$2[0],\n        y2 = _l$2[1];\n\n    var y = y2 - y1;\n    var x = x2 - x1;\n    var a = y * x0 - x * y0 + x2 * y1 - y2 * x1;\n    var b = Math.sqrt(x * x + y * y);\n    return Math.abs(a / b);\n}\nexports.distanceBetweenPointAndLine = distanceBetweenPointAndLine;\n/**\n* Returns the squared distance between the given point and line segment.\n* @param p - A point\n* @param l - A line\n*/\nfunction squaredDistanceBetweenPointAndLineSegment(p, l) {\n    var sqDst = squaredDistanceBetween;\n    var v = l[0];\n    var w = l[1];\n    var l2 = sqDst(v, w);\n    if (l2 == 0) {\n        return sqDst(p, v);\n    }\n    var t = ((p[0] - v[0]) * (w[0] - v[0]) + (p[1] - v[1]) * (w[1] - v[1])) / l2;\n    t = Math.max(0, Math.min(1, t));\n    var d2 = sqDst(p, [v[0] + t * (w[0] - v[0]), v[1] + t * (w[1] - v[1])]);\n    return d2;\n}\nexports.squaredDistanceBetweenPointAndLineSegment = squaredDistanceBetweenPointAndLineSegment;\n/**\n* Returns the circumcenter of the given 2d triangle.\n* @param triangle\n*/\nfunction circumCenter(triangle) {\n    // See wikipedia\n    var p1 = triangle[0];\n    var p2 = triangle[1];\n    var p3 = triangle[2];\n    var sqLen = lengthSquared;\n    var Sx = 0.5 * det3([sqLen(p1), p1[1], 1], [sqLen(p2), p2[1], 1], [sqLen(p3), p3[1], 1]);\n    var Sy = 0.5 * det3([p1[0], sqLen(p1), 1], [p2[0], sqLen(p2), 1], [p3[0], sqLen(p3), 1]);\n    var a = det3([p1[0], p1[1], 1], [p2[0], p2[1], 1], [p3[0], p3[1], 1]);\n    var b = det3([p1[0], p1[1], sqLen(p1)], [p2[0], p2[1], sqLen(p2)], [p3[0], p3[1], sqLen(p3)]);\n    return [Sx / a, Sy / a];\n}\nexports.circumCenter = circumCenter;\n/**\n* <p>\n* Returns the incenter of the given triangle.\n* </p>\n* <p>\n* See Wikipedia - https://en.wikipedia.org/wiki/Incenter\n* </p>\n* @param triangle\n*/\nfunction inCenter(triangle) {\n    var dst = distanceBetween;\n    var p1 = triangle[0];\n    var p2 = triangle[1];\n    var p3 = triangle[2];\n    var l1 = dst(p2, p3);\n    var l2 = dst(p1, p3);\n    var l3 = dst(p1, p2);\n    var lengthSum = l1 + l2 + l3;\n    return [(l1 * p1[0] + l2 * p2[0] + l3 * p3[0]) / lengthSum, (l1 * p1[1] + l2 * p2[1] + l3 * p3[1]) / lengthSum];\n}\nexports.inCenter = inCenter;\n/**\n* Returns the centroid of the given polygon, e.g. triangle. The polygon\n* must be simple, i.e. not self-intersecting.\n* @param polygon\n*/\nfunction centroid(polygon) {\n    if (polygon.length === 3) {\n        var p1 = polygon[0];\n        var p2 = polygon[1];\n        var p3 = polygon[2];\n        var x = p1[0] + p2[0] + p3[0];\n        var y = p1[1] + p2[1] + p3[1];\n        return [x / 3, y / 3];\n    }\n    // polygon.length assumed > 3 and assumed to be non-self-intersecting\n    // See wikipedia\n    // First calculate the area, A, of the polygon\n    var A = 0;\n    for (var i = 0; i < polygon.length; i++) {\n        var p0 = polygon[i];\n        var _p2 = i === polygon.length - 1 ? polygon[0] : polygon[i + 1];\n        A = A + (p0[0] * _p2[1] - _p2[0] * p0[1]);\n    }\n    A = A / 2;\n    var C = [0, 0];\n    for (var _i = 0; _i < polygon.length; _i++) {\n        var _p3 = polygon[_i];\n        var _p4 = _i === polygon.length - 1 ? polygon[0] : polygon[_i + 1];\n        C[0] = C[0] + (_p3[0] + _p4[0]) * (_p3[0] * _p4[1] - _p4[0] * _p3[1]);\n        C[1] = C[1] + (_p3[1] + _p4[1]) * (_p3[0] * _p4[1] - _p4[0] * _p3[1]);\n    }\n    return [C[0] / (6 * A), C[1] / (6 * A)];\n}\nexports.centroid = centroid;\n/**\n* Calculate the determinant of three 3d vectors, i.e. 3x3 matrix\n* @ignore\n* @param x - A 2d vector\n* @param y - Another 2d vector\n* @param z - Another 2d vector\n*/\nfunction det3(x, y, z) {\n    return x[0] * (y[1] * z[2] - y[2] * z[1]) - x[1] * (y[0] * z[2] - y[2] * z[0]) + x[2] * (y[0] * z[1] - y[1] * z[0]);\n}\nexports.det3 = det3;\nfunction translate(a, b) {\n    function f(b) {\n        return [a[0] + b[0], a[1] + b[1]];\n    }\n    // Curry the function\n    return b === undefined ? f : f(b);\n}\nexports.translate = translate;\n/**\n* Return the given 2d points translated by the given 2d vector. This\n* function is curried.\n* @param v\n* @param ps\n*/\nvar translatePs = mapCurry2(translate);\nexports.translatePs = translatePs;\n/**\n* Return the given 2d points translated by the given 2d vector. This function\n* is curried.\n* @param sinθ\n* @param cosθ\n* @param ps\n*/\nvar rotatePs = specialMapCurry(rotate);\nexports.rotatePs = rotatePs;\nfunction rotate(sinθ, cosθ, p) {\n    var a = translatePs([1, 2]);\n    function rotateByθ(p) {\n        return [p[0] * cosθ - p[1] * sinθ, p[0] * sinθ + p[1] * cosθ];\n    }\n    // Curry the function\n    return p === undefined ? rotateByθ : rotateByθ(p);\n}\nexports.rotate = rotate;\n/**\n* Returns true if two 2-vectors are identical (by value), false otherwise.\n* @param a - A 2d vector\n* @param b - Another 2d vector\n*/\nfunction equal(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\nexports.equal = equal;\n/**\n* Returns a anti-clockwise rotated version of the given 2-vector given the\n* sine and cosine of the angle.\n* @param p - A 2d vector\n* @param sinθ\n* @param cosθ\n*/\nfunction reverseRotate(sinθ, cosθ, p) {\n    return [+p[0] * cosθ + p[1] * sinθ, -p[0] * sinθ + p[1] * cosθ];\n}\nexports.reverseRotate = reverseRotate;\n/**\n* Returns a 90 degrees rotated version of the given 2-vector.\n* @param p - A 2d vector\n*/\nfunction rotate90Degrees(p) {\n    return [-p[1], p[0]];\n}\nexports.rotate90Degrees = rotate90Degrees;\n/**\n* Returns a negative 90 degrees rotated version of the given 2-vector.\n* @param p - A 2d vector\n*/\nfunction rotateNeg90Degrees(p) {\n    return [p[1], -p[0]];\n}\nexports.rotateNeg90Degrees = rotateNeg90Degrees;\n/**\n* Transforms the given 2-vector by applying the given function to each\n* coordinate.\n* @param p - A 2d vector\n* @param f - A transformation function\n*/\nfunction transform(p, f) {\n    return [f(p[0]), f(p[1])];\n}\nexports.transform = transform;\n/**\n* Returns the closest point to the array of 2d points, optionally providing\n* a distance function.\n* @param p\n* @param ps\n* @param f - Optional distance function - defaults to\n* squaredDistanceBetween.\n*/\nfunction getClosestTo(p, ps) {\n    var closestPoint = undefined;\n    var closestDistance = Number.POSITIVE_INFINITY;\n    for (var i = 0; i < ps.length; i++) {\n        var q = ps[i];\n        var d = squaredDistanceBetween(p, q);\n        if (d < closestDistance) {\n            closestPoint = q;\n            closestDistance = d;\n        }\n    }\n    return closestPoint;\n}\nexports.getClosestTo = getClosestTo;\n/**\n* Returns the closest point to the array of 2d points, optionally providing\n* a distance function.\n* @param p\n* @param ps\n* @param f - Optional distance function - defaults to\n* squaredDistanceBetween.\n*/\nfunction getObjClosestTo(p, ps, f) {\n    var closestObj = undefined; // Closest Point\n    var closestDistance = Number.POSITIVE_INFINITY;\n    for (var i = 0; i < ps.length; i++) {\n        var o = ps[i];\n        var d = squaredDistanceBetween(p, f(o));\n        if (d < closestDistance) {\n            closestObj = o;\n            closestDistance = d;\n        }\n    }\n    return closestObj;\n}\nexports.getObjClosestTo = getObjClosestTo;\n/**\n* Returns an array of points by applying a translation and then rotation to\n* the given points.\n* @param v - The translation vector\n* @param sinθ\n* @param cosθ\n* @param ps - The input points\n**/\nfunction translateThenRotatePs(v, sinθ, cosθ, ps) {\n    var f = translate(v);\n    return ps.map(function (p) {\n        return rotate(sinθ, cosθ, f(p));\n    });\n}\nexports.translateThenRotatePs = translateThenRotatePs;\n/**\n* Returns an array of points by applying a rotation and then translation to\n* the given points.\n* @param sinθ\n* @param cosθ\n* @param v - The translation vector\n* @param ps - The input points\n**/\nfunction rotateThenTranslatePs(sinθ, cosθ, v, ps) {\n    return ps.map(function (p) {\n        return translate(v, rotate(sinθ, cosθ, p));\n    });\n}\nexports.rotateThenTranslatePs = rotateThenTranslatePs;\n;\n//export  Vector2d;\n\n},{}],51:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar BezierPiece =\n/**\r\n * @param curve\r\n * @param ts The start and end t parameter of the original bezier curve\r\n */\nfunction BezierPiece(curve, ts) {\n    _classCallCheck(this, BezierPiece);\n\n    this.curve = curve;\n    this.ts = ts;\n};\n\nexports.BezierPiece = BezierPiece;\n\n},{}],52:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar EVENT_LEFT = 0;\nvar EVENT_RIGHT = 1;\n/**\r\n * Find and return axis-aligned open boxes that intersect via a sweepline\r\n * algorithm.\r\n */\nfunction findBbIntersections(boxes) {\n    // Initialize event queue to equal all box x-axis endpoints.\n    var events = [];\n    for (var i = 0; i < boxes.length; i++) {\n        var box = boxes[i];\n        var smallerSide = box[0][0] < box[1][0] ? 0 : 1;\n        var largerSide = smallerSide === 0 ? 1 : 0;\n        events.push(new Event(0, box, box[smallerSide]));\n        events.push(new Event(1, box, box[largerSide]));\n    }\n    events.sort(Event.compare);\n    var activeBoxes = new Set();\n    var intersections = [];\n    for (var _i = 0; _i < events.length; _i++) {\n        var event = events[_i];\n        var _box = event.box;\n        if (event.type === EVENT_LEFT) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = activeBoxes.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var activeBox = _step.value;\n\n                    if (areBoxesIntersecting(_box, activeBox)) {\n                        intersections.push({\n                            box1: _box, box2: activeBox\n                        });\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            activeBoxes.add(_box);\n        } else if (event.type === EVENT_RIGHT) {\n            activeBoxes.delete(event.box);\n        }\n    }\n    return intersections;\n}\n\nvar Event = function () {\n    /**\r\n     * Event class constructor\r\n     * @param type - 0 -> left side, 1 -> right side\r\n     * @param box - An axis-aligned 2-box described by 2 points\r\n     * @param p - A point.\r\n     */\n    function Event(type, box, p) {\n        _classCallCheck(this, Event);\n\n        this.type = type;\n        this.box = box;\n        this.p = p;\n    }\n    /**\r\n     * Compare two Events by their x-axis and then by their type. Since it is\r\n     * open boxes that are compare we must let the right endpoint type come\r\n     * before the left.\r\n     * @param a A point (within an object)\r\n     * @param b A point (within an object)\r\n     */\n\n\n    _createClass(Event, null, [{\n        key: \"compare\",\n        value: function compare(a, b) {\n            var res = a.p[0] - b.p[0];\n            if (res !== 0) {\n                return res;\n            }\n            if (a.box === b.box) {\n                return a.type === EVENT_RIGHT ? -1 : +1;\n            }\n            return a.type === EVENT_LEFT ? +1 : -1;\n        }\n    }]);\n\n    return Event;\n}();\n/**\r\n * Returns true if the 2 given (open) boxes intersect. At this stage we already\r\n * know their x-axis intersect.\r\n */\n\n\nfunction areBoxesIntersecting(a, b) {\n    var _a = _slicedToArray(a, 2),\n        _a$ = _slicedToArray(_a[0], 2),\n        a0 = _a$[1],\n        _a$2 = _slicedToArray(_a[1], 2),\n        a1 = _a$2[1];\n\n    var _b = _slicedToArray(b, 2),\n        _b$ = _slicedToArray(_b[0], 2),\n        b0 = _b$[1],\n        _b$2 = _slicedToArray(_b[1], 2),\n        b1 = _b$2[1];\n\n    if (a0 > a1) {\n        var _ref = [a1, a0];\n        a0 = _ref[0];\n        a1 = _ref[1];\n    }\n    ;\n    if (b0 > b1) {\n        var _ref2 = [b1, b0];\n        b0 = _ref2[0];\n        b1 = _ref2[1];\n    }\n    ;\n    if (a0 === b0) {\n        if (a0 === a1 || b0 === b1) {\n            return false;\n        }\n        return true;\n    }\n    if (a0 < b0) {\n        if (a1 <= b0) {\n            return false;\n        }\n        return true;\n    }\n    if (a0 > b0) {\n        if (b1 <= a0) {\n            return false;\n        }\n        return true;\n    }\n}\nexports.default = findBbIntersections;\n\n},{}],53:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\n\nvar Circle = function () {\n    /**\r\n    * @param center\r\n    * @param radius\r\n    */\n    function Circle(center, radius) {\n        _classCallCheck(this, Circle);\n\n        this.center = center;\n        this.radius = radius;\n    }\n    /**\r\n     * Returns a scaled version of the given circle without changing its center.\r\n     * @param circle\r\n     * @param s multiplier\r\n     */\n\n\n    _createClass(Circle, null, [{\n        key: \"scale\",\n        value: function scale(circle, s) {\n            return new Circle(circle.center, circle.radius * s);\n        }\n        /**\r\n         * Returns true if the first circle engulfs the second.\r\n         * @param c1\r\n         * @param c2\r\n         */\n\n    }, {\n        key: \"engulfsCircle\",\n        value: function engulfsCircle(c1, c2) {\n            if (c1.radius <= c2.radius) {\n                return false;\n            }\n            var d = flo_vector2d_1.squaredDistanceBetween(c1.center, c2.center);\n            var dr = c1.radius - c2.radius;\n            var δ = dr * dr;\n            return δ > d;\n        }\n        /**\r\n         * Returns a human-readable string description of the given circle.\r\n         * @param circle\r\n         */\n\n    }, {\n        key: \"toString\",\n        value: function toString(circle) {\n            return 'c: ' + circle.center + ' r: ' + circle.radius;\n        }\n    }]);\n\n    return Circle;\n}();\n\nexports.Circle = Circle;\n\n},{\"flo-vector2d\":50}],54:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar point_on_shape_1 = _dereq_(\"./point-on-shape\");\n\nvar ContactPoint = function () {\n    /**\r\n     * Representation of a point on a loop (or shape).\r\n     * @param pointOnShape\r\n     * @param vertex\r\n     */\n    function ContactPoint(pointOnShape, circle, order, order2) {\n        _classCallCheck(this, ContactPoint);\n\n        this.pointOnShape = pointOnShape;\n        this.circle = circle;\n        this.order = order;\n        this.order2 = order2;\n    }\n\n    _createClass(ContactPoint, null, [{\n        key: \"compare\",\n        value: function compare(a, b) {\n            var res = point_on_shape_1.PointOnShape.compare(a.pointOnShape, b.pointOnShape);\n            if (res === undefined) {\n                return undefined;\n            }\n            if (res !== 0) {\n                return res;\n            }\n            res = a.order - b.order;\n            if (res !== 0) {\n                return res;\n            }\n            return a.order2 - b.order2;\n        }\n    }]);\n\n    return ContactPoint;\n}();\n\nexports.ContactPoint = ContactPoint;\n\n},{\"./point-on-shape\":133}],55:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contact_point_1 = _dereq_(\"./contact-point\");\nvar cp_node_for_debugging_1 = _dereq_(\"./debug/cp-node-for-debugging\");\nvar EDGES = ['prev', 'next', 'prevOnCircle', 'nextOnCircle'];\n/**\r\n * Representation of a ContactPoint node having various edges, two of which\r\n * ('prev' and 'next') enforce a cyclic ordering on the CpNodes.\r\n */\n\nvar CpNode = function () {\n    /**\r\n     * @param cp The actual item stored at a node\r\n     * @param prev The previous contact point on the boundary\r\n     * @param next The next contact point on the boundary\r\n     * @param prevOnCircle The previous contact point on the inscribed circle\r\n     * @param prev The next contact point on the inscribed circle\r\n     * @param matCurve The actual medial axis curve from this ContactPoint's\r\n     * circle to the next ContactPoint's circle. It is a bezier curve of order\r\n     * 1 to 3.\r\n     * @param isHoleClosing\r\n     */\n    function CpNode(cp, isHoleClosing, isIntersection) {\n        var prev = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n        var next = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : undefined;\n        var prevOnCircle = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : undefined;\n        var nextOnCircle = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : undefined;\n        var matCurve = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : undefined;\n\n        _classCallCheck(this, CpNode);\n\n        this.cp = cp;\n        this.isHoleClosing = isHoleClosing;\n        this.isIntersection = isIntersection;\n        this.prev = prev;\n        this.next = next;\n        this.prevOnCircle = prevOnCircle;\n        this.nextOnCircle = nextOnCircle;\n        this.matCurve = matCurve;\n    }\n\n    _createClass(CpNode, [{\n        key: \"clone\",\n        value: function clone() {\n            // Don't change this function to be recursive, the call stack may \n            // overflow if there are too many CpNodes.\n            var nodeMap = new Map();\n            var cpNode = this;\n            var newCpNode = new CpNode(cpNode.cp, cpNode.isHoleClosing, cpNode.isIntersection);\n            newCpNode.matCurve = cpNode.matCurve;\n            nodeMap.set(cpNode, newCpNode);\n            var cpStack = [{ cpNode: cpNode, newCpNode: newCpNode }];\n            while (cpStack.length) {\n                var _cpStack$pop = cpStack.pop(),\n                    _cpNode = _cpStack$pop.cpNode,\n                    _newCpNode = _cpStack$pop.newCpNode;\n\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = EDGES[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var edge = _step.value;\n\n                        var node = _cpNode[edge];\n                        var newNode = nodeMap.get(node);\n                        if (!newNode) {\n                            newNode = new CpNode(node.cp, node.isHoleClosing, node.isIntersection);\n                            newNode.matCurve = node.matCurve;\n                            nodeMap.set(node, newNode);\n                            cpStack.push({ cpNode: node, newCpNode: newNode });\n                        }\n                        _newCpNode[edge] = newNode;\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            }\n            return newCpNode;\n        }\n        /**\r\n         * Insert an item into the linked loop after the specified point and returns\r\n         * the freshly inserted item.\r\n         * @param cp - Item to insert\r\n         * @param prev_ - Inserts the new item right after this item if the loop is\r\n         * not empty, else insert the new item as the only item in the loop.\r\n         */\n\n    }, {\n        key: \"remove\",\n        value: function remove(cpTree, cpNode) {\n            var prev = cpNode.prev;\n            var next = cpNode.next;\n            prev.next = next;\n            next.prev = prev;\n            cpTree.remove(cpNode, false);\n        }\n        /**\r\n         * Return this and the the other CpNodes around the vertex circle in order.\r\n         */\n\n    }, {\n        key: \"getNodes\",\n        value: function getNodes() {\n            var startCp = this;\n            var cp = startCp;\n            var cps = [];\n            do {\n                cps.push(cp);\n                cp = cp.nextOnCircle;\n            } while (cp !== startCp);\n            return cps;\n        }\n    }, {\n        key: \"isTerminating\",\n        value: function isTerminating() {\n            var cp = this;\n            return cp === cp.next.prevOnCircle;\n        }\n    }, {\n        key: \"isSharp\",\n        value: function isSharp() {\n            var cpNode = this;\n            return cpNode.cp.circle.radius === 0;\n        }\n        /**\r\n         * Returns true if this ListNode is a one-prong (including\r\n         * sharp corners).\r\n         */\n\n    }, {\n        key: \"isOneProng\",\n        value: function isOneProng() {\n            var cp = this;\n            if (cp.isSharp()) {\n                return true;\n            }\n            if (cp.isThreeProng()) {\n                return false;\n            }\n            var cp2 = cp.nextOnCircle;\n            var p1 = cp.cp.pointOnShape.p;\n            var p2 = cp2.cp.pointOnShape.p;\n            return p1[0] === p2[0] && p1[1] === p2[1];\n        }\n    }, {\n        key: \"isThreeProng\",\n        value: function isThreeProng() {\n            var cp = this;\n            return cp.getNodes().length === 3;\n        }\n        /**\r\n         * Advances the node by the given number of steps. This is slow ( O(n) );\r\n         * use mostly for debugging.\r\n         * @param node - Node to start counting from\r\n         * @param n - Number of steps to advance\r\n         */\n\n    }], [{\n        key: \"insert\",\n        value: function insert(isHoleClosing, isIntersection, cpTree, cp, prev_) {\n            var cpNode = new CpNode(cp, isHoleClosing, isIntersection);\n            if (typeof _debug_ !== 'undefined') {\n                _debug_.generated.elems.cpNode.push(new cp_node_for_debugging_1.CpNodeForDebugging(_debug_.generated, cpNode));\n            }\n            var prev = void 0;\n            var next = void 0;\n            if (!prev_) {\n                prev = cpNode;\n                next = cpNode;\n            } else {\n                prev = prev_;\n                next = prev.next;\n            }\n            next.prev = cpNode;\n            prev.next = cpNode;\n            cpNode.prev = prev;\n            cpNode.next = next;\n            cpTree.insert(cpNode);\n            return cpNode;\n        }\n    }, {\n        key: \"advanceNSteps\",\n        value: function advanceNSteps(node, n) {\n            for (var i = 0; i < n; i++) {\n                node = node.next;\n            }\n            return node;\n        }\n    }]);\n\n    return CpNode;\n}();\n\nCpNode.comparator = function (a, b) {\n    return contact_point_1.ContactPoint.compare(a.cp, b.cp);\n};\nexports.CpNode = CpNode;\n\n},{\"./contact-point\":54,\"./debug/cp-node-for-debugging\":57}],56:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_memoize_1 = _dereq_(\"flo-memoize\");\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar memoize = flo_memoize_1.default.m1;\n\nvar Curve = function () {\n    /**\r\n     * Representation of a curve in a linked loop (of bezier curves).\r\n     * @param loop The linked loop this node belongs to.\r\n     * @param ps The bezier points.\r\n     * @param prev The previous curve.\r\n     * @param next The next curve.\r\n     * @param idx The curve's ordered index in the loop.\r\n     */\n    function Curve(loop, ps, prev, next, idx) {\n        _classCallCheck(this, Curve);\n\n        this.loop = loop;\n        this.ps = ps;\n        this.prev = prev;\n        this.next = next;\n        this.idx = idx;\n    }\n\n    _createClass(Curve, null, [{\n        key: \"getCornerAtEnd\",\n        value: function getCornerAtEnd(curve) {\n            return _getCornerAtEnd(curve);\n        }\n    }]);\n\n    return Curve;\n}();\n\nexports.Curve = Curve;\n// Angle in degrees\nvar DEGREES = {\n    //'0'    : 0.0000,\n    0.25: 0.0050,\n    1: 0.0167,\n    4: 0.0698,\n    16: 0.2756\n};\nvar DEGREE_LIMIT = DEGREES[1];\n/**\r\n * Gets the cross of the unit tangents of the vector at the end of this\r\n * curve and the start of the next curve.\r\n */\nvar _getCornerAtEnd = memoize(function (curve) {\n    var tans = [flo_bezier3_1.tangent(curve.ps, 1), flo_bezier3_1.tangent(curve.next.ps, 0)];\n    var crossTangents = flo_vector2d_1.cross(tans[0], tans[1]);\n    return {\n        tans: tans,\n        crossTangents: crossTangents,\n        isSharp: crossTangents < 0,\n        isDull: crossTangents > 0,\n        isQuiteSharp: crossTangents < -DEGREE_LIMIT,\n        isQuiteDull: crossTangents > +DEGREE_LIMIT\n    };\n});\n\n},{\"flo-bezier3\":3,\"flo-memoize\":41,\"flo-vector2d\":50}],57:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * Class used for debugging only.\r\n */\n\nvar CpNodeForDebugging = function CpNodeForDebugging(generated, cpNode) {\n    _classCallCheck(this, CpNodeForDebugging);\n\n    this.generated = generated;\n    this.cpNode = cpNode;\n};\n\nexports.CpNodeForDebugging = CpNodeForDebugging;\n\n},{}],58:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Vector = _dereq_(\"flo-vector2d\");\nvar Bezier3 = _dereq_(\"flo-bezier3\");\nvar Svg = _dereq_(\"../svg/svg\");\nvar general_1 = _dereq_(\"./functions/general\");\nvar two_prong_1 = _dereq_(\"./functions/two-prong\");\nvar three_prong_1 = _dereq_(\"./functions/three-prong\");\nvar draw_elem_1 = _dereq_(\"./functions/draw-elem/draw-elem\");\n\nvar Generated = function Generated(path, g) {\n    _classCallCheck(this, Generated);\n\n    this.path = path;\n    this.g = g;\n    this.elems = {\n        twoProng_regular: [],\n        twoProng_failed: [],\n        twoProng_notAdded: [],\n        twoProng_deleted: [],\n        twoProng_holeClosing: [],\n        looseBoundingBox: [],\n        tightBoundingBox: [],\n        oneProng: [],\n        oneProngAtDullCorner: [],\n        sharpCorner: [],\n        dullCorner: [],\n        minY: [],\n        threeProng: [],\n        boundingHull: [],\n        mat: [],\n        sat: [],\n        cpNode: [],\n        loop: [],\n        loops: [],\n        maxVertex: [],\n        leaves: [],\n        culls: [],\n        intersection: []\n    };\n    this.timing = {\n        simplify: [0, 0],\n        holeClosers: [0, 0],\n        oneAnd2Prongs: [0, 0],\n        threeProngs: [0, 0],\n        mats: [0, 0],\n        sats: [0, 0]\n    };\n};\n\nexports.Generated = Generated;\n\nvar MatDebug = function () {\n    /**\r\n     * @param fs - some useful functions.\r\n     */\n    function MatDebug(draw) {\n        _classCallCheck(this, MatDebug);\n\n        /* The current path for which MATs are being found */\n        this.generated = undefined;\n        /* Generated by debug object for later inspection */\n        this.generatedAll = new Map();\n        // These are included only for quick debugging from console\n        this.Bezier3 = Bezier3;\n        this.Vector2d = Vector;\n        this.Svg = Svg;\n        this.directives = {\n            stopAfterHoleClosers: false,\n            stopAfterHoleClosersNum: undefined,\n            stopAfterTwoProngs: false,\n            stopAfterTwoProngsNum: undefined,\n            stopAfterThreeProngs: false\n        };\n        /**\r\n         * These functions are meant to be used in the console, e.g. in the\r\n         * console try typing d.fs.twoProng.traceConvergence(0);\r\n         */\n        this.fs = Object.assign({ draw: draw }, general_1.generalDebugFunctions, { twoProng: two_prong_1.twoProngDebugFunctions, threeProng: three_prong_1.threeProngDebugFunctions, drawElem: draw_elem_1.drawElemFunctions });\n    }\n\n    _createClass(MatDebug, [{\n        key: \"createNewGenerated\",\n        value: function createNewGenerated(loops, path, g) {\n            this.generated = new Generated(path, g);\n            this.generatedAll.set(loops, this.generated);\n        }\n    }]);\n\n    return MatDebug;\n}();\n\nexports.MatDebug = MatDebug;\n\n},{\"../svg/svg\":171,\"./functions/draw-elem/draw-elem\":62,\"./functions/general\":79,\"./functions/three-prong\":80,\"./functions/two-prong\":81,\"flo-bezier3\":3,\"flo-vector2d\":50}],59:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction boundingHull(g, hull) {\n    var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'thin5 black nofill';\n\n    var $polygon = _debug_.fs.draw.polygon(g, hull, style);\n    return $polygon;\n}\nexports.boundingHull = boundingHull;\n\n},{}],60:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction culls(g, culls) {\n    var $elems = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = culls[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var circle = _step.value;\n\n            var p = circle.center;\n            $elems.push(drawCircle(g, p, 0.4, 'cyan thin5 nofill'));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return $elems;\n}\nexports.culls = culls;\nfunction drawCircle(g, center, radiusPercent, classes) {\n    var XMLNS = 'http://www.w3.org/2000/svg';\n    var $circle = document.createElementNS(XMLNS, 'circle');\n    $circle.setAttributeNS(null, \"cx\", center[0].toString());\n    $circle.setAttributeNS(null, \"cy\", center[1].toString());\n    $circle.setAttributeNS(null, \"r\", radiusPercent.toString() + '%');\n    $circle.setAttributeNS(null, \"class\", classes);\n    g.appendChild($circle);\n    return $circle;\n}\n\n},{}],61:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawCirclePercent(g, center, radiusPercent, classes) {\n    var XMLNS = 'http://www.w3.org/2000/svg';\n    var $circle = document.createElementNS(XMLNS, 'circle');\n    $circle.setAttributeNS(null, \"cx\", center[0].toString());\n    $circle.setAttributeNS(null, \"cy\", center[1].toString());\n    $circle.setAttributeNS(null, \"r\", radiusPercent.toString() + '%');\n    $circle.setAttributeNS(null, \"class\", classes);\n    g.appendChild($circle);\n    return $circle;\n}\nexports.drawCirclePercent = drawCirclePercent;\n\n},{}],62:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar one_prong_1 = _dereq_(\"./one-prong\");\nvar two_prong_1 = _dereq_(\"./two-prong\");\nvar three_prong_1 = _dereq_(\"./three-prong\");\nvar vertex_1 = _dereq_(\"./vertex\");\nvar min_y_1 = _dereq_(\"./min-y\");\nvar bounding_hull_1 = _dereq_(\"./bounding-hull\");\nvar loose_bounding_box_1 = _dereq_(\"./loose-bounding-box\");\nvar tight_bounding_box_1 = _dereq_(\"./tight-bounding-box\");\nvar sharp_corner_1 = _dereq_(\"./sharp-corner\");\nvar dull_corner_1 = _dereq_(\"./dull-corner\");\nvar mat_1 = _dereq_(\"./mat\");\nvar loop_1 = _dereq_(\"./loop\");\nvar loops_1 = _dereq_(\"./loops\");\nvar max_vertex_1 = _dereq_(\"./max-vertex\");\nvar leaves_1 = _dereq_(\"./leaves\");\nvar culls_1 = _dereq_(\"./culls\");\nvar intersection_1 = _dereq_(\"./intersection\");\nvar one_prong_at_dull_corner_1 = _dereq_(\"./one-prong-at-dull-corner\");\nvar drawElemFunctions = {\n    oneProng: one_prong_1.oneProng,\n    oneProngAtDullCorner: one_prong_at_dull_corner_1.oneProngAtDullCorner,\n    twoProng_regular: two_prong_1.twoProng,\n    twoProng_failed: two_prong_1.twoProng,\n    twoProng_notAdded: two_prong_1.twoProng,\n    twoProng_deleted: two_prong_1.twoProng,\n    twoProng_holeClosing: two_prong_1.twoProng,\n    threeProng: three_prong_1.threeProng,\n    minY: min_y_1.minY,\n    boundingHull: bounding_hull_1.boundingHull,\n    looseBoundingBox: loose_bounding_box_1.looseBoundingBox,\n    tightBoundingBox: tight_bounding_box_1.tightBoundingBox,\n    sharpCorner: sharp_corner_1.sharpCorner,\n    dullCorner: dull_corner_1.dullCorner,\n    vertex: vertex_1.vertex,\n    mat: mat_1.mat('mat', true),\n    sat: mat_1.mat('sat', true),\n    loop: loop_1.loop,\n    loops: loops_1.loops,\n    maxVertex: max_vertex_1.maxVertex,\n    leaves: leaves_1.leaves,\n    culls: culls_1.culls,\n    intersection: intersection_1.intersection\n};\nexports.drawElemFunctions = drawElemFunctions;\n\n},{\"./bounding-hull\":59,\"./culls\":60,\"./dull-corner\":63,\"./intersection\":64,\"./leaves\":65,\"./loop\":66,\"./loops\":67,\"./loose-bounding-box\":68,\"./mat\":69,\"./max-vertex\":70,\"./min-y\":71,\"./one-prong\":73,\"./one-prong-at-dull-corner\":72,\"./sharp-corner\":74,\"./three-prong\":75,\"./tight-bounding-box\":76,\"./two-prong\":77,\"./vertex\":78}],63:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction dullCorner(g, pos) {\n    var scaleFactor = 0.1;\n    var $pos = _debug_.fs.draw.dot(g, pos.p, 0.5 * scaleFactor, 'orange');\n    return $pos;\n}\nexports.dullCorner = dullCorner;\n\n},{}],64:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar draw_circle_percent_1 = _dereq_(\"./draw-circle-percent\");\nfunction intersection(g, x) {\n    return [draw_circle_percent_1.drawCirclePercent(g, x.pos.p, 0.7, 'purple thin2 nofill')];\n}\nexports.intersection = intersection;\n\n},{\"./draw-circle-percent\":61}],65:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar draw_circle_percent_1 = _dereq_(\"./draw-circle-percent\");\nfunction leaves(g, leaves) {\n    var $elems = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = leaves[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var cpNode = _step.value;\n\n            var cp = cpNode.cp;\n            var p = cp.circle.center;\n            $elems.push(draw_circle_percent_1.drawCirclePercent(g, p, 0.5, 'pinker thin5 nofill'));\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return $elems;\n}\nexports.leaves = leaves;\n\n},{\"./draw-circle-percent\":61}],66:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO - finish\nfunction loop(g, loop) {\n    /*\r\n    for (let curve of loop.curves) {\r\n        _debug_.fs.draw.bezier(g, curve.ps, undefined, 1000);\r\n    }\r\n    */\n    return [];\n}\nexports.loop = loop;\n\n},{}],67:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// TODO - finish\nfunction loops(g, loops) {\n    return [];\n}\nexports.loops = loops;\n\n},{}],68:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction looseBoundingBox(g, box) {\n    var $box = _debug_.fs.draw.rect(g, box, 'thin5 brown nofill');\n    return $box;\n}\nexports.looseBoundingBox = looseBoundingBox;\n\n},{}],69:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar traverse_edges_1 = _dereq_(\"../../../mat/traverse-edges\");\nfunction mat(type, smooth) {\n    var classes = type === 'mat' ? 'thin5 purple nofill' : 'thin10 red nofill';\n    return f;\n    function f(g, mat) {\n        var cpNode = mat.cpNode;\n        if (!cpNode) {\n            return undefined;\n        }\n        var draw = _debug_.fs.draw;\n        var $svgs = [];\n        //const DRAW_CLASS_LINE = 'thin20 blue1 nofill';\n        //const DRAW_CLASS_QUAD = 'thin20 blue2 nofill';\n        //const DRAW_CLASS_CUBE = 'thin20 blue3 nofill';\n        traverse_edges_1.traverseEdges(cpNode, function (cpNode) {\n            if (cpNode.isTerminating()) {\n                return;\n            }\n            if (!smooth) {\n                var p1 = cpNode.cp.circle.center;\n                var p2 = cpNode.next.cp.circle.center;\n                $svgs.push.apply($svgs, _toConsumableArray(draw.line(g, [p1, p2], classes)));\n                return;\n            }\n            var bezier = cpNode.matCurve;\n            if (!bezier) {\n                return;\n            }\n            var fs = [,, draw.line, draw.quadBezier, draw.bezier];\n            $svgs.push.apply($svgs, _toConsumableArray(fs[bezier.length](g, bezier, classes)));\n        });\n        return $svgs;\n    }\n}\nexports.mat = mat;\n\n},{\"../../../mat/traverse-edges\":130}],70:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction maxVertex(g, cpNode) {\n    var draw = _debug_.fs.draw;\n    var circle = cpNode.cp.circle;\n    var $elems = draw.circle(g, circle, 'brown thin10 nofill');\n    return $elems;\n}\nexports.maxVertex = maxVertex;\n\n},{}],71:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nfunction minY(g, pos) {\n    var p = flo_bezier3_1.evaluate(pos.curve.ps, pos.t);\n    var $elems = _debug_.fs.draw.crossHair(g, p, 'red thin10 nofill');\n    return $elems;\n}\nexports.minY = minY;\n\n},{\"flo-bezier3\":3}],72:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar point_on_shape_1 = _dereq_(\"../../../point-on-shape\");\nfunction oneProngAtDullCorner(g, pos) {\n    var oCircle = point_on_shape_1.PointOnShape.getOsculatingCircle(Number.POSITIVE_INFINITY, pos);\n    var $center = _debug_.fs.draw.dot(g, pos.p, 0.1, 'orange');\n    var $circle = _debug_.fs.draw.dot(g, oCircle.center, 0.25, 'orange');\n    var $pos = _debug_.fs.draw.circle(g, oCircle, 'orange thin10 nofill');\n    return [].concat(_toConsumableArray($center), _toConsumableArray($circle), _toConsumableArray($pos));\n}\nexports.oneProngAtDullCorner = oneProngAtDullCorner;\n\n},{\"../../../point-on-shape\":133}],73:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar point_on_shape_1 = _dereq_(\"../../../point-on-shape\");\nvar circle_1 = _dereq_(\"../../../circle\");\nvar scaleFactor = 0.5;\nfunction oneProng(g, pos) {\n    var draw = _debug_.fs.draw;\n    var circle = circle_1.Circle.scale(point_on_shape_1.PointOnShape.getOsculatingCircle(Number.POSITIVE_INFINITY, pos), 1);\n    var $center = draw.dot(g, pos.p, 0.1 * scaleFactor, 'gray');\n    var $circle = draw.dot(g, circle.center, 0.25 * scaleFactor, 'gray');\n    var $pos = draw.circle(g, circle, 'gray thin10 nofill');\n    return [].concat(_toConsumableArray($center), _toConsumableArray($circle), _toConsumableArray($pos));\n}\nexports.oneProng = oneProng;\n\n},{\"../../../circle\":53,\"../../../point-on-shape\":133}],74:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction sharpCorner(g, pos) {\n    var scaleFactor = 0.1;\n    var $pos = _debug_.fs.draw.dot(g, pos.p, 0.6 * scaleFactor, 'green');\n    return $pos;\n}\nexports.sharpCorner = sharpCorner;\n\n},{}],75:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar circle_1 = _dereq_(\"../../../circle\");\nvar scaleFactor = 0.3;\nfunction threeProng(g, threeProng) {\n    var draw = _debug_.fs.draw;\n    var circle = circle_1.Circle.scale(threeProng.circle, 1);\n    var poss = threeProng.poss;\n    var $cp1 = draw.dot(g, poss[0].p, 0.1 * 1 * scaleFactor, 'blue');\n    var $cp2 = draw.dot(g, poss[1].p, 0.1 * 2 * scaleFactor, 'blue');\n    var $cp3 = draw.dot(g, poss[2].p, 0.1 * 3 * scaleFactor, 'blue');\n    var $center = draw.dot(g, circle.center, 0.3 * scaleFactor, 'blue');\n    var $circle = draw.circle(g, circle, 'blue thin2 nofill');\n    return [].concat(_toConsumableArray($center), _toConsumableArray($cp1), _toConsumableArray($cp2), _toConsumableArray($cp3), _toConsumableArray($circle));\n}\nexports.threeProng = threeProng;\n\n},{\"../../../circle\":53}],76:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction tightBoundingBox(g, box) {\n    var $box = _debug_.fs.draw.polygon(g, box, 'thin5 black nofill');\n    return $box;\n}\nexports.tightBoundingBox = tightBoundingBox;\n\n},{}],77:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_two_prong_type_1 = _dereq_(\"../../../mat/get-two-prong-type\");\nfunction twoProng(g, twoProng) {\n    //let scaleFactor = width/200;\t\t\n    var scaleFactor = 0.3;\n    var $failedDot = [];\n    var $center = [];\n    var $circle = [];\n    var $cp1 = [];\n    var $cp2 = [];\n    var color = void 0;\n    var thin = void 0;\n    var draw = _debug_.fs.draw;\n    switch (get_two_prong_type_1.getTwoProngType(twoProng)) {\n        case 'twoProng_regular':\n            {\n                color = 'red ';\n                thin = '2';\n                break;\n            }\n        case 'twoProng_failed':\n            {\n                $failedDot = draw.dot(g, twoProng.pos.p, 1 * scaleFactor, 'black');\n                return;\n            }\n        case 'twoProng_notAdded':\n            {\n                color = 'brown ';\n                thin = '10';\n                break;\n            }\n        case 'twoProng_deleted':\n            {\n                color = 'gray ';\n                thin = '2';\n                break;\n            }\n        case 'twoProng_holeClosing':\n            {\n                color = 'cyan ';\n                thin = '10';\n                break;\n            }\n    }\n    if (twoProng.failed) {\n        $failedDot = draw.dot(g, twoProng.pos.p, 1 * scaleFactor, 'black');\n    } else if (!twoProng.failed) {\n        $center = draw.dot(g, twoProng.circle.center, 0.05 * scaleFactor, 'yellow');\n        $circle = draw.circle(g, twoProng.circle, color + 'thin' + thin + ' nofill');\n        $cp1 = draw.dot(g, twoProng.pos.p, 0.035 * scaleFactor, color);\n        $cp2 = draw.dot(g, twoProng.z, 0.07 * scaleFactor, color);\n    }\n    return [].concat(_toConsumableArray($failedDot), _toConsumableArray($center), _toConsumableArray($circle), _toConsumableArray($cp1), _toConsumableArray($cp2));\n}\nexports.twoProng = twoProng;\n\n},{\"../../../mat/get-two-prong-type\":122}],78:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction vertex(g, cpNode) {\n    var visible = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var displayDelay = arguments[3];\n\n    var visibleClass = visible ? '' : ' invisible';\n    var circle = cpNode.cp.circle;\n    var draw = _debug_.fs.draw;\n    var THIN = 'thin20';\n    var cps = cpNode.getNodes();\n    console.log(cps);\n    var $svgs = [];\n    var $circle = draw.circle(g, circle, 'red ' + THIN + ' nofill ' + visibleClass, displayDelay);\n    var $crossHair = draw.crossHair(g, circle.center, 'red ' + THIN + ' nofill ' + visibleClass, 3, displayDelay);\n    $svgs = [].concat(_toConsumableArray($circle), _toConsumableArray($crossHair));\n    for (var i = 0; i < cps.length; i++) {\n        var _$svgs, _$svgs2;\n\n        var cp = cps[i];\n        var edgeCircle = cp.next.cp.circle;\n        var _$circle = draw.circle(g, edgeCircle, 'pink ' + THIN + ' nofill ' + visibleClass, displayDelay);\n        var _$crossHair = draw.crossHair(g, edgeCircle.center, 'pink ' + THIN + ' nofill ' + visibleClass, 3, displayDelay);\n        (_$svgs = $svgs).push.apply(_$svgs, _toConsumableArray(_$circle).concat(_toConsumableArray(_$crossHair)));\n        var p1 = circle.center;\n        var p2 = edgeCircle.center;\n        var thin = i === 0 ? 'thin10' : i === 1 ? 'thin20' : 'thin35';\n        var $line = draw.line(g, [p1, p2], 'yellow ' + thin + ' nofill ' + visibleClass, displayDelay);\n        (_$svgs2 = $svgs).push.apply(_$svgs2, _toConsumableArray($line));\n    }\n    return $svgs;\n}\nexports.vertex = vertex;\n\n},{}],79:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar point_on_shape_1 = _dereq_(\"../../point-on-shape\");\nvar i = 0;\n/** Name the given object - for debugging purposes only */\nfunction nameObj(o) {\n    var pre = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    o.name = '' + pre + i++;\n}\n/**\r\n * Transforms a boundary piece (δ) into a human readable string.\r\n * @param cpNodes A boundary piece given by two CpNodes.\r\n */\nfunction δToString(cpNodes) {\n    return cpNodes.map(function (cpNode) {\n        return point_on_shape_1.PointOnShape.toHumanString(cpNode.cp.pointOnShape);\n    });\n}\n/**\r\n * Transforms an array of boundary pieces (δs) into a human readable string.\r\n * @param cpNodes An array of boundary pieces.\r\n */\nfunction δsToString(cpNodes) {\n    return cpNodes.map(δToString);\n}\n/**\r\n * Convert the given points into a human readable string.\r\n * @param ps\r\n */\nfunction pointsToStr(ps) {\n    var decimalPlaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n\n    return ps.map(function (p) {\n        return pointToStr(p, decimalPlaces);\n    });\n}\n/**\r\n * Converts the given point into a human readable string.\r\n * @param p - The point\r\n * @param decimalPlaces - number of decimal places\r\n */\nfunction pointToStr(p) {\n    var decimalPlaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n\n    return p[0].toFixed(decimalPlaces) + ', ' + p[1].toFixed(decimalPlaces);\n}\nvar generalDebugFunctions = {\n    δToString: δToString,\n    δsToString: δsToString,\n    pointToStr: pointToStr,\n    pointsToStr: pointsToStr,\n    nameObj: nameObj\n};\nexports.generalDebugFunctions = generalDebugFunctions;\n\n},{\"../../point-on-shape\":133}],80:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar circle_1 = _dereq_(\"../../circle\");\n/**\r\n * Draws 3 lines from the given 3-prong center to its 3 contact points.\r\n * @param n - The 3-prong's zero-based index.\r\n */\nfunction drawSpokes(n) {\n    var threeProng = _debug_.generated.elems.threeProng[n];\n    var g = threeProng.generated.g;\n    var cc = threeProng.circle.center;\n    var poss = threeProng.poss;\n    _debug_.fs.draw.line(g, [poss[0].p, cc], 'thin5 red');\n    _debug_.fs.draw.line(g, [poss[1].p, cc], 'thin5 red');\n    _debug_.fs.draw.line(g, [poss[2].p, cc], 'thin5 red');\n}\n/**\r\n * Shows the circle for each boundary iteration.\r\n * @param n_ - The 3-prong's zero-based index. If ommitted, all will be shown.\r\n * @param idx - The specific boundary iteration index to view. If ommitted, all\r\n * will be shown.\r\n */\nfunction traceConvergence(n_, idx) {\n    var sIndx = void 0;\n    var eIndx = void 0;\n    if (n_ === undefined) {\n        sIndx = 0;\n        eIndx = _debug_.generated.elems.threeProng.length;\n    } else {\n        sIndx = n_;\n        eIndx = n_ + 1;\n    }\n    for (var n = sIndx; n < eIndx; n++) {\n        var forDebugging = _debug_.generated.elems.threeProng[n];\n        var g = forDebugging.generated.g;\n        console.log(forDebugging);\n        var candidateThreeProngs = forDebugging.candidateThreeProngs;\n        //-----------------------------\n        //---- Get start and end index\n        //-----------------------------\n        var startIndx = void 0;\n        var endIndx = void 0;\n        if (n_ === undefined || idx === -1) {\n            startIndx = forDebugging.bestIndx;\n            endIndx = forDebugging.bestIndx + 1;\n        } else {\n            if (idx === undefined) {\n                startIndx = 0;\n                endIndx = candidateThreeProngs.length;\n            } else {\n                startIndx = idx;\n                endIndx = idx + 1;\n            }\n        }\n        //---------------------------------\n        //---- Draw candidate three-prongs\n        //---------------------------------\n        for (var i = startIndx; i < endIndx; i++) {\n            var circle = candidateThreeProngs[i].circle;\n            if (forDebugging.bestIndx === i) {\n                _debug_.fs.draw.dot(g, circle.center, 0.2, 'green');\n                _debug_.fs.draw.circle(g, circle, 'black thin10 nofill');\n            } else {\n                _debug_.fs.draw.dot(g, circle.center, 0.2, 'cyan');\n                _debug_.fs.draw.circle(g, circle, 'cyan thin5 nofill');\n            }\n        }\n    }\n}\n/**\r\n * Shows the actual boundary for each iteration.\r\n * @param n The 3-prong's zero-based index.\r\n * @param idx The specific boundary iteration index to view. If ommitted will\r\n * show all.\r\n */\nfunction showBoundary(n, idx) {\n    var debugInfo = _debug_.generated.elems.threeProng[n];\n    var g = debugInfo.generated.g;\n    var candidateThreeProngs = debugInfo.candidateThreeProngs;\n    var startIndx = idx === undefined ? 0 : idx;\n    var endIndx = idx === undefined ? candidateThreeProngs.length : idx;\n    // Draw relevant δs\n    var cpss = debugInfo.cpss;\n    var j = 0;\n    // For each iteration of δ3s (indexed by j)\n    for (var _idx = 1; _idx < cpss.length - 1; _idx++) {\n        if (!(j >= startIndx && j <= endIndx)) {\n            j++;\n            continue;\n        }\n        var δ3s = [cpss[0], cpss[_idx], cpss[cpss.length - 1]];\n        // For each of the 3 δs\n        for (var i = 0; i < 3; i++) {\n            var δ = δ3s[i];\n            var δS = δ[0]; // Delta Start\n            var δE = δ[1]; // Delta End\n            var posS = δS.cp.pointOnShape;\n            var posE = δE.cp.pointOnShape;\n            var pS = posS.p;\n            var pE = posE.p;\n            var r = 1 + i * 0.5;\n            if (flo_vector2d_1.equal(pS, pE)) {\n                _debug_.fs.draw.crossHair(g, pS, 'red thin10 nofill', r);\n            } else {\n                _debug_.fs.draw.crossHair(g, pS, 'green thin10 nofill', r);\n                _debug_.fs.draw.crossHair(g, pE, 'blue thin10 nofill', r);\n            }\n        }\n        j++;\n    }\n}\n/**\r\n * @param n The 3-prong's zero-based index.\r\n */\nfunction logδs(n) {\n    var threeProng = _debug_.generated.elems.threeProng[n];\n    console.log(threeProng.cpss);\n}\n/**\r\n *\r\n * @param p\r\n */\nfunction logNearest(p) {\n    var inclSpokes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var inclTrace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var inclBoundaries = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n    var closestPerLoops = [];\n    _debug_.generatedAll.forEach(function (generated) {\n        var threeProng = flo_vector2d_1.getObjClosestTo(p, generated.elems.threeProng, function (threeProng) {\n            return threeProng.circle.center;\n        });\n        closestPerLoops.push(threeProng);\n    });\n    var threeProng = flo_vector2d_1.getObjClosestTo(p, closestPerLoops, function (threeProng) {\n        return threeProng.circle.center;\n    });\n    var circle = threeProng.circle;\n    var g = threeProng.generated.g;\n    console.log(threeProng);\n    var circle2 = new circle_1.Circle(circle.center, circle.radius || 1);\n    var draw = _debug_.fs.draw;\n    draw.circle(g, circle2, 'green thin10 nofill', 1000);\n    // Boundaries\n    var boundaries = threeProng.boundaries;\n    var boundaryS = boundaries[0];\n    var boundaryE = boundaries[boundaries.length - 1];\n    draw.beziers(g, boundaryS, 'red thin5 nofill');\n    for (var i = 1; i < boundaries.length - 1; i++) {\n        var boundary = boundaries[i];\n        draw.beziers(g, boundary, 'green thin5 nofill');\n    }\n    draw.beziers(g, boundaryE, 'blue thin5 nofill');\n    // Trace\n    var traces = threeProng.traces;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = traces[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var trace = _step.value;\n\n            draw.polyline(g, trace, 'red thin5 nofill');\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nvar threeProngDebugFunctions = {\n    drawSpokes: drawSpokes,\n    traceConvergence: traceConvergence,\n    showBoundary: showBoundary,\n    logδs: logδs,\n    logNearest: logNearest\n};\nexports.threeProngDebugFunctions = threeProngDebugFunctions;\n\n},{\"../../circle\":53,\"flo-vector2d\":50}],81:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar circle_1 = _dereq_(\"../../circle\");\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\n/**\r\n *\r\n */\nfunction logδ(n) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'twoProng_regular';\n\n    var δ = _debug_.generated.elems[type][n].δ;\n    console.log(δ);\n}\n/**\r\n *\r\n */\nfunction log(n) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'twoProng_regular';\n\n    var twoProng = _debug_.generated.elems[type][n];\n    console.log(twoProng);\n}\n/**\r\n *\r\n */\nfunction drawNormal(n) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'twoProng_regular';\n\n    var twoProngs = _debug_.generated.elems[type];\n    // If not specified which, draw all\n    if (n === undefined) {\n        for (var i = 0; i < twoProngs.length; i++) {\n            drawNormal(i);\n        }\n    }\n    var twoProng = twoProngs[n];\n    var g = twoProng.generated.g;\n    if (!twoProng) {\n        return;\n    }\n    _debug_.fs.draw.line(g, [twoProng.pos.p, twoProng.circle.center], 'thin10 blue');\n}\n/**\r\n *\r\n */\nfunction logδBasic(n) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'twoProng_regular';\n\n    var delta = _debug_.generated.elems[type][n].δ;\n    function f(x) {\n        var pos = x.cp.pointOnShape;\n        return {\n            bez: pos.curve.ps,\n            t: pos.t\n        };\n    }\n    console.log(f(delta[0]));\n    console.log(f(delta[1]));\n}\n/**\r\n *\r\n */\nfunction logNearest(p) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'twoProng_regular';\n\n    var closestPerLoops = [];\n    _debug_.generatedAll.forEach(function (generated, loops) {\n        var twoProng = flo_vector2d_1.getObjClosestTo(p, generated.elems[type], function (twoProng) {\n            return twoProng.circle.center;\n        });\n        closestPerLoops.push(twoProng);\n    });\n    var twoProng = flo_vector2d_1.getObjClosestTo(p, closestPerLoops, function (twoProng) {\n        return twoProng.circle.center;\n    });\n    var g = twoProng.generated.g;\n    console.log(twoProng);\n    var circle_ = twoProng.circle;\n    var circle = new circle_1.Circle(circle_.center, circle_.radius || 1);\n    _debug_.fs.draw.circle(g, circle, 'green thin10 nofill', 1000);\n    var n = void 0;\n    for (var i = 0; i < _debug_.generated.elems[type].length; i++) {\n        var twoProng_ = _debug_.generated.elems[type][i];\n        if (twoProng_ === twoProng) {\n            n = i;\n            break;\n        }\n    }\n    if (n !== undefined) {\n        traceConvergence(n, true);\n    }\n}\n/**\r\n *\r\n * @param n - The 2-prong's zero-based index.\r\n * @param range\r\n * cascade of convergence)\r\n */\nfunction traceConvergence(n, finalOnly) {\n    var range = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    var type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'twoProng_regular';\n\n    if (n === undefined) {\n        return;\n    }\n    var twoProngInfo = _debug_.generated.elems[type][n];\n    var xs = twoProngInfo.xs;\n    var g = twoProngInfo.generated.g;\n    console.log(twoProngInfo);\n    console.log(twoProngInfo.xs.map(function (x) {\n        return {\n            x: x.x,\n            y: x.y,\n            z: x.z,\n            d: x.z ? flo_vector2d_1.squaredDistanceBetween(x.y.p, x.z.p) : 0,\n            t: x.t\n        };\n    }));\n    for (var i = 0; i < xs.length; i++) {\n        if (range && (i < range[0] || i >= range[1])) {\n            continue;\n        }\n        if (finalOnly && i !== xs.length - 1) {\n            continue;\n        }\n        var x = twoProngInfo.xs[i];\n        var circle = new circle_1.Circle(x.x, flo_vector2d_1.distanceBetween(x.x, x.y.p));\n        _debug_.fs.draw.crossHair(g, x.x, 'red thin10 nofill');\n        _debug_.fs.draw.circle(g, circle, 'blue thin10 nofill');\n        if (x.z !== undefined) {\n            _debug_.fs.draw.crossHair(g, x.z.p, 'yellow thin10 nofill', 2);\n        }\n    }\n    twoProngDebugFunctions.drawNormal(n);\n}\nvar twoProngDebugFunctions = {\n    logδ: logδ,\n    log: log,\n    drawNormal: drawNormal,\n    logδBasic: logδBasic,\n    traceConvergence: traceConvergence,\n    logNearest: logNearest\n};\nexports.twoProngDebugFunctions = twoProngDebugFunctions;\n\n},{\"../../circle\":53,\"flo-vector2d\":50}],82:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar point_on_shape_1 = _dereq_(\"../point-on-shape\");\n/**\r\n * Class used in debugging. A three-prong is a maximally inscribed circle that\r\n * touches the shape boundary (tangentially) at 3 points.\r\n */\n\nvar ThreeProngForDebugging = function () {\n  /**\r\n   * @param circle The best fit circle found for the 3-prong.\r\n   * @param poss The best fit 3 points found for the 3-prong.\r\n   * @param cp3ss The 3 boundary pieces on which the three prong points were\r\n   * found.\r\n   * @param cpss The boundary pieces that were used to search the three prong\r\n   * on.\r\n   * @param bestIndx\r\n   * @param candidateThreeProngs An array of 3-prongs, each of which may be a\r\n   * best fit 3-prong.\r\n   */\n  function ThreeProngForDebugging() {\n    _classCallCheck(this, ThreeProngForDebugging);\n  }\n\n  _createClass(ThreeProngForDebugging, [{\n    key: \"cpsSimple\",\n    get: function get() {\n      return this.cpss.map(function (δ) {\n        return [point_on_shape_1.PointOnShape.toHumanString(δ[0].cp.pointOnShape), point_on_shape_1.PointOnShape.toHumanString(δ[1].cp.pointOnShape)];\n      });\n    }\n  }]);\n\n  return ThreeProngForDebugging;\n}();\n\nexports.ThreeProngForDebugging = ThreeProngForDebugging;\n\n},{\"../point-on-shape\":133}],83:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar TwoProngForDebugging = function TwoProngForDebugging(generated, bezierPieces, pos, δ, z, circle, xs, failed, holeClosing, notAdded, deleted) {\n    _classCallCheck(this, TwoProngForDebugging);\n\n    this.generated = generated;\n    this.bezierPieces = bezierPieces;\n    this.pos = pos;\n    this.δ = δ;\n    this.z = z;\n    this.circle = circle;\n    this.xs = xs;\n    this.failed = failed;\n    this.holeClosing = holeClosing;\n    this.notAdded = notAdded;\n    this.deleted = deleted;\n};\n\nexports.TwoProngForDebugging = TwoProngForDebugging;\n\n},{}],84:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar curve_1 = _dereq_(\"./curve\");\n/**\r\n * Represents a two-way linked loop of Curves.\r\n */\n\nvar Loop = function () {\n    /**\r\n     * @param items - A pre-ordered array of items to add initially\r\n     */\n    function Loop() {\n        var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        _classCallCheck(this, Loop);\n\n        this.items = items;\n        this.curves = [];\n        var loop = this;\n        if (items.length === 0) {\n            return undefined;\n        }\n        var head = void 0;\n        var prev = null;\n        var node = void 0;\n        for (var i = 0; i < items.length; i++) {\n            node = new curve_1.Curve(loop, items[i], prev, null, i);\n            loop.curves.push(node);\n            if (prev) {\n                prev.next = node;\n            }\n            prev = node;\n            if (i === 0) {\n                head = node;\n            }\n        }\n        // Close loop\n        head.prev = node;\n        node.next = head;\n        this.head = head;\n    }\n\n    _createClass(Loop, [{\n        key: \"toBeziers\",\n        value: function toBeziers() {\n            var beziers = [];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = this.curves[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var curve = _step.value;\n\n                    beziers.push(curve.ps);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            return beziers;\n        }\n    }], [{\n        key: \"perturb\",\n        value: function perturb(loop, x) {\n            if (!x) {\n                return loop;\n            }\n            var seed = 2311; // Just some value\n            var newItems = [];\n            for (var i = 0; i < loop.items.length; i++) {\n                // This gets us a predictable random number between 0 and 1;\n                var rand1 = flo_poly_1.default.random.flatCoefficients(6, -1, 1, seed);\n                var rs = rand1.p;\n                seed = rand1.seed; // Get next seed.\n                var vs = rs.map(function (r) {\n                    return r * x;\n                });\n                console.log(vs);\n                var ps = loop.items[i];\n\n                var _ps = _slicedToArray(ps, 3),\n                    _ps$ = _slicedToArray(_ps[0], 2),\n                    x0 = _ps$[0],\n                    y0 = _ps$[1],\n                    _ps$2 = _slicedToArray(_ps[1], 2),\n                    x1 = _ps$2[0],\n                    y1 = _ps$2[1],\n                    _ps$3 = _slicedToArray(_ps[2], 2),\n                    x2 = _ps$3[0],\n                    y2 = _ps$3[1];\n\n                var newPs = [[x0 + vs[0], y0 + vs[1]], [x1 + vs[2], y1 + vs[3]], [x2 + vs[4], y2 + vs[5]], [0, 0]];\n                if (i !== 0) {\n                    var _prev = newItems[newItems.length - 1];\n                    _prev[3][0] = newPs[0][0];\n                    _prev[3][1] = newPs[0][1];\n                }\n                newItems.push(newPs);\n            }\n            var last = newItems[newItems.length - 1];\n            last[3][0] = newItems[0][0][0];\n            last[3][1] = newItems[0][0][1];\n            return new Loop(newItems);\n        }\n    }]);\n\n    return Loop;\n}();\n\nexports.Loop = Loop;\n\n},{\"./curve\":56,\"flo-poly\":42}],85:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n;\n/**\r\n * Represents a complete Medial Axis Transform (MAT).\r\n */\n\nvar Mat =\n/**\r\n * @param cpNode\r\n * @param cpTrees\r\n */\nfunction Mat(cpNode, cpTrees) {\n  _classCallCheck(this, Mat);\n\n  this.cpNode = cpNode;\n  this.cpTrees = cpTrees;\n};\n\nexports.Mat = Mat;\n\n},{}],86:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar contact_point_1 = _dereq_(\"../contact-point\");\nvar cp_node_1 = _dereq_(\"../cp-node\");\nvar get_neighboring_cps_1 = _dereq_(\"./get-neighboring-cps\");\nfunction addToCpGraph(circle, orders, cpTrees, poss, neighbors) {\n    var newCps = poss.map(function (pos, i) {\n        var cpTree = cpTrees.get(pos.curve.loop);\n        var newCp_ = new contact_point_1.ContactPoint(pos, circle, orders[i], 0);\n        var neighboringCp = neighbors ? neighbors[i] : get_neighboring_cps_1.getNeighbouringPoints(cpTree, pos, orders[i], 0);\n        var newCp = cp_node_1.CpNode.insert(false, false, cpTree, newCp_, neighboringCp[0]);\n        return newCp;\n    });\n    var len = poss.length;\n    for (var i = 0; i < len; i++) {\n        var indxPrev = i === 0 ? len - 1 : i - 1;\n        var indxNext = i === len - 1 ? 0 : i + 1;\n        newCps[i].prevOnCircle = newCps[indxPrev];\n        newCps[i].nextOnCircle = newCps[indxNext];\n    }\n}\nexports.addToCpGraph = addToCpGraph;\n\n},{\"../contact-point\":54,\"../cp-node\":55,\"./get-neighboring-cps\":121}],87:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_ll_rb_tree_1 = _dereq_(\"flo-ll-rb-tree\");\nvar cp_node_1 = _dereq_(\"../cp-node\");\nvar traverse_edges_1 = _dereq_(\"./traverse-edges\");\nfunction createNewCpTree(cpNode) {\n    var newCpTrees = new Map();\n    traverse_edges_1.traverseEdges(cpNode, function (cpNode) {\n        var loop = cpNode.cp.pointOnShape.curve.loop;\n        var cpTree = newCpTrees.get(loop);\n        if (!cpTree) {\n            cpTree = new flo_ll_rb_tree_1.default(cp_node_1.CpNode.comparator, [], true);\n            newCpTrees.set(loop, cpTree);\n        }\n        cpTree.insert(cpNode);\n    });\n    return newCpTrees;\n}\nexports.createNewCpTree = createNewCpTree;\n\n},{\"../cp-node\":55,\"./traverse-edges\":130,\"flo-ll-rb-tree\":37}],88:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar point_on_shape_1 = _dereq_(\"../../point-on-shape\");\nvar add_to_cp_graph_1 = _dereq_(\"../add-to-cp-graph\");\nvar is_another_cp_closeby_1 = _dereq_(\"../is-another-cp-closeby\");\n/**\r\n * Add a 1-prong to the MAT.\r\n * @param cpGraphs\r\n * @param pos\r\n */\nfunction add1Prong(maxOsculatingCircleRadius, cpGraphs, pos) {\n    if (point_on_shape_1.PointOnShape.isDullCorner(pos)) {\n        // This is a 1-prong at a dull corner.\n        // TODO IMPORTANT \n        // Remove this line, uncomment piece below it and implement the \n        // following strategy to find the 3-prongs: if deltas are conjoined due \n        // to dull corner, split the conjoinment by inserting successively \n        // closer (binary division) 2-prongs. If a 2-prong actually fails, \n        // simply remove the 1-prong at the dull corner. In this way **all** \n        // terminal points are found, e.g. zoom in on top left leg of ant.\n        // Afterthought: there is a better way - split points by two prongs.\n        //toRemove.push(posNode); // this!\n        if (typeof _debug_ !== 'undefined') {\n            _debug_.generated.elems.oneProngAtDullCorner.push(pos);\n        }\n        return;\n    }\n    var circle = point_on_shape_1.PointOnShape.getOsculatingCircle(maxOsculatingCircleRadius, pos);\n    //console.log(maxOsculatingCircleRadius)\n    var order = point_on_shape_1.PointOnShape.calcOrder(circle, pos);\n    // Make sure there isn't already a ContactPoint close by - it can cause\n    // floating point stability issues.\n    if (is_another_cp_closeby_1.isAnotherCpCloseby(cpGraphs, pos, circle, order, 0, 1000, 'magenta')) {\n        return;\n    }\n    add_to_cp_graph_1.addToCpGraph(circle, [-0.5, +0.5], cpGraphs, [pos, pos]);\n    if (typeof _debug_ !== 'undefined') {\n        _debug_.generated.elems.oneProng.push(pos);\n    }\n}\nexports.add1Prong = add1Prong;\n\n},{\"../../point-on-shape\":133,\"../add-to-cp-graph\":86,\"../is-another-cp-closeby\":123}],89:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cp_node_1 = _dereq_(\"../../cp-node\");\nvar contact_point_1 = _dereq_(\"../../contact-point\");\nvar point_on_shape_1 = _dereq_(\"../../point-on-shape\");\nvar is_another_cp_closeby_1 = _dereq_(\"../is-another-cp-closeby\");\nvar get_neighboring_cps_1 = _dereq_(\"../get-neighboring-cps\");\n/**\r\n * Adds a 2-prong contact circle to the shape.\r\n * @param cpGraphs\r\n * @param circle Circle containing the 2 contact points\r\n * @param posSource The source point on shape\r\n * @param posAntipode The found antipodal point on shape\r\n * @param holeClosing True if this is a hole-closing 2-prong, false otherwise\r\n * @param extreme The maximum coordinate value used to calculate floating point\r\n * tolerances.\r\n */\nfunction add2Prong(cpGraphs, circle, posSource, posAntipode, holeClosing, extreme) {\n    var orderSource = point_on_shape_1.PointOnShape.calcOrder(circle, posSource);\n    var orderAntipode = point_on_shape_1.PointOnShape.calcOrder(circle, posAntipode);\n    var t_s = posSource.t;\n    var curve = void 0;\n    if (t_s === 0) {\n        t_s = 1;\n        curve = posSource.curve.prev;\n        posSource = new point_on_shape_1.PointOnShape(curve, t_s);\n    }\n    // Make sure there isn't already a ContactPoint close by - it can cause\n    // floating point stability issues.\n    if (is_another_cp_closeby_1.isAnotherCpCloseby(cpGraphs, posSource, circle, orderSource, 0, extreme, 'red') || is_another_cp_closeby_1.isAnotherCpCloseby(cpGraphs, posAntipode, circle, orderAntipode, 0, extreme, 'red')) {\n        if (typeof _debug_ !== 'undefined') {\n            if (holeClosing) {\n                _debug_.generated.elems['twoProng_holeClosing'].pop();\n            } else {\n                _debug_.generated.elems['twoProng_regular'].pop();\n            }\n        }\n        return;\n    }\n    // Antipode\n    var cpAntipode = new contact_point_1.ContactPoint(posAntipode, circle, orderAntipode, 0);\n    var loopAntipode = posAntipode.curve.loop;\n    var cpTreeAntipode = cpGraphs.get(loopAntipode);\n    var deltaAntipode = get_neighboring_cps_1.getNeighbouringPoints(cpTreeAntipode, posAntipode, orderAntipode, 0);\n    var newCpAntipode = cp_node_1.CpNode.insert(holeClosing, false, cpTreeAntipode, cpAntipode, deltaAntipode[0]);\n    //console.log(cpAntipode.pointOnShape.t);\n    // Source\n    var cpSource = new contact_point_1.ContactPoint(posSource, circle, orderSource, 0);\n    var loopSource = posSource.curve.loop;\n    var cpTreeSource = cpGraphs.get(loopSource);\n    var deltaSource = get_neighboring_cps_1.getNeighbouringPoints(cpTreeSource, posSource, orderSource, 0);\n    var newCpSource = cp_node_1.CpNode.insert(holeClosing, false, cpTreeSource, cpSource, deltaSource[0]);\n    //console.log(cpSource.pointOnShape.t);\n    // Connect graph\n    newCpSource.prevOnCircle = newCpAntipode;\n    newCpSource.nextOnCircle = newCpAntipode;\n    newCpAntipode.prevOnCircle = newCpSource;\n    newCpAntipode.nextOnCircle = newCpSource;\n    if (holeClosing) {\n        // Duplicate ContactPoints\n        var cpB2 = new contact_point_1.ContactPoint(posAntipode, circle, cpAntipode.order, +1);\n        var newCpB2Node = cp_node_1.CpNode.insert(true, false, cpTreeAntipode, cpB2, newCpAntipode);\n        var cpB1 = new contact_point_1.ContactPoint(posSource, circle, cpSource.order, -1);\n        var newCpB1Node = cp_node_1.CpNode.insert(true, false, cpTreeSource, cpB1, newCpSource.prev);\n        // Connect graph\n        newCpB1Node.prevOnCircle = newCpB2Node;\n        newCpB1Node.nextOnCircle = newCpB2Node;\n        newCpB2Node.prevOnCircle = newCpB1Node;\n        newCpB2Node.nextOnCircle = newCpB1Node;\n        newCpAntipode.next = newCpSource;\n        newCpSource.prev = newCpAntipode;\n        newCpB1Node.next = newCpB2Node;\n        newCpB2Node.prev = newCpB1Node;\n    }\n    return newCpSource;\n}\nexports.add2Prong = add2Prong;\n\n},{\"../../contact-point\":54,\"../../cp-node\":55,\"../../point-on-shape\":133,\"../get-neighboring-cps\":121,\"../is-another-cp-closeby\":123}],90:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar add_to_cp_graph_1 = _dereq_(\"../add-to-cp-graph\");\nvar is_another_cp_closeby_1 = _dereq_(\"../is-another-cp-closeby\");\n/**\r\n * Adds a 3-prong MAT circle according to the 3 given (previously calculated)\r\n * points on the shape.\r\n * @param cpTrees\r\n * @param orders\r\n * @param threeProng\r\n */\nfunction add3Prong(cpTrees, orders, threeProng) {\n    var circle = threeProng.circle,\n        ps = threeProng.ps,\n        δ3s = threeProng.δ3s;\n    // Keep for possible future debugging.\t\n    /*\r\n    if (typeof _debug_ !== 'undefined') {\r\n        for (let i=0; i<3; i++) {\r\n            let cpBef = threeProng.δ3s[i][0].cp;\r\n            let cpAft = threeProng.δ3s[i][1].cp;\r\n            //let cmpBef = PointOnShape.compareInclOrder(cpBef.pointOnShape, ps[i], cpBef.order, orders[i]);\r\n            //let cmpAft = PointOnShape.compareInclOrder(cpAft.pointOnShape, ps[i], cpAft.order, orders[i]);\r\n              let cmpBef = PointOnShape.compare(cpBef.pointOnShape, ps[i]);\r\n            let cmpAft = PointOnShape.compare(cpAft.pointOnShape, ps[i]);\r\n              // len is used by debug functions to reference a particular\r\n            // three-prong.\r\n            let len = _debug_.generated.elems.threeProng.length-1;\r\n            if (cmpBef > 0) {\r\n                console.log('----------------------------------------');\r\n                console.log(`3-prong order is wrong (bef) : i: ${i} - cmp: ${cmpBef} - n: ${len}`);\r\n                console.log(threeProng);\r\n                console.log(cpBef);\r\n                console.log(cpAft);\r\n                console.log(ps[i]);\r\n            }\r\n            if (cmpAft < 0) {\r\n                console.log('----------------------------------------');\r\n                console.log(`3-prong order is wrong (aft) : i: ${i} - cmp: ${cmpAft} - n: ${len}`);\r\n                console.log(threeProng);\r\n                console.log(cpBef);\r\n                console.log(cpAft);\r\n                console.log(ps[i]);\r\n            }\r\n        }\r\n    }\r\n    */\n    // TODO - replace 1000 below with correct value\n\n    is_another_cp_closeby_1.isAnotherCpCloseby(cpTrees, ps[0], circle, orders[0], 0, 1000, 'blue');\n    is_another_cp_closeby_1.isAnotherCpCloseby(cpTrees, ps[1], circle, orders[1], 0, 1000, 'blue');\n    is_another_cp_closeby_1.isAnotherCpCloseby(cpTrees, ps[2], circle, orders[2], 0, 1000, 'blue');\n    add_to_cp_graph_1.addToCpGraph(circle, orders, cpTrees, ps, δ3s);\n    return circle;\n}\nexports.add3Prong = add3Prong;\n\n},{\"../add-to-cp-graph\":86,\"../is-another-cp-closeby\":123}],91:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar point_on_shape_1 = _dereq_(\"../../point-on-shape\");\nfunction addDebugInfo1(loops) {\n    var _generated$elems$loop;\n\n    if (typeof _debug_ === 'undefined') {\n        return;\n    }\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = loops[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var loop = _step.value;\n\n            _debug_.fs.nameObj(loop, 'l|');\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    var generated = _debug_.generated;\n    generated.timing.holeClosers[0] = performance.now();\n    (_generated$elems$loop = generated.elems.loop).push.apply(_generated$elems$loop, _toConsumableArray(loops));\n    generated.elems.loops.push(loops);\n\n    var _loop2 = function _loop2(_loop) {\n        var i = 0;\n        _loop.curves.forEach(function (curve) {\n            var ps = curve.ps;\n            var hull = flo_bezier3_1.getBoundingHull(ps);\n            generated.elems.boundingHull.push(hull);\n            var looseBoundingBox = flo_bezier3_1.getBoundingBox(ps);\n            generated.elems.looseBoundingBox.push(looseBoundingBox);\n            var tightBoundingBox = flo_bezier3_1.getBoundingBoxTight(ps);\n            generated.elems.tightBoundingBox.push(tightBoundingBox);\n            i++;\n        });\n    };\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = loops[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _loop = _step2.value;\n\n            _loop2(_loop);\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n}\nexports.addDebugInfo1 = addDebugInfo1;\nfunction addDebugInfo2(pointOnShapeArrPerLoop) {\n    if (typeof _debug_ === 'undefined') {\n        return;\n    }\n    var generated = _debug_.generated;\n    var timing = generated.timing;\n    var now = performance.now();\n    timing.holeClosers[1] += now - timing.holeClosers[0];\n    timing.oneAnd2Prongs[0] = now;\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n        for (var _iterator3 = pointOnShapeArrPerLoop[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var pointsOnShape = _step3.value;\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n                for (var _iterator4 = pointsOnShape[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                    var pos = _step4.value;\n\n                    if (point_on_shape_1.PointOnShape.isSharpCorner(pos)) {\n                        generated.elems.sharpCorner.push(pos);\n                    } else {\n                        if (point_on_shape_1.PointOnShape.isDullCorner(pos)) {\n                            generated.elems.dullCorner.push(pos);\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                        _iterator4.return();\n                    }\n                } finally {\n                    if (_didIteratorError4) {\n                        throw _iteratorError4;\n                    }\n                }\n            }\n        }\n    } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n            }\n        } finally {\n            if (_didIteratorError3) {\n                throw _iteratorError3;\n            }\n        }\n    }\n}\nexports.addDebugInfo2 = addDebugInfo2;\nfunction addDebugInfo3() {\n    if (typeof _debug_ === 'undefined') {\n        return;\n    }\n    var generated = _debug_.generated;\n    var timing = generated.timing;\n    var now = performance.now();\n    timing.oneAnd2Prongs[1] += now - timing.oneAnd2Prongs[0];\n    timing.threeProngs[0] = now;\n}\nexports.addDebugInfo3 = addDebugInfo3;\nfunction addDebugInfo4(mat) {\n    if (typeof _debug_ === 'undefined') {\n        return;\n    }\n    var generated = _debug_.generated;\n    var timing = generated.timing;\n    generated.elems.mat.push(mat);\n    timing.threeProngs[1] += performance.now() - timing.threeProngs[0];\n    timing.mats[1] = timing.holeClosers[1] + timing.oneAnd2Prongs[1] + timing.threeProngs[1];\n}\nexports.addDebugInfo4 = addDebugInfo4;\n\n},{\"../../point-on-shape\":133,\"flo-bezier3\":3}],92:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_contact_circles_at_interface_1 = _dereq_(\"../get-contact-circles-at-interface\");\nvar get_bezier_curvature_extrema_1 = _dereq_(\"../get-bezier-curvature-extrema\");\nvar point_on_shape_1 = _dereq_(\"../../point-on-shape\");\n/**\r\n * Get useful points on the shape - these incude points of maximum curvature and\r\n * points at the bezier-bezier interfaces.\r\n * @param loop\r\n * @param additionalPointCount\r\n */\nfunction createGetInterestingPointsOnLoop() {\n    var additionalPointCount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n\n    return function (loop) {\n        var allPoints = [];\n        for (var i = 0; i < loop.curves.length; i++) {\n            var curve = loop.curves[i];\n\n            var _get_bezier_curvature = get_bezier_curvature_extrema_1.getBezierCurvatureExtrema(curve),\n                maxCurvaturePoss = _get_bezier_curvature.maxCurvaturePoss,\n                maxNegativeCurvaturePoss = _get_bezier_curvature.maxNegativeCurvaturePoss;\n\n            allPoints.push.apply(allPoints, _toConsumableArray(get_contact_circles_at_interface_1.getContactCirclesAtInterface(curve)).concat(_toConsumableArray(maxCurvaturePoss), _toConsumableArray(maxNegativeCurvaturePoss)));\n            var n = additionalPointCount + 1;\n            for (var _i = 1; _i < n; _i++) {\n                allPoints.push(new point_on_shape_1.PointOnShape(curve, _i / n));\n            }\n        }\n        allPoints.sort(point_on_shape_1.PointOnShape.compare);\n        return allPoints;\n    };\n}\nexports.createGetInterestingPointsOnLoop = createGetInterestingPointsOnLoop;\n\n},{\"../../point-on-shape\":133,\"../get-bezier-curvature-extrema\":115,\"../get-contact-circles-at-interface\":118}],93:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_ll_rb_tree_1 = _dereq_(\"flo-ll-rb-tree\");\nvar circle_1 = _dereq_(\"../../circle\");\nvar cp_node_1 = _dereq_(\"../../cp-node\");\nvar contact_point_1 = _dereq_(\"../../contact-point\");\n/**\r\n * Creates the initial ContactPoint loops from the given sharp corners.\r\n * @param shape\r\n * @param sharpCornerss\r\n */\nfunction createInitialCpGraph(loops, cpTrees, sharpCornerss, xMap) {\n    var cpNode = void 0;\n    for (var k = 0; k < sharpCornerss.length; k++) {\n        var sharpCorners = sharpCornerss[k];\n        var cpTree = new flo_ll_rb_tree_1.default(cp_node_1.CpNode.comparator, [], true);\n        var cpNode1 = undefined;\n        var cpNode2 = undefined;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = sharpCorners[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var pos = _step.value;\n\n                var ps = pos.curve.next.ps;\n                var x = xMap.get(ps);\n                var isIntersection = !!x;\n                var circle = new circle_1.Circle(pos.p, 0);\n                var cp1 = new contact_point_1.ContactPoint(pos, circle, -1, 0);\n                var cp2 = new contact_point_1.ContactPoint(pos, circle, +1, 0);\n                cpNode1 = cp_node_1.CpNode.insert(false, isIntersection, cpTree, cp1, cpNode2);\n                cpNode2 = cp_node_1.CpNode.insert(false, isIntersection, cpTree, cp2, cpNode1);\n                cpNode1.prevOnCircle = cpNode2;\n                cpNode2.prevOnCircle = cpNode1;\n                cpNode1.nextOnCircle = cpNode2;\n                cpNode2.nextOnCircle = cpNode1;\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        if (!cpNode) {\n            cpNode = cpNode1;\n        }\n        var loop = loops[k];\n        cpTrees.set(loop, cpTree);\n    }\n    return cpNode;\n}\nexports.createInitialCpGraph = createInitialCpGraph;\n\n},{\"../../circle\":53,\"../../contact-point\":54,\"../../cp-node\":55,\"flo-ll-rb-tree\":37}],94:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar two_prong_for_debugging_1 = _dereq_(\"../../../debug/two-prong-for-debugging\");\nvar get_two_prong_type_1 = _dereq_(\"../../get-two-prong-type\");\nfunction addDebugInfo(bezierPieces, failed, pos, circle, z, δ, xs, holeClosing) {\n    var twoProng = new two_prong_for_debugging_1.TwoProngForDebugging(_debug_.generated, bezierPieces, pos, δ, z ? z.p : undefined, circle, xs, failed, holeClosing, false, false);\n    var twoProngType = get_two_prong_type_1.getTwoProngType(twoProng);\n    _debug_.generated.elems[twoProngType].push(twoProng);\n}\nexports.addDebugInfo = addDebugInfo;\n\n},{\"../../../debug/two-prong-for-debugging\":83,\"../../get-two-prong-type\":122}],95:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar get_closest_square_distance_to_rect_1 = _dereq_(\"../../geometry/get-closest-square-distance-to-rect\");\n/**\r\n * Cull all bezierPieces not within given radius of a given point.\r\n * @param extreme\r\n * @param bezierPieces\r\n * @param p\r\n * @param rSquared\r\n */\nfunction cullBezierPieces(bezierPieces, p, rSquared) {\n    var CULL_THRESHOLD = 5;\n    var TOLERANCE = 1 + 1e-3;\n    if (bezierPieces.length <= CULL_THRESHOLD) {\n        return bezierPieces;\n    }\n    var newPieces = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = bezierPieces[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var bezierPiece = _step.value;\n\n            var ps = bezierPiece.curve.ps;\n            var rect = flo_bezier3_1.getBoundingBox(ps);\n            var bd = get_closest_square_distance_to_rect_1.getClosestSquareDistanceToRect(rect, p);\n            if (bd <= rSquared * TOLERANCE) {\n                newPieces.push(bezierPiece);\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return newPieces;\n}\nexports.cullBezierPieces = cullBezierPieces;\n\n},{\"../../geometry/get-closest-square-distance-to-rect\":111,\"flo-bezier3\":3}],96:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar line_line_intersection_1 = _dereq_(\"../../geometry/line-line-intersection\");\nvar get_closest_boundary_point_1 = _dereq_(\"../../get-closest-boundary-point\");\nvar circle_1 = _dereq_(\"../../../circle\");\nvar point_on_shape_1 = _dereq_(\"../../../point-on-shape\");\nvar add_1_prong_1 = _dereq_(\"../add-1-prong\");\nvar add_debug_info_1 = _dereq_(\"./add-debug-info\");\nvar cull_bezier_pieces_1 = _dereq_(\"./cull-bezier-pieces\");\nvar find_equidistant_point_on_line_1 = _dereq_(\"./find-equidistant-point-on-line\");\nvar get_initial_bezier_pieces_1 = _dereq_(\"./get-initial-bezier-pieces\");\n/**\r\n * Adds a 2-prong to the MAT. The first point on the shape boundary is given and\r\n * the second one is found by the algorithm.\r\n *\r\n * A 2-prong is defined as a MAT circle that touches the shape at exactly 2\r\n * points.\r\n *\r\n * Before any 2-prongs are added the entire shape is our δΩ (1-prongs do not\r\n * reduce the boundary).\r\n *\r\n * As per the paper by Choi, Choi, Moon and Wee:\r\n *   \"The starting point of this algorithm is a choice of a circle Br(x)\r\n *    centered at an interior point x which contains two boundary portions c and\r\n *    d of dΩ as in Fig. 19.\"\r\n * In fact, we (and they) start by fixing one point on the boundary beforehand.\r\n * @param loops A shape represented by path loops\r\n * @param extreme The extreme coordinate value of the shape\r\n * @param squaredDiagonalLength The squared diagonal length of the shape\r\n * bounding box.\r\n * @param y The source point of the 2-prong to be found\r\n * @param isHoleClosing True if this is a hole-closing two-prong, false otherwise\r\n * @param k The loop array index\r\n */\nfunction find2Prong(loops, extreme, squaredDiagonalLength, cpTrees, y, isHoleClosing, k) {\n    var MAX_ITERATIONS = 25;\n    var squaredSeperationTolerance = Math.pow(1e-6 * extreme, 2);\n    //const oneProngTolerance = 1+1e-4;\n    var oneProngTolerance = Math.pow(1e-4, 2);\n    var squaredErrorTolerance = 1e-2 * squaredSeperationTolerance;\n    var maxOsculatingCircleRadiusSquared = squaredDiagonalLength;\n    // The boundary piece that should contain the other point of \n    // the 2-prong circle. (Defined by start and end points).\n\n    var _get_initial_bezier_p = get_initial_bezier_pieces_1.getInitialBezierPieces(isHoleClosing, k, loops, cpTrees, y),\n        bezierPieces = _get_initial_bezier_p.bezierPieces,\n        δ = _get_initial_bezier_p.δ;\n    /** The center of the two-prong (successively refined) */\n\n\n    var x = void 0;\n    var p = void 0;\n    var r = void 0;\n    if (isHoleClosing) {\n        p = [y.p[0], y.p[1]];\n        x = [p[0], p[1] - Math.sqrt(maxOsculatingCircleRadiusSquared)];\n        r = maxOsculatingCircleRadiusSquared;\n    } else {\n        p = y.p;\n        x = point_on_shape_1.PointOnShape.getOsculatingCircle(maxOsculatingCircleRadiusSquared, y).center;\n        r = flo_vector2d_1.squaredDistanceBetween(p, x);\n    }\n    // The lines below is an optimization.\n    var r_ = reduceRadius(extreme, bezierPieces, p, x);\n    if (r > r_) {\n        x = flo_vector2d_1.interpolate(p, x, Math.sqrt(r_ / r));\n    }\n    var xs = []; // Trace the convergence (for debugging).\n    var z = void 0; // The antipode if the two-prong (successively refined)\n    var i = 0;\n    var done = 0;\n    var failed = false; // The failed flag is set if a 2-prong cannot be found.\n    var bezierPieces_ = bezierPieces;\n    do {\n        i++;\n        var _r = flo_vector2d_1.squaredDistanceBetween(x, y.p);\n        bezierPieces_ = cull_bezier_pieces_1.cullBezierPieces(bezierPieces_, x, _r);\n        z = get_closest_boundary_point_1.getClosestBoundaryPoint(bezierPieces_, x, y.curve, y.t);\n        /*\r\n        if (z.t === 0 || z.t === 1) {\r\n            console.log(z, z.t)\r\n        }\r\n        */\n        if (z === undefined) {\n            if (typeof _debug_ !== 'undefined') {\n                var elems = _debug_.generated.elems;\n                var elem = isHoleClosing ? elems.twoProng_holeClosing : elems.twoProng_regular;\n                var elemStr = isHoleClosing ? 'hole-closing: ' + elem.length : 'regular: ' + elem.length;\n                console.log('failed: no closest point - ' + elemStr);\n            }\n            failed = true;\n            break;\n        }\n        if (typeof _debug_ !== 'undefined') {\n            xs.push({ x: x, y: y, z: z, t: y.t });\n        }\n        var d = flo_vector2d_1.squaredDistanceBetween(x, z.p);\n        //if (i === 1 && d*oneProngTolerance >= r) {\n        if (i === 1 && _r < d + oneProngTolerance) {\n            // It is a 1-prong.\n            add_1_prong_1.add1Prong(Math.sqrt(maxOsculatingCircleRadiusSquared), cpTrees, y);\n            return undefined;\n        }\n        // TODO - squaredSeperationTolerance should in future be replaced with\n        // a relative error, i.e. distance between y (or z) / length(y (or z)).\n        if (!isHoleClosing && flo_vector2d_1.squaredDistanceBetween(y.p, z.p) <= squaredSeperationTolerance) {\n            if (typeof _debug_ !== 'undefined') {\n                var _elems = _debug_.generated.elems;\n                var _elem = isHoleClosing ? _elems.twoProng_holeClosing : _elems.twoProng_regular;\n                var _elemStr = isHoleClosing ? 'hole-closing: ' + _elem.length : 'regular: ' + _elem.length;\n                /*\r\n                console.log(\r\n                    'failed: two-prong radius too small - ' + elemStr\r\n                );\r\n                */\n            }\n            failed = true;\n            break;\n        }\n        // Find the point on the line connecting y with x that is  \n        // equidistant from y and z. This will be our next x.\n        var nextX = find_equidistant_point_on_line_1.findEquidistantPointOnLine(x, y.p, z.p);\n        var squaredError = flo_vector2d_1.squaredDistanceBetween(x, nextX);\n        x = nextX;\n        if (squaredError < squaredErrorTolerance) {\n            done++; // Do one more iteration\n        } else if (i === MAX_ITERATIONS) {\n            // Convergence was too slow.\n            failed = true;\n            break; // We're done\n        }\n    } while (done < 1);\n    var circle = void 0;\n    if (z !== undefined) {\n        circle = new circle_1.Circle(x, flo_vector2d_1.distanceBetween(x, z.p));\n    }\n    if (typeof _debug_ !== 'undefined') {\n        xs.push({ x: x, y: y, z: z, t: y.t });\n        add_debug_info_1.addDebugInfo(bezierPieces, failed, y, circle, z, δ, xs, isHoleClosing);\n    }\n    return failed ? undefined : { circle: circle, z: z };\n}\nexports.find2Prong = find2Prong;\n/**\r\n * Reduces the circle radius initially as an optimization step.\r\n */\nfunction reduceRadius(extreme, bezierPieces, p, x) {\n    var TOLERANCE = extreme * 1e-3;\n    var prevP = undefined;\n    var minRadius = Number.POSITIVE_INFINITY;\n    for (var i = 0; i < bezierPieces.length; i++) {\n        var bezierPiece = bezierPieces[i];\n        var ps = bezierPiece.curve.ps;\n        var ev = flo_bezier3_1.evaluate(ps);\n        var p1 = ev(bezierPiece.ts[0]);\n        var r1 = Number.POSITIVE_INFINITY;\n        // Prevent evaluating the same points twice\n        if (!prevP || prevP[0] !== p1[0] || prevP[1] !== p1[1]) {\n            var cc1 = getCircleCenterFrom2PointsAndNormal(extreme, p, x, p1);\n            if (cc1) {\n                r1 = flo_vector2d_1.squaredDistanceBetween(p, cc1);\n            }\n        }\n        var r2 = Number.POSITIVE_INFINITY;\n        var p2 = ev(bezierPiece.ts[1]);\n        var cc2 = getCircleCenterFrom2PointsAndNormal(extreme, p, x, p2);\n        if (cc2) {\n            r2 = flo_vector2d_1.squaredDistanceBetween(p, cc2);\n        }\n        prevP = p2;\n        var d = Math.min(r1, r2);\n        if (d < minRadius) {\n            minRadius = d;\n        }\n    }\n    // The extra bit is to account for floating point precision.\n    return minRadius + TOLERANCE;\n}\n/**\r\n *\r\n * @param p A point on the circle with normal pointing to x towards the center\r\n * of the circle.\r\n * @param x\r\n * @param p1 Another point on the circle.\r\n */\nfunction getCircleCenterFrom2PointsAndNormal(extreme, p, x, p1) {\n    var TOLERANCE = Math.pow(1e-4 * extreme, 2);\n    // Ignore if p and p1 are too close together\n    if (flo_vector2d_1.squaredDistanceBetween(p, p1) < TOLERANCE) {\n        return undefined;\n    }\n    /** The perpindicular bisector between the two given points on the circle */\n    var pb = [(p[0] + p1[0]) / 2, (p[1] + p1[1]) / 2];\n    var tangent = [p1[0] - p[0], p1[1] - p[1]];\n    var normal = [-tangent[1], tangent[0]]; // Rotate by 90 degrees\n    var pb2 = [pb[0] + normal[0], pb[1] + normal[1]];\n    var res = line_line_intersection_1.lineLineIntersection([p, x], [pb, pb2]);\n    if (!res) {\n        return undefined;\n    }\n    var resO = [res[0] - p[0], res[1] - p[1]];\n    var xO = [x[0] - p[0], x[1] - p[1]];\n    if (flo_vector2d_1.dot(resO, xO) < 0) {\n        return undefined;\n    }\n    return res;\n}\n\n},{\"../../../circle\":53,\"../../../point-on-shape\":133,\"../../geometry/line-line-intersection\":113,\"../../get-closest-boundary-point\":117,\"../add-1-prong\":88,\"./add-debug-info\":94,\"./cull-bezier-pieces\":95,\"./find-equidistant-point-on-line\":97,\"./get-initial-bezier-pieces\":98,\"flo-bezier3\":3,\"flo-vector2d\":50}],97:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n *\r\n * @param x\r\n * @param y\r\n * @param z\r\n * @returns The point on the line from y to x that is equidistant from y and z.\r\n */\nfunction findEquidistantPointOnLine(x, y, z) {\n    // Some basic algebra (not shown) finds the required point.\n    // Swap axes if x and y are more aligned to y-axis than to x-axis.\n    var swapAxes = Math.abs((x[1] - y[1]) / (x[0] - y[0])) > 1;\n    // Cache\n    var x1 = void 0,\n        x2 = void 0,\n        y1 = void 0,\n        y2 = void 0,\n        z1 = void 0,\n        z2 = void 0;\n    if (swapAxes) {\n        x1 = x[1];\n        x2 = x[0];\n        y1 = y[1];\n        y2 = y[0];\n        z1 = z[1];\n        z2 = z[0];\n    } else {\n        x1 = x[0];\n        x2 = x[1];\n        y1 = y[0];\n        y2 = y[1];\n        z1 = z[0];\n        z2 = z[1];\n    }\n    // a <= 1 (due to swapped axes)\n    var a = (x2 - y2) / (x1 - y1);\n    var b = y2 - a * y1;\n    var c = y1 * y1 + y2 * y2 - z1 * z1 - z2 * z2 + 2 * b * (z2 - y2);\n    var d = y1 - z1 + a * (y2 - z2);\n    var t1 = c / (2 * d);\n    var t2 = a * t1 + b;\n    return swapAxes ? [t2, t1] : [t1, t2];\n}\nexports.findEquidistantPointOnLine = findEquidistantPointOnLine;\n\n},{}],98:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_neighboring_cps_1 = _dereq_(\"../../get-neighboring-cps\");\nvar get_boundary_piece_beziers_1 = _dereq_(\"../../get-boundary-piece-beziers\");\nvar bezier_piece_1 = _dereq_(\"../../../bezier-piece\");\nvar point_on_shape_1 = _dereq_(\"../../../point-on-shape\");\nfunction getInitialBezierPieces(isHoleClosing, k, loops, cpTrees, y) {\n    var bezierPieces = void 0;\n    var δ = void 0;\n    if (isHoleClosing) {\n        bezierPieces = [];\n        for (var k2 = 0; k2 < k; k2++) {\n            var _bezierPieces;\n\n            //let pieces = getBoundaryBeziers(loops[k2]);\n            var pieces = loops[k2].curves.map(function (curve) {\n                return new bezier_piece_1.BezierPiece(curve, [0, 1]);\n            });\n            (_bezierPieces = bezierPieces).push.apply(_bezierPieces, _toConsumableArray(pieces));\n        }\n    } else {\n        var order = point_on_shape_1.PointOnShape.isDullCorner(y) ? y.t === 1 ? -1 : +1 : 0;\n        var loop = loops[k];\n        var cpNode = get_neighboring_cps_1.getNeighbouringPoints(cpTrees.get(loop), y, order, 0)[0];\n        δ = [cpNode, cpNode];\n        if (!cpNode ||\n        // The special case if there is only a single sharp corner or \n        // terminating 2-prong currently in the MAT. Don't remove!\n        cpNode === cpNode.next.next) {\n            bezierPieces = loop.curves.map(function (curve) {\n                return new bezier_piece_1.BezierPiece(curve, [0, 1]);\n            });\n        } else {\n            bezierPieces = get_boundary_piece_beziers_1.getBoundaryPieceBeziers(δ);\n        }\n    }\n    return { bezierPieces: bezierPieces, δ: δ };\n}\nexports.getInitialBezierPieces = getInitialBezierPieces;\n\n},{\"../../../bezier-piece\":51,\"../../../point-on-shape\":133,\"../../get-boundary-piece-beziers\":116,\"../../get-neighboring-cps\":121}],99:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar get_closest_points_1 = _dereq_(\"./get-closest-points\");\n/**\r\n * Find new x and ps that are a better estimate of the 3-prong circle.\r\n * The potential function, V, is defined as the distance to the actual 3 prong\r\n * circle center.\r\n * @param bezierPiece3s The three boundary pieces, each of which should contain\r\n * a point of the 3-prong to be found.\r\n * @param x The currently best guess at the center of the 3-prong circle.\r\n * @param vectorToZeroV\r\n * @param extreme\r\n */\nfunction calcBetterX(bezierPiece3s, x, vectorToZeroV) {\n    var V = flo_vector2d_1.len(vectorToZeroV);\n    var nu = 1;\n    var better = void 0;\n    var newX = void 0;\n    var newPs = void 0;\n    var newV = void 0;\n    var i = 0; // Safeguard\n    do {\n        var shift = flo_vector2d_1.scale(vectorToZeroV, nu);\n        newX = flo_vector2d_1.translate(shift, x);\n        newPs = get_closest_points_1.getClosestPoints(newX, bezierPiece3s);\n        //console.log(newPs.map(pos => '' + pos.p[0] + ' ' + pos.p[1]))\n        // Point of zero V\n        var newCircleCenter = flo_vector2d_1.circumCenter(newPs.map(function (pos) {\n            return pos.p;\n        }));\n        var newVectorToZeroV = flo_vector2d_1.fromTo(newX, newCircleCenter);\n        newV = flo_vector2d_1.len(newVectorToZeroV);\n        better = newV < V;\n        nu = nu / 2;\n        i++;\n    } while (!better && i < 3);\n    return { newX: newX, newV: newV, newPs: newPs };\n}\nexports.calcBetterX = calcBetterX;\n\n},{\"./get-closest-points\":103,\"flo-vector2d\":50}],100:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar get_closest_boundary_point_1 = _dereq_(\"../../get-closest-boundary-point\");\n/**\r\n * Finds an initial 3-prong circle center point from which to iterate. The point\r\n * must be within the shape.\r\n * @param δ3s - The three boundary pieces of which we need to find the three\r\n * 3-prong points.\r\n * @param bezierPiece3s\r\n * @param extreme\r\n */\nfunction calcInitial3ProngCenter(δ3s, bezierPiece3s) {\n    var twoProngCircleCenter = δ3s[0][0].cp.circle.center;\n    /*\r\n    let twoProngCircleCenter =\r\n        mean([\r\n            δ3s[0][0].cp.pointOnShape.p,\r\n            δ3s[2][1].cp.pointOnShape.p\r\n        ]);\r\n        */\n    //_debug_.fs.draw.dot(_debug_.generated.g, twoProngCircleCenter, 0.05, 'blue');\n    var pos = get_closest_boundary_point_1.getClosestBoundaryPoint(bezierPiece3s[1], twoProngCircleCenter, undefined, // curve\n    undefined // t\n    );\n    var meanPoints = [δ3s[0][0].cp.pointOnShape.p, pos.p, δ3s[2][1].cp.pointOnShape.p];\n    return flo_vector2d_1.circumCenter(meanPoints);\n}\nexports.calcInitial3ProngCenter = calcInitial3ProngCenter;\n\n},{\"../../get-closest-boundary-point\":117,\"flo-vector2d\":50}],101:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar circle_1 = _dereq_(\"../../../circle\");\nvar point_on_shape_1 = _dereq_(\"../../../point-on-shape\");\nvar get_closest_boundary_point_1 = _dereq_(\"../../get-closest-boundary-point\");\nvar calc_initial_3_prong_center_1 = _dereq_(\"./calc-initial-3-prong-center\");\nvar get_closest_points_1 = _dereq_(\"./get-closest-points\");\nvar calc_better_x_1 = _dereq_(\"./calc-better-x\");\nvar curve_1 = _dereq_(\"../../../curve\");\nvar calcVectorToZeroV_StraightToIt = flo_vector2d_1.fromTo;\n/**\r\n * Finds a 3-prong using only the 3 given δs.\r\n * @param δs The boundary pieces\r\n * @param idx δ identifier\r\n * @param bezierPiecess\r\n * @param extreme The maximum coordinate value used to calculate floating point\r\n * tolerances.\r\n */\nfunction find3ProngForDelta3s(δs, idx, k, bezierPiecess, extreme) {\n    var TOLERANCE = extreme * 1e-10;\n    var MAX_ITERATIONS = 10;\n    //k = 0;\n    /*\r\n    let δ3s = [\r\n        δs[0],\r\n        δs[idx],\r\n        δs[δs.length-1]\r\n    ];\r\n    */\n    var δs_ = [δs[0], δs[idx], δs[δs.length - 1]];\n    /*\r\n    let bezierPiece3s = [\r\n        bezierPiecess[0],\r\n        bezierPiecess[idx],\r\n        bezierPiecess[δs.length-1]\r\n    ];\r\n    */\n    var bezierPieces_ = [bezierPiecess[0], bezierPiecess[idx], bezierPiecess[δs.length - 1]];\n    var δ3ss = [[δs_[0], δs_[1], δs_[2]], [δs_[1], δs_[2], δs_[0]], [δs_[2], δs_[0], δs_[1]]];\n    var bezierPiecess_ = [[bezierPieces_[0], bezierPieces_[1], bezierPieces_[2]], [bezierPieces_[1], bezierPieces_[2], bezierPieces_[0]], [bezierPieces_[2], bezierPieces_[0], bezierPieces_[1]]];\n    var δ3s = δ3ss[k];\n    var bezierPiece3s = bezierPiecess_[k];\n    if (δ3s[0][0].isSharp()) {\n        return undefined;\n    }\n    var ps = void 0;\n    var circumCenter_ = void 0;\n    var j = 0; // Safeguard for slow convergence\n    var x = calc_initial_3_prong_center_1.calcInitial3ProngCenter(δ3s, bezierPiece3s);\n    if (typeof _debug_ !== 'undefined') {\n        var threeProngs = _debug_.generated.elems.threeProng;\n        var d = threeProngs[threeProngs.length - 1];\n        var trace = d.traces[d.traces.length - 1];\n        trace.push(x);\n    }\n    var tolerance = Number.POSITIVE_INFINITY;\n    while (tolerance > TOLERANCE && j < MAX_ITERATIONS) {\n        j++;\n        ps = get_closest_points_1.getClosestPoints(x, bezierPiece3s);\n        if (!Number.isFinite(x[0]) || !Number.isFinite(x[1])) {\n            // TODO - the code can be cleaned up and sped up a lot if we don't\n            // use this function as is but instead use δs[0] and δs[2] as is\n            // and make δs[1] include all the rest of the beziers around the \n            // loop. This check, for instance, would be eliminated completely.\n            return undefined;\n        }\n        circumCenter_ = flo_vector2d_1.circumCenter(ps.map(function (x) {\n            return x.p;\n        }));\n        var vectorToZeroV = calcVectorToZeroV_StraightToIt(x, circumCenter_);\n        //console.log('' + x[0] + ' ' + x[1])\n        //console.log('' + vectorToZeroV[0] + ' ' + vectorToZeroV[1]);\n        if (!Number.isFinite(vectorToZeroV[0]) || !Number.isFinite(vectorToZeroV[1])) {\n            // TODO - the code can be cleaned up and sped up a lot if we don't\n            // use this function as is but instead use δs[0] and δs[2] as is\n            // and make δs[1] include all the rest of the beziers around the \n            // loop. This check, for instance, would be eliminated completely.\n            return undefined;\n        }\n        var upds = calc_better_x_1.calcBetterX(bezierPiece3s, x, vectorToZeroV);\n        x = upds.newX;\n        ps = upds.newPs;\n        if (typeof _debug_ !== 'undefined') {\n            var _threeProngs = _debug_.generated.elems.threeProng;\n            var _d = _threeProngs[_threeProngs.length - 1];\n            var _trace = _d.traces[_d.traces.length - 1];\n            _trace.push(x);\n        }\n        var V = flo_vector2d_1.len(vectorToZeroV); // The 'potential'\n        tolerance = Math.abs(V - upds.newV);\n    }\n    //_debug_.fs.draw.dot(_debug_.generated.g, x, 0.05);\n    var radius = (flo_vector2d_1.distanceBetween(x, ps[0].p) + flo_vector2d_1.distanceBetween(x, ps[1].p) + flo_vector2d_1.distanceBetween(x, ps[2].p)) / 3;\n    var circle = new circle_1.Circle(x, radius);\n    //-------------------------------------------------------------------------\n    // Calculate the unit tangent vector at 3-prong circle points - they should \n    // be very close to tangent to the boundary piece tangents at those points \n    // (up to sign). Sharp corners are a common special case.\n    //-------------------------------------------------------------------------\n    var totalAngleError = 0;\n    for (var i = 0; i < 3; i++) {\n        var p = ps[i];\n        //----------------------------\n        // Tangent of circle at point\n        //----------------------------\n        var v = flo_vector2d_1.toUnitVector(flo_vector2d_1.fromTo(p.p, x));\n        var v1 = flo_vector2d_1.rotate90Degrees(v);\n        //-----------------------------------\n        // Check if point is on dull crorner\n        //-----------------------------------\n        if (point_on_shape_1.PointOnShape.isDullCorner(p)) {\n            var corner = curve_1.Curve.getCornerAtEnd(p.curve);\n            var tans = corner.tans;\n            var perps = tans.map(flo_vector2d_1.rotate90Degrees);\n            var angleError1 = Math.asin(flo_vector2d_1.cross(perps[0], v));\n            var angleError2 = Math.asin(flo_vector2d_1.cross(v, perps[1]));\n            var angleError = 0;\n            if (angleError1 > 0) {\n                angleError += angleError1;\n            }\n            if (angleError2 > 0) {\n                angleError += angleError2;\n            }\n            totalAngleError += angleError;\n        } else {\n            //---------------------------\n            // Tangent of curve at point\n            //---------------------------\n            var v2 = flo_vector2d_1.toUnitVector(flo_bezier3_1.tangent(p.curve.ps, p.t));\n            // Cross is more numerically stable than Vector.dot at angles a\n            // multiple of Math.PI **and** is close to the actual angle value\n            // and can thus just be added to cone method of looking at \n            // tolerance.\n            // Should be close to zero and is close to the actual angle.\n            var cross_ = Math.abs(Math.asin(flo_vector2d_1.cross(v1, v2)));\n            totalAngleError += cross_;\n        }\n    }\n    //-------------------------------------------------------------------------\n    // Calculate radiusDelta, the difference between the radius and the closest\n    // point to the 3-prong. It should be around 0. If not, this is not a good \n    // candidate for the 3-prong.\n    //-------------------------------------------------------------------------\n    var closestDs = [];\n    for (var _i = 0; _i < bezierPiecess.length; _i++) {\n        var _p = get_closest_boundary_point_1.getClosestBoundaryPoint(bezierPiecess[_i], x, undefined, undefined);\n        closestDs.push(flo_vector2d_1.distanceBetween(_p.p, x));\n    }\n    var closestD = Math.min.apply(Math, closestDs);\n    var radiusDelta = Math.abs(radius - closestD);\n    // Weights below still need to be optimized.\n    var W1 = 1;\n    var W2 = 1;\n    var error = W1 * radiusDelta + W2 * totalAngleError;\n    return { ps: ps, circle: circle, error: error, δ3s: δ3s };\n}\nexports.find3ProngForDelta3s = find3ProngForDelta3s;\n\n},{\"../../../circle\":53,\"../../../curve\":56,\"../../../point-on-shape\":133,\"../../get-closest-boundary-point\":117,\"./calc-better-x\":99,\"./calc-initial-3-prong-center\":100,\"./get-closest-points\":103,\"flo-bezier3\":3,\"flo-vector2d\":50}],102:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar three_prong_for_debugging_1 = _dereq_(\"../../../debug/three-prong-for-debugging\");\nvar find_3_prong_for_delta3s_1 = _dereq_(\"./find-3-prong-for-delta3s\");\nvar get_boundary_piece_beziers_1 = _dereq_(\"../../get-boundary-piece-beziers\");\n/**\r\n * Find and return a 3-prong from the given boundary piece.\r\n * @param δs A boundary piece\r\n * @param extreme The maximum coordinate value used to calculate floating point\r\n * tolerances.\r\n */\nfunction find3Prong(δs, extreme) {\n    var bezierPiecess = δs.map(get_boundary_piece_beziers_1.getBoundaryPieceBeziers);\n    if (typeof _debug_ !== 'undefined') {\n        var threeProngs = _debug_.generated.elems.threeProng;\n        threeProngs.push(new three_prong_for_debugging_1.ThreeProngForDebugging());\n        var d = threeProngs[threeProngs.length - 1];\n        d.boundaries = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = bezierPiecess[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var bezierPieces = _step.value;\n\n                var boundary = [];\n                d.boundaries.push(boundary);\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                    for (var _iterator2 = bezierPieces[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                        var bezierPiece = _step2.value;\n\n                        var bezier = flo_bezier3_1.fromTo(bezierPiece.curve.ps)(bezierPiece.ts[0], bezierPiece.ts[1]);\n                        boundary.push(bezier);\n                    }\n                } catch (err) {\n                    _didIteratorError2 = true;\n                    _iteratorError2 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                            _iterator2.return();\n                        }\n                    } finally {\n                        if (_didIteratorError2) {\n                            throw _iteratorError2;\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        d.traces = [];\n    }\n    var candidateThreeProngs = [];\n    // The best candidate amongst the different 'permutations' of the given δs.\n    var threeProng = void 0;\n    var bestIndx = undefined;\n    var smallestError = Number.POSITIVE_INFINITY;\n    for (var i = 1; i < δs.length - 1; i++) {\n        for (var k = 0; k < 3; k++) {\n            //let k = 0;\n            if (typeof _debug_ !== 'undefined') {\n                var _threeProngs = _debug_.generated.elems.threeProng;\n                var _d = _threeProngs[_threeProngs.length - 1];\n                var trace = [];\n                _d.traces.push(trace);\n            }\n            var threeProngInfo = find_3_prong_for_delta3s_1.find3ProngForDelta3s(δs, i, k, bezierPiecess, extreme);\n            if (!threeProngInfo) {\n                continue;\n            }\n            var circle = threeProngInfo.circle,\n                ps = threeProngInfo.ps,\n                error = threeProngInfo.error,\n                δ3s = threeProngInfo.δ3s;\n\n            if (typeof _debug_ !== 'undefined') {\n                candidateThreeProngs.push({ circle: circle, ps: ps });\n            }\n            if (error < smallestError) {\n                smallestError = error;\n                bestIndx = i - 1;\n                threeProng = { circle: circle, ps: ps, δ3s: δ3s };\n            }\n        }\n    }\n    //threeProng.δ3s = [δs[0], δs[bestIndx+1], δs[δs.length-1]];\n    if (typeof _debug_ !== 'undefined') {\n        var _threeProngs2 = _debug_.generated.elems.threeProng;\n        var _d2 = _threeProngs2[_threeProngs2.length - 1];\n        _d2.generated = _debug_.generated;\n        _d2.circle = threeProng.circle, _d2.poss = threeProng.ps;\n        _d2.cp3ss = threeProng.δ3s;\n        _d2.cpss = δs;\n        _d2.bestIndx = bestIndx;\n        _d2.candidateThreeProngs = candidateThreeProngs;\n    }\n    return threeProng;\n}\nexports.find3Prong = find3Prong;\n\n},{\"../../../debug/three-prong-for-debugging\":82,\"../../get-boundary-piece-beziers\":116,\"./find-3-prong-for-delta3s\":101,\"flo-bezier3\":3}],103:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_closest_boundary_point_1 = _dereq_(\"../../get-closest-boundary-point\");\n/**\r\n *\r\n * @param x\r\n * @param bezierPiece3s\r\n * @param extreme\r\n */\nfunction getClosestPoints(x, bezierPiece3s) {\n    return bezierPiece3s.map(function (bezierPieces) {\n        return get_closest_boundary_point_1.getClosestBoundaryPoint(bezierPieces, x, undefined, // curve\n        undefined // t\n        );\n    });\n}\nexports.getClosestPoints = getClosestPoints;\n\n},{\"../../get-closest-boundary-point\":117}],104:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar find_and_add_2_prongs_1 = _dereq_(\"./find-and-add-2-prongs\");\n/**\r\n * Add 2 prongs. See comments on the add2Prong function.\r\n * @param loops\r\n * @param cpGraphs\r\n * @param for2Prongss\r\n * @param extreme The maximum coordinate value used to calculate floating point\r\n * tolerances.\r\n */\nfunction findAndAdd2ProngsOnAllPaths(loops, cpGraphs, for2Prongss, extreme) {\n    var cpNode = void 0;\n    for (var k = 0; k < for2Prongss.length; k++) {\n        var for2Prongs = for2Prongss[k];\n        cpNode = find_and_add_2_prongs_1.findAndAdd2Prongs(loops, cpGraphs, k, for2Prongs, extreme);\n    }\n    return cpNode;\n}\nexports.findAndAdd2ProngsOnAllPaths = findAndAdd2ProngsOnAllPaths;\n\n},{\"./find-and-add-2-prongs\":105}],105:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar svg_1 = _dereq_(\"../../svg/svg\");\nvar find_2_prong_1 = _dereq_(\"./find-2-prong/find-2-prong\");\nvar add_2_prong_1 = _dereq_(\"./add-2-prong\");\n/**\r\n * Find and add two-prongs.\r\n * @param loops\r\n * @param cpGraphs\r\n * @param k\r\n * @param for2Prongs\r\n * @param extreme The maximum coordinate value used to calculate floating point\r\n * tolerances.\r\n */\nfunction findAndAdd2Prongs(loops, cpGraphs, k, for2Prongs, extreme) {\n    var len = for2Prongs.length;\n    var index = indexLinear(len); // Keep for possible future use.\n    //let index = indexInterlaced(len);\n    var cpNode_ = void 0;\n    var bounds = svg_1.getShapeBounds(loops);\n    var squaredDiagonalLength = Math.pow(bounds.maxX.p[0] - bounds.minX.p[0], 2) + Math.pow(bounds.maxY.p[1] - bounds.minY.p[1], 2);\n    //console.log(Math.sqrt(squaredDiagonalLength));\n    for (var i = 0; i < len; i++) {\n        var pos = for2Prongs[index[i]];\n        var twoProngInfo = void 0;\n        twoProngInfo = find_2_prong_1.find2Prong(loops, extreme, squaredDiagonalLength, cpGraphs, pos, false, k);\n        if (twoProngInfo) {\n            var _twoProngInfo = twoProngInfo,\n                circle = _twoProngInfo.circle,\n                z = _twoProngInfo.z;\n\n            var cpNode = add_2_prong_1.add2Prong(cpGraphs, circle, pos, z, false, extreme);\n            if (!cpNode_ && cpNode) {\n                cpNode_ = cpNode;\n            }\n        }\n    }\n    return cpNode_;\n}\nexports.findAndAdd2Prongs = findAndAdd2Prongs;\n/**\r\n * Simple linear array indexing.\r\n * @param n\r\n */\nfunction indexLinear(n) {\n    var arr = [];\n    for (var i = 0; i < n; i++) {\n        arr.push(i);\n    }\n    return arr;\n}\n/**\r\n * Creates a kind of interlaced index vector.\r\n * @param n\r\n*/\nfunction indexInterlaced(n) {\n    var source = {};\n    var arr = [];\n    // l is the lowest power of 2 so that 2^l > n\n    var l = Math.pow(2, Math.floor(Math.log2(n)));\n    while (l >= 1) {\n        var k = 0;\n        while (k < n) {\n            if (!source[k]) {\n                arr.push(k);\n                source[k] = true;\n            }\n            k = k + l;\n        }\n        l = l / 2;\n    }\n    return arr;\n}\n\n},{\"../../svg/svg\":171,\"./add-2-prong\":89,\"./find-2-prong/find-2-prong\":96}],106:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar point_on_shape_1 = _dereq_(\"../../point-on-shape\");\nvar find_3_prong_1 = _dereq_(\"./find-3-prong/find-3-prong\");\nvar add_3_prong_1 = _dereq_(\"../find-mat/add-3-prong\");\n/**\r\n * Finds and adds all 3-prongs.\r\n * @param cpGraphs\r\n * @param cpStart The CpNode to start traversing from.\r\n * @param extreme The maximum coordinate value used to calculate floating point\r\n * tolerances.\r\n */\nfunction findAndAddAll3Prongs(cpGraphs, cpStart, extreme) {\n    // Don't change this function to be recursive, the call stack may overflow \n    // if there are too many two-prongs.\n    var visitedEdges = new Map();\n    var edgesToCheck = [{ fromCpNode: undefined, cpStart: cpStart }];\n    while (edgesToCheck.length) {\n        var _edgesToCheck$shift = edgesToCheck.shift(),\n            fromCpNode = _edgesToCheck$shift.fromCpNode,\n            _cpStart = _edgesToCheck$shift.cpStart;\n\n        markEdgeAsTaken(visitedEdges, fromCpNode, _cpStart);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = _cpStart.getNodes()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var cpNode = _step.value;\n\n                if (!point_on_shape_1.PointOnShape.isSharpCorner(cpNode.cp.pointOnShape)) {\n                    findAndAdd3Prongs(cpGraphs, cpNode, extreme);\n                }\n                if (hasEdgeBeenTaken(visitedEdges, cpNode, cpNode.next)) {\n                    continue; // We already visited this edge\n                }\n                edgesToCheck.push({ fromCpNode: _cpStart, cpStart: cpNode.next });\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n}\nexports.findAndAddAll3Prongs = findAndAddAll3Prongs;\n/**\r\n * Marks the given edge as already taken.\r\n */\nfunction markEdgeAsTaken(visitedEdges, cp1, cp2) {\n    if (cp1 === undefined) {\n        return;\n    }\n    f(cp1, cp2);\n    f(cp2, cp1);\n    function f(cp1, cp2) {\n        var visited = visitedEdges.get(cp1);\n        if (!visited) {\n            visited = new Set();\n            visitedEdges.set(cp1, visited);\n        }\n        visited.add(cp2);\n    }\n}\nfunction hasEdgeBeenTaken(visitedEdges, cp1, cp2) {\n    var cps = void 0;\n    cps = visitedEdges.get(cp1);\n    var takenForward = cps && cps.has(cp2);\n    cps = visitedEdges.get(cp2);\n    var takenBackwards = cps && cps.has(cp1);\n    return takenForward || takenBackwards;\n}\n/**\r\n * Traverses the shape from the given ContactPoint going around contact circles\r\n * so that only a piece of the shape is traversed and returns the visited\r\n * CpNodes (starting from the given CpNode).\r\n * @param cpStart The ContactPoint from where to start the traversal.\r\n */\nfunction traverseShape(cpStart) {\n    var cpNode = cpStart;\n    if (cpNode === cpNode.next.prevOnCircle) {\n        return [cpNode];\n    }\n    var visitedCps = [];\n    do {\n        visitedCps.push(cpNode);\n        var next = cpNode.next.prevOnCircle;\n        cpNode = cpNode === next ? cpNode = cpNode.next.next // Terminal vertex\n        : cpNode = next; // Take last exit\n    } while (cpNode !== cpStart);\n    return visitedCps;\n}\n/**\r\n * Starting from some ContactPoint, traverses the shape going around Vertices\r\n * and if more than two Vertices have been visited in total then recursively\r\n * adds 3-prongs until only one or two Vertices have been visited.\r\n *\r\n * This process further subdivides the shape.\r\n * @param cpGraphs\r\n * @param cpStart The ContactPoint from where to start the process.\r\n * @param extreme The maximum coordinate value used to calculate floating point\r\n * tolerances.\r\n */\nfunction findAndAdd3Prongs(cpGraphs, cpStart, extreme) {\n    var visitedCps = void 0;\n    do {\n        visitedCps = traverseShape(cpStart);\n        if (visitedCps.length > 2) {\n            findAndAdd3Prong(cpGraphs, visitedCps, extreme);\n        }\n    } while (visitedCps.length > 2);\n    return visitedCps;\n}\n/**\r\n * Finds and add a 3-prong MAT circle to the given shape.\r\n * @param cpGraphs\r\n * @param visitedCps\r\n * @param extreme The maximum coordinate value used to calculate floating point\r\n * tolerances.\r\n */\nfunction findAndAdd3Prong(cpGraphs, visitedCps, extreme) {\n    var δs = [];\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = visitedCps[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var visitedCp = _step2.value;\n\n            δs.push([visitedCp, visitedCp.next]);\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    var threeProng = find_3_prong_1.find3Prong(δs, extreme);\n    var orders = [];\n    for (var i = 0; i < 3; i++) {\n        orders.push(point_on_shape_1.PointOnShape.calcOrder(threeProng.circle, threeProng.ps[i]));\n    }\n    var circle = add_3_prong_1.add3Prong(cpGraphs, orders, threeProng);\n    if (typeof _debug_ !== 'undefined') {\n        add3ProngDebugInfo(circle, visitedCps);\n    }\n}\nfunction add3ProngDebugInfo(circle, visitedCps) {\n    var threeProngs = _debug_.generated.elems.threeProng;\n    var len = threeProngs.length;\n    var data = threeProngs[len - 1];\n    data.visitedCps = visitedCps;\n    data.circle = circle;\n}\n\n},{\"../../point-on-shape\":133,\"../find-mat/add-3-prong\":90,\"./find-3-prong/find-3-prong\":102}],107:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar svg_1 = _dereq_(\"../../svg/svg\");\nvar find_2_prong_1 = _dereq_(\"./find-2-prong/find-2-prong\");\nvar add_2_prong_1 = _dereq_(\"./add-2-prong\");\n/**\r\n * Find and add two-prongs that remove any holes in the shape.\r\n * @param loops\r\n * @param cpTrees\r\n * @param extreme The maximum coordinate value used to calculate floating point\r\n * tolerances.\r\n */\nfunction findAndAddHoleClosing2Prongs(loops, cpTrees, extreme) {\n    var bounds = svg_1.getShapeBounds(loops);\n    var squaredDiagonalLength = Math.pow(bounds.maxX.p[0] - bounds.minX.p[0], 2) + Math.pow(bounds.maxY.p[1] - bounds.minY.p[1], 2);\n    // Find the topmost points on each loop.\n    var minYs = loops.map(svg_1.getMinYPos);\n    for (var k = 1; k < minYs.length; k++) {\n        var posSource = minYs[k];\n        //console.log(posSource.t);\n        //console.log(posSource.p[1]);\n        var holeClosingTwoProng = find_2_prong_1.find2Prong(loops, extreme, squaredDiagonalLength, cpTrees, posSource, true, k);\n        if (!holeClosingTwoProng) {\n            throw 'unable to find hole-closing 2-prong';\n        }\n        if (holeClosingTwoProng) {\n            var circle = holeClosingTwoProng.circle,\n                posAntipode = holeClosingTwoProng.z;\n\n            add_2_prong_1.add2Prong(cpTrees, circle, posSource, posAntipode, true, extreme);\n        }\n    }\n}\nexports.findAndAddHoleClosing2Prongs = findAndAddHoleClosing2Prongs;\n\n},{\"../../svg/svg\":171,\"./add-2-prong\":89,\"./find-2-prong/find-2-prong\":96}],108:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_memoize_1 = _dereq_(\"flo-memoize\");\nvar mat_1 = _dereq_(\"../../mat\");\nvar get_loop_bounds_1 = _dereq_(\"../../svg/fs/get-loop-bounds\");\nvar simplify_paths_1 = _dereq_(\"../../svg/fs/simplify-paths/simplify-paths\");\nvar find_and_add_3_prongs_1 = _dereq_(\"../find-mat/find-and-add-3-prongs\");\nvar create_initial_cp_graph_1 = _dereq_(\"../find-mat/create-initial-cp-graph\");\n;\nvar add_debug_info_1 = _dereq_(\"../find-mat/add-debug-info\");\nvar get_potential_2_prongs_1 = _dereq_(\"../find-mat/get-potential-2-prongs\");\nvar create_get_interesting_points_on_loop_1 = _dereq_(\"./create-get-interesting-points-on-loop\");\nvar get_sharp_corners_1 = _dereq_(\"../find-mat/get-sharp-corners\");\nvar get_extreme_1 = _dereq_(\"../../svg/fs/get-extreme\");\nvar smoothen_1 = _dereq_(\"../smoothen/smoothen\");\nvar find_and_add_2_prongs_on_all_paths_1 = _dereq_(\"./find-and-add-2-prongs-on-all-paths\");\nvar find_and_add_hole_closing_2_prongs_1 = _dereq_(\"./find-and-add-hole-closing-2-prongs\");\nvar memoize = flo_memoize_1.default.m1;\n/**\r\n * Find the MAT from the given Shape.\r\n * @param loops An array of (possibly intersecting) Loops representing one or\r\n * more closed curves (i.e. shapes)\r\n * @param additionalPointCount Additional points per bezier where a MAT circle\r\n * will be added. Defaults to 3.\r\n */\n\nfunction findMats(loops) {\n    var additionalPointCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n\n    if (typeof _debug_ !== 'undefined') {\n        var timing = _debug_.generated.timing;\n        timing.simplify[0] = performance.now();\n    }\n    //let loops_ = loops.map(loop => Loop.perturb(loop, 10))\n\n    var _simplify_paths_1$sim = simplify_paths_1.simplifyPaths(loops),\n        loopss = _simplify_paths_1$sim.loopss,\n        xMap = _simplify_paths_1$sim.xMap;\n\n    if (typeof _debug_ !== 'undefined') {\n        var _timing = _debug_.generated.timing;\n        _timing.simplify[1] += performance.now() - _timing.simplify[0];\n    }\n    var mats = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = loopss[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _loops = _step.value;\n\n            _loops.sort(ascendingByTopmostPoint);\n            //loops = orient(loops);\n            var mat = findPartialMat(_loops, xMap, additionalPointCount);\n            if (mat) {\n                mats.push(mat);\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return mats;\n}\nexports.findMats = findMats;\nfunction findPartialMat(loops, xMap) {\n    var additionalPointCount = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;\n\n    var extreme = get_extreme_1.getExtreme(loops);\n    add_debug_info_1.addDebugInfo1(loops);\n    // Gets interesting points on the shape, i.e. those that makes sense to use \n    // for the 2-prong procedure.\n    var f = create_get_interesting_points_on_loop_1.createGetInterestingPointsOnLoop(additionalPointCount);\n    var pointsPerLoop = loops.map(f);\n    var for2ProngsPerLoop = get_potential_2_prongs_1.getPotential2Prongs(pointsPerLoop);\n    var sharpCornersPerLoop = get_sharp_corners_1.getSharpCorners(pointsPerLoop);\n    var cpTrees = new Map();\n    var cpNode = create_initial_cp_graph_1.createInitialCpGraph(loops, cpTrees, sharpCornersPerLoop, xMap);\n    find_and_add_hole_closing_2_prongs_1.findAndAddHoleClosing2Prongs(loops, cpTrees, extreme);\n    if (typeof _debug_ !== 'undefined') {\n        if (_debug_.directives.stopAfterHoleClosers) {\n            return undefined;\n        }\n    }\n    add_debug_info_1.addDebugInfo2(pointsPerLoop);\n    cpNode = find_and_add_2_prongs_on_all_paths_1.findAndAdd2ProngsOnAllPaths(loops, cpTrees, for2ProngsPerLoop, extreme);\n    if (typeof _debug_ !== 'undefined') {\n        if (_debug_.directives.stopAfterTwoProngs) {\n            return undefined;\n        }\n    }\n    add_debug_info_1.addDebugInfo3();\n    if (cpNode === undefined) {\n        return undefined;\n    }\n    find_and_add_3_prongs_1.findAndAddAll3Prongs(cpTrees, cpNode, extreme);\n    if (typeof _debug_ !== 'undefined') {\n        if (_debug_.directives.stopAfterThreeProngs) {\n            return undefined;\n        }\n    }\n    var mat = new mat_1.Mat(cpNode, cpTrees);\n    smoothen_1.smoothen(mat.cpNode);\n    add_debug_info_1.addDebugInfo4(mat);\n    return mat;\n}\n/**\r\n *\r\n * @param loopA\r\n * @param loopB\r\n */\nfunction ascendingByTopmostPoint(loopA, loopB) {\n    var boundsA = get_loop_bounds_1.getLoopBounds(loopA);\n    var boundsB = get_loop_bounds_1.getLoopBounds(loopB);\n    var a = boundsA.minY.p[1];\n    var b = boundsB.minY.p[1];\n    return a - b;\n}\n\n},{\"../../mat\":85,\"../../svg/fs/get-extreme\":139,\"../../svg/fs/get-loop-bounds\":140,\"../../svg/fs/simplify-paths/simplify-paths\":157,\"../find-mat/add-debug-info\":91,\"../find-mat/create-initial-cp-graph\":93,\"../find-mat/find-and-add-3-prongs\":106,\"../find-mat/get-potential-2-prongs\":109,\"../find-mat/get-sharp-corners\":110,\"../smoothen/smoothen\":125,\"./create-get-interesting-points-on-loop\":92,\"./find-and-add-2-prongs-on-all-paths\":104,\"./find-and-add-hole-closing-2-prongs\":107,\"flo-memoize\":41}],109:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar point_on_shape_1 = _dereq_(\"../../point-on-shape\");\nfunction getPotential2Prongs(possPerLoop) {\n    var for2ProngsArray = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = possPerLoop[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var poss = _step.value;\n\n            var for2Prongs = [];\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = poss[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var pos = _step2.value;\n\n                    if (!point_on_shape_1.PointOnShape.isQuiteSharpCorner(pos)) {\n                        for2Prongs.push(pos);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            for2ProngsArray.push(for2Prongs);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return for2ProngsArray;\n}\nexports.getPotential2Prongs = getPotential2Prongs;\n\n},{\"../../point-on-shape\":133}],110:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar point_on_shape_1 = _dereq_(\"../../point-on-shape\");\nfunction getSharpCorners(possPerLoop) {\n    var sharpCornersPerLoop = [];\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = possPerLoop[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var poss = _step.value;\n\n            var sharpCorners = [];\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = poss[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var pos = _step2.value;\n\n                    if (point_on_shape_1.PointOnShape.isQuiteSharpCorner(pos)) {\n                        sharpCorners.push(pos);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            sharpCornersPerLoop.push(sharpCorners);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return sharpCornersPerLoop;\n}\nexports.getSharpCorners = getSharpCorners;\n\n},{\"../../point-on-shape\":133}],111:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\n/**\r\n *\r\n */\nfunction getClosestSquareDistanceToRect(box, p) {\n    var _box = _slicedToArray(box, 2),\n        _box$ = _slicedToArray(_box[0], 2),\n        x0 = _box$[0],\n        y0 = _box$[1],\n        _box$2 = _slicedToArray(_box[1], 2),\n        x1 = _box$2[0],\n        y1 = _box$2[1];\n\n    var _p = _slicedToArray(p, 2),\n        xp = _p[0],\n        yp = _p[1];\n\n    if (xp < x0) {\n        if (yp < y0) {\n            return flo_vector2d_1.squaredDistanceBetween(box[0], p);\n        } else if (yp > y1) {\n            return flo_vector2d_1.squaredDistanceBetween([x0, y1], p);\n        } else {\n            var d = x0 - xp;\n            return d * d;\n        }\n    } else if (xp > x1) {\n        if (yp < y0) {\n            return flo_vector2d_1.squaredDistanceBetween([x1, y0], p);\n        } else if (yp > y1) {\n            return flo_vector2d_1.squaredDistanceBetween(box[1], p);\n        } else {\n            var _d = xp - x1;\n            return _d * _d;\n        }\n    } else {\n        if (yp < y0) {\n            var _d2 = y0 - yp;\n            return _d2 * _d2;\n        } else if (yp > y1) {\n            var _d3 = yp - y1;\n            return _d3 * _d3;\n        } else {\n            return 0;\n        }\n    }\n}\nexports.getClosestSquareDistanceToRect = getClosestSquareDistanceToRect;\n\n},{\"flo-vector2d\":50}],112:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\n/**\r\n *\r\n */\nfunction getClosestSquaredDistanceToRotatedRect(ps, p) {\n    var ds = [0, 1, 2, 3].map(function (i) {\n        return flo_vector2d_1.squaredDistanceBetweenPointAndLineSegment(p, [ps[i], ps[(i + 1) % 4]]);\n    });\n    var width = flo_vector2d_1.squaredDistanceBetween(ps[0], ps[1]);\n    var height = flo_vector2d_1.squaredDistanceBetween(ps[0], ps[3]);\n    if (ds[0] <= height && ds[2] <= height && ds[1] <= width && ds[3] <= width) {\n        return 0; // Inside rotated rect\n    }\n    return Math.min.apply(Math, _toConsumableArray(ds));\n}\nexports.getClosestSquaredDistanceToRotatedRect = getClosestSquaredDistanceToRotatedRect;\n\n},{\"flo-vector2d\":50}],113:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * Find point where two lines intersect. Returns he point where the two lines\r\n * intersect or undefined if they don't intersect or are the same line.\r\n * @param l1 - A line\r\n * @param l2 - Another line\r\n */\nfunction lineLineIntersection(l1, l2) {\n    var _l = _slicedToArray(l1, 2),\n        _l$ = _slicedToArray(_l[0], 2),\n        p1x = _l$[0],\n        p1y = _l$[1],\n        _l$2 = _slicedToArray(_l[1], 2),\n        p2x = _l$2[0],\n        p2y = _l$2[1];\n\n    var _l2 = _slicedToArray(l2, 2),\n        _l2$ = _slicedToArray(_l2[0], 2),\n        p3x = _l2$[0],\n        p3y = _l2$[1],\n        _l2$2 = _slicedToArray(_l2[1], 2),\n        p4x = _l2$2[0],\n        p4y = _l2$2[1];\n\n    var v1x = p2x - p1x;\n    var v1y = p2y - p1y;\n    var v2x = p4x - p3x;\n    var v2y = p4y - p3y;\n    var cross = v2x * v1y - v2y * v1x;\n    if (cross === 0) {\n        // parallel\n        return undefined;\n    }\n    var b = ((p3y - p1y) * v1x - (p3x - p1x) * v1y) / cross;\n    return [p3x + b * v2x, p3y + b * v2y];\n}\nexports.lineLineIntersection = lineLineIntersection;\n\n},{}],114:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DELTA = 1e-6;\n/**\r\n * Calculates the curvature extrema brackets of the given cubic bezier.\r\n * See the paper at http://ac.els-cdn.com/S037704270000529X/1-s2.0-S037704270000529X-main.pdf?_tid=0b25a2cc-ad35-11e5-a728-00000aacb362&acdnat=1451288083_86359fc83af9dec3232c90a6d2e71031\r\n * Note that naming conventions is roughly as in the paper above.\r\n * @param ps\r\n */\nfunction calcBezierCurvatureExtremaBrackets(ps) {\n    var _ps = _slicedToArray(ps, 4),\n        _ps$ = _slicedToArray(_ps[0], 2),\n        x0 = _ps$[0],\n        y0 = _ps$[1],\n        _ps$2 = _slicedToArray(_ps[1], 2),\n        x1 = _ps$2[0],\n        y1 = _ps$2[1],\n        _ps$3 = _slicedToArray(_ps[2], 2),\n        x2 = _ps$3[0],\n        y2 = _ps$3[1],\n        _ps$4 = _slicedToArray(_ps[3], 2),\n        x3 = _ps$4[0],\n        y3 = _ps$4[1];\n\n    var brackets = [];\n    // Bezier points translated to origin;\n    var P_1x = x1 - x0;\n    var P_1y = y1 - y0;\n    var P_2x = x2 - x0;\n    var P_2y = y2 - y0;\n    var P_3x = x3 - x0;\n    var P_3y = y3 - y0;\n    // Distance to consecutive points\n    var W_0x = P_1x;\n    var W_1x = P_2x - P_1x;\n    var W_2x = P_3x - P_2x;\n    var W_0y = P_1y;\n    var W_1y = P_2y - P_1y;\n    var W_2y = P_3y - P_2y;\n    // Check for degenerate case in which cubic curve becomes quadratic. \n    if (Math.abs(W_0x - 2 * W_1x + W_2x) < DELTA && Math.abs(W_0y - 2 * W_1y + W_2y) < DELTA) {}\n    // TODO - This case is simpler due to being quadratic - still needs to\n    // be implemented!. \n\n    // See http://ac.els-cdn.com/S037704270000529X/1-s2.0-S037704270000529X-main.pdf?_tid=0b25a2cc-ad35-11e5-a728-00000aacb362&acdnat=1451288083_86359fc83af9dec3232c90a6d2e71031\n    // Rotate curve so that W0 - 2W1 + W2 = (0, (1/3)a), a != 0\n    var atan_numer = P_3x - 3 * P_2x + 3 * P_1x;\n    var atan_denom = P_3y - 3 * P_2y + 3 * P_1y;\n    var atan_numer_squared = atan_numer * atan_numer;\n    var atan_denom_squared = atan_denom * atan_denom;\n    var rad = Math.sqrt(atan_numer_squared / atan_denom_squared + 1);\n    var cos_theta = 1 / rad;\n    var sin_theta = void 0;\n    if (cos_theta === 0) {\n        sin_theta = 1;\n    } else {\n        sin_theta = atan_numer / (atan_denom * rad);\n    }\n    // Here we skip expensive trig evaluations\n    var R_1x = P_1x * cos_theta - P_1y * sin_theta;\n    var R_1y = P_1x * sin_theta + P_1y * cos_theta;\n    var R_2x = P_2x * cos_theta - P_2y * sin_theta;\n    var R_2y = P_2x * sin_theta + P_2y * cos_theta;\n    var R_3x = P_3x * cos_theta - P_3y * sin_theta;\n    var R_3y = P_3x * sin_theta + P_3y * cos_theta;\n    // Modify W_0x, etc. to be correct for new rotated curve \n    W_0x = R_1x;\n    W_1x = R_2x - R_1x;\n    W_2x = R_3x - R_2x;\n    W_0y = R_1y;\n    W_1y = R_2y - R_1y;\n    W_2y = R_3y - R_2y;\n    var a = 3 * (W_0y - 2 * W_1y + W_2y);\n    var dif = R_2x - 2 * R_1x; // which = W_1x - W_0x;\n    if (dif === 0) {\n        // Case 1 (special) - W_1x - W_0x === 0\n        // Degenerate to cubic function\t\n        if (W_0x !== 0) {\n            // TODO - finish!\n            // TODO - we also still need to check for degenerate cubic (see \n            // beginning of paper)\n        } else {\n            // We have a straight line x=0!\n            return [];\n        }\n    } else {\n        // Case 2 (usual) - W_1x - W_0x !== 0\n        if (dif < 0) {\n            // Reflect curve accross y-axis to make dif > 0\n            R_1x = -R_1x;\n            R_2x = -R_2x;\n            R_3x = -R_3x;\n            // Modify W_0x, etc. to be correct for new reflected \n            W_0x = -W_0x;\n            W_1x = -W_1x;\n            W_2x = -W_2x;\n            dif = -dif;\n        }\n        // From the paper:\n        // ---------------\n        // All curves has exactly one of 4 cases:\n        //\n        // 1. It has a single inflection point and exactly 2 curvature maxima \n        //    (symmetrically positioned about inflection point). This is the \n        //    case if dif === 0 in above code.\n        // 2. TODO - It has a single cusp - ignored for now!\n        // 3. It has a point of self-intersection - occurs if d < 0 in paper.\n        // 4. It has 2 inflection points, no cusps, no self-intersections.\n        //    It can have either 3 or 5 curvature extrema\n        //    a. The case of 5 curvature extrema is ignored for now - in the \n        //       paper it is mentioned to even find such a curve is difficult \n        //       and it seems such curves have very sharp curvature at one point \n        //       which does not usually occur in an SVG shape. But this case \n        //       should later be included or we'll miss some points.\n        //    b. There are 3 curvature extrema:\n        //       Extrema occur in the range (-inf, -sqrt(d)), \n        //       (-sqrt(d), sqrt(d)), (sqrt(d), inf). \n        //       Since we dont know how to select -inf and inf we will just \n        //       choose them to be -10 and 11 (remember bezier runs from t=0 to \n        //       t=1). If Brent's method runs out of the (0,1) interval we stop \n        //       and use 0 or 1 as the extremum? Remember extrema can also occur \n        //       at t=0 and t=1!\n        //\n        // TODO - At the moment we only test for case 1 and 4b, but in future \n        // we must test and eliminate the other cases.\n        var μ = 6 * dif;\n        var λ = 3 * a * W_0x / (μ * μ);\n        var γ1 = 3 * a * W_0y / (μ * μ);\n        var γ2 = 3 * (W_1y - W_0y) / μ;\n        var d = λ * λ - 2 * γ2 * λ + γ1;\n        var b = 2 * (γ2 - λ);\n        var deParamBoundary = deParameterizeBoundary(λ, μ, a);\n        if (d > 0) {\n            var ssigd_ = Math.sqrt(d);\n            // de-reparametize\n            // Note: the sda and sdb here are the inflection points forcase iv! \n            // there are easier ways to calculate these\n            var sda = -ssigd_;\n            var sdb = ssigd_;\n            brackets = [[Number.NEGATIVE_INFINITY, sda], [sda, sdb], [sdb, Number.POSITIVE_INFINITY]].map(deParamBoundary).map(clipBoundary);\n        } else if (d < 0) {\n            // It is a loop \n            // Note: The loop intersection may be outside t=[0,1] but curvature \n            // maxima may still occur inside t=[0,1] of course.\n            // There can be 1 or 3 maxima of curvature.\n            var ξ1_ = 2 * b * b - 8 * d - 3;\n            if (ξ1_ < 0) {\n                brackets = [[0, Math.sqrt(-3 * d)]].map(deParamBoundary).map(clipBoundary);\n            } else {\n                var ξ2_ = Math.sqrt(5 * ξ1_);\n                var ξ1 = (-5 * b - ξ2_) / 10;\n                var ξ2 = (-5 * b + ξ2_) / 10;\n                brackets = [[Number.NEGATIVE_INFINITY, ξ1], [ξ1, Math.min(0, ξ2)], [Math.max(0, ξ2), Math.sqrt(-3 * d)]].map(deParamBoundary).map(clipBoundary);\n            }\n        } else if (d === 0) {\n            // TODO - It is a cusp - still to implement!\n        }\n    }\n    return brackets;\n}\nexports.calcBezierCurvatureExtremaBrackets = calcBezierCurvatureExtremaBrackets;\n/**\r\n * Clips to [0,1] or returns undefined if not within [0,1].\r\n * @param range\r\n */\nfunction clipBoundary(range) {\n    var _range = _slicedToArray(range, 2),\n        a = _range[0],\n        b = _range[1];\n\n    if (a < 0 && b < 0 || a > 1 && b > 1) {\n        return undefined;\n    }\n    if (a < 0) {\n        a = 0;\n    }\n    if (a > 1) {\n        a = 1;\n    }\n    if (b < 0) {\n        b = 0;\n    }\n    if (b > 1) {\n        b = 1;\n    }\n    return [a, b];\n}\n/**\r\n *\r\n * @param λ\r\n * @param μ\r\n * @param a\r\n */\nfunction deParameterize(λ, μ, a) {\n    return function (σ) {\n        return (σ - λ) * (μ / a);\n    };\n}\n/**\r\n *\r\n * @param λ\r\n * @param μ\r\n * @param a\r\n */\nfunction deParameterizeBoundary(λ, μ, a) {\n    return function (boundary) {\n        return boundary.map(deParameterize(λ, μ, a));\n    };\n}\n;\n\n},{}],115:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar point_on_shape_1 = _dereq_(\"../point-on-shape\");\nvar get_bezier_curvature_extrema_brackets_1 = _dereq_(\"./get-bezier-curvature-extrema-brackets\");\n/**\r\n * Finds the osculating circles and inflection points for the given bezier.\r\n * @param curve\r\n */\nfunction getBezierCurvatureExtrema(curve) {\n    var maxCurvaturePoss = [];\n    var maxNegativeCurvaturePoss = [];\n    var ps = curve.ps;\n    var brackets = get_bezier_curvature_extrema_brackets_1.calcBezierCurvatureExtremaBrackets(ps);\n    var κPs = flo_bezier3_1.κ(ps); // The curvature function\n    var lenb = brackets.length;\n    for (var k = 0; k < lenb; k++) {\n        var bracket = brackets[k];\n        if (!bracket) {\n            continue;\n        }\n        var root = lookForRoot(ps, bracket);\n        if (!root) {\n            continue;\n        }\n        var κ_ = -κPs(root);\n        // Check if local extrema is a maximum or minimum.\n        var κAtMinsd = -κPs(bracket[0]);\n        var κAtMaxsd = -κPs(bracket[1]);\n        if (κ_ > κAtMinsd && κ_ > κAtMaxsd) {\n            // maximum\n            if (κ_ > 0) {\n                maxCurvaturePoss.push(new point_on_shape_1.PointOnShape(curve, root));\n            }\n            //_debug_.fs.draw.crossHair((new PointOnShape(curve, root).p), 'blue thin2 nofill')\n        } else if (κ_ <= κAtMinsd && κ_ <= κAtMaxsd) {\n            // minimum\n            if (κ_ < 0) {\n                maxNegativeCurvaturePoss.push(new point_on_shape_1.PointOnShape(curve, root));\n                //_debug_.fs.draw.crossHair((new PointOnShape(curve, root).p), 'red thin2 nofill')\n            }\n        }\n    }\n    return { maxCurvaturePoss: maxCurvaturePoss, maxNegativeCurvaturePoss: maxNegativeCurvaturePoss };\n}\nexports.getBezierCurvatureExtrema = getBezierCurvatureExtrema;\nfunction lookForRoot(ps, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        minsd = _ref2[0],\n        maxsd = _ref2[1];\n\n    // At this point there can be exactly 0 or 1 roots within \n    // [minsd, maxsd]\n    var dκMod_ = flo_bezier3_1.dκMod(ps);\n    var c0 = dκMod_(minsd);\n    var c1 = dκMod_(maxsd);\n    if (c0 * c1 >= 0) {\n        return;\n    }\n    // There is exactly one root in the interval.\n    var root = flo_poly_1.default.brent(dκMod_, minsd, maxsd);\n    return root;\n}\n\n},{\"../point-on-shape\":133,\"./get-bezier-curvature-extrema-brackets\":114,\"flo-bezier3\":3,\"flo-poly\":42}],116:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bezier_piece_1 = _dereq_(\"../bezier-piece\");\nvar point_on_shape_1 = _dereq_(\"../point-on-shape\");\nvar contact_point_1 = _dereq_(\"../contact-point\");\n/**\r\n* Returns the ordered cubic bezier pieces (i.e a bezier with a t range)\r\n* from the given boundary piece.\r\n* @param cpNode - An ordered pair that represents the start and end points of\r\n* the boundary piece\r\n*/\nfunction getBoundaryPieceBeziers(cpNode) {\n    var cpThis = cpNode[0];\n    var cpEnd = cpNode[1];\n    var bezierPieces = [];\n    // As opposed to going around the circle and taking the last exit\n    var goStraight = true;\n    do {\n        if (!goStraight) {\n            goStraight = true;\n            cpThis = cpThis.prevOnCircle; // take last exit\n            continue;\n        }\n        goStraight = false;\n        var posThis = cpThis.cp.pointOnShape;\n        var posNext = cpThis.next.cp.pointOnShape;\n        if (posNext.curve === posThis.curve && point_on_shape_1.PointOnShape.isQuiteSharpCorner(posThis) && point_on_shape_1.PointOnShape.isQuiteSharpCorner(posNext)) {\n            // Do nothing\n        } else if (posNext.curve === posThis.curve && contact_point_1.ContactPoint.compare(cpThis.next.cp, cpThis.cp) > 0) {\n            bezierPieces.push(new bezier_piece_1.BezierPiece(posThis.curve, [posThis.t, posNext.t]));\n        } else {\n            bezierPieces.push(new bezier_piece_1.BezierPiece(posThis.curve, [posThis.t, 1]));\n            addSkippedBeziers(bezierPieces, posThis.curve, posNext.curve, posNext.t);\n        }\n        cpThis = cpThis.next;\n    } while (cpThis !== cpEnd);\n    return bezierPieces;\n}\nexports.getBoundaryPieceBeziers = getBoundaryPieceBeziers;\n/**\r\n * Adds pieces of skipped beziers\r\n */\nfunction addSkippedBeziers(bezierPieces, curveStart, curveEnd, t1) {\n    var curveThis = curveStart;\n    do {\n        curveThis = curveThis.next;\n        var tEnd = curveThis === curveEnd ? t1 : 1;\n        bezierPieces.push(new bezier_piece_1.BezierPiece(curveThis, [0, tEnd]));\n    } while (curveThis !== curveEnd);\n}\n\n},{\"../bezier-piece\":51,\"../contact-point\":54,\"../point-on-shape\":133}],117:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar point_on_shape_1 = _dereq_(\"../point-on-shape\");\nvar get_closest_squared_distance_to_rotated_rect_1 = _dereq_(\"./geometry/get-closest-squared-distance-to-rotated-rect\");\nvar get_closest_square_distance_to_rect_1 = _dereq_(\"./geometry/get-closest-square-distance-to-rect\");\n/**\r\n * Returns the closest boundary point to the given point, limited to the given\r\n * bezier pieces, including the beziers actually checked after culling.\r\n * @param bezierPieces\r\n * @param point\r\n * @param touchedCurve\r\n * @param t\r\n * @param extreme\r\n */\nfunction getClosestBoundaryPoint(bezierPieces, point, touchedCurve, t) {\n    bezierPieces = cullBezierPieces(bezierPieces, point);\n    var bestDistance = Number.POSITIVE_INFINITY;\n    var pos = void 0;\n    for (var i = 0; i < bezierPieces.length; i++) {\n        var bezierPiece = bezierPieces[i];\n        var p = closestPointOnBezier(bezierPiece.curve, point, bezierPiece.ts, touchedCurve, t);\n        if (p === undefined) {\n            continue;\n        }\n        var d = flo_vector2d_1.distanceBetween(p.p, point);\n        var curve = bezierPiece.curve;\n        var t_ = p.t;\n        if (d < bestDistance) {\n            if (t_ === 0) {\n                t_ = 1;\n                curve = bezierPiece.curve.prev;\n            }\n            pos = new point_on_shape_1.PointOnShape(curve, t_);\n            bestDistance = d;\n        }\n    }\n    return pos;\n}\nexports.getClosestBoundaryPoint = getClosestBoundaryPoint;\n/**\r\n *\r\n * @param bezierPieces\r\n * @param p\r\n * @param extreme\r\n */\nfunction cullBezierPieces(bezierPieces, p) {\n    var CULL_THRESHOLD = 0;\n    if (bezierPieces.length > CULL_THRESHOLD) {\n        var bestSquaredDistance = getBestDistanceSquared(bezierPieces, p);\n        bezierPieces = cullByLooseBoundingBox(bezierPieces, p, bestSquaredDistance);\n        bezierPieces = cullByTightBoundingBox(bezierPieces, p, bestSquaredDistance);\n    }\n    return bezierPieces;\n}\n/**\r\n * Finds an initial distance such that the closest point can not be further than\r\n * this distance away.\r\n */\nfunction getBestDistanceSquared(bezierPieces, p) {\n    var bestSquaredDistance = Number.POSITIVE_INFINITY;\n    for (var i = 0; i < bezierPieces.length; i++) {\n        var bezierPiece = bezierPieces[i];\n        var ps = bezierPiece.curve.ps;\n        var evPs = flo_bezier3_1.evaluate(ps);\n        var p1 = evPs(bezierPiece.ts[0]);\n        var p2 = evPs(bezierPiece.ts[1]);\n        var d = Math.min(flo_vector2d_1.squaredDistanceBetween(p, p1), flo_vector2d_1.squaredDistanceBetween(p, p2));\n        if (d < bestSquaredDistance) {\n            bestSquaredDistance = d;\n        }\n    }\n    // The extra multiplier is to account for floating point precision.\n    return bestSquaredDistance * 1.01;\n}\n/**\r\n * When checking distances, ignore all those with closest possible distance\r\n * further than 'bestSquaredDistance', i.e. cull them.\r\n * @param bezierPieces\r\n * @param p\r\n * @param dSquared\r\n */\nfunction cullByLooseBoundingBox(bezierPieces, p, dSquared) {\n    var candidateBezierPieces = [];\n    for (var i = 0; i < bezierPieces.length; i++) {\n        var bezierPiece = bezierPieces[i];\n        var ps = bezierPiece.curve.ps;\n        var boundingBox = flo_bezier3_1.getBoundingBox(ps);\n        var d = get_closest_square_distance_to_rect_1.getClosestSquareDistanceToRect(boundingBox, p);\n        if (d <= dSquared) {\n            candidateBezierPieces.push(bezierPiece);\n        }\n    }\n    return candidateBezierPieces;\n}\n/**\r\n * When checking distances, ignore all those with closest possible distance\r\n * further than 'bestSquaredDistance', i.e. cull them.\r\n * @param bezierPieces\r\n * @param p\r\n * @param bestSquaredDistance\r\n */\nfunction cullByTightBoundingBox(bezierPieces, p, bestSquaredDistance) {\n    var candidateBezierPieces = [];\n    for (var i = 0; i < bezierPieces.length; i++) {\n        var bezierPiece = bezierPieces[i];\n        var ps = bezierPiece.curve.ps;\n        var tightBoundingBox = flo_bezier3_1.getBoundingBoxTight(ps);\n        var d = get_closest_squared_distance_to_rotated_rect_1.getClosestSquaredDistanceToRotatedRect(tightBoundingBox, p);\n        if (d <= bestSquaredDistance) {\n            candidateBezierPieces.push(bezierPiece);\n        }\n    }\n    return candidateBezierPieces;\n}\n/**\r\n *\r\n * @param curve The bezier\r\n * @param p The point from which to check\r\n * @param tRange The allowed t range\r\n * @param touchedCurve The bezier on which p is located\r\n * @param t The t value of the bezier that locates p\r\n */\nfunction closestPointOnBezier(curve, p) {\n    var tRange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 1];\n    var touchedCurve = arguments[3];\n    var t = arguments[4];\n\n    // TODO The site at http://jazzros.blogspot.ca/2011/03/projecting-point-on-bezier-curve.html\n    // may hint at requiring much fewer assignments?\n    var _curve$ps = _slicedToArray(curve.ps, 4),\n        _curve$ps$ = _slicedToArray(_curve$ps[0], 2),\n        x0 = _curve$ps$[0],\n        y0 = _curve$ps$[1],\n        _curve$ps$2 = _slicedToArray(_curve$ps[1], 2),\n        x1 = _curve$ps$2[0],\n        y1 = _curve$ps$2[1],\n        _curve$ps$3 = _slicedToArray(_curve$ps[2], 2),\n        x2 = _curve$ps$3[0],\n        y2 = _curve$ps$3[1],\n        _curve$ps$4 = _slicedToArray(_curve$ps[3], 2),\n        x3 = _curve$ps$4[0],\n        y3 = _curve$ps$4[1];\n\n    var _p = _slicedToArray(p, 2),\n        xp = _p[0],\n        yp = _p[1];\n\n    var xx0 = x0 - xp;\n    var xx1 = x1 - xp;\n    var xx2 = x2 - xp;\n    var xx3 = x3 - xp;\n    var yy0 = y0 - yp;\n    var yy1 = y1 - yp;\n    var yy2 = y2 - yp;\n    var yy3 = y3 - yp;\n    var x00 = xx0 * xx0;\n    var x01 = 6 * xx0 * xx1;\n    var x02 = 6 * xx0 * xx2;\n    var x03 = 2 * xx0 * xx3;\n    var x11 = 9 * xx1 * xx1;\n    var x12 = 18 * xx1 * xx2;\n    var x13 = 6 * xx1 * xx3;\n    var x22 = 9 * xx2 * xx2;\n    var x23 = 6 * xx2 * xx3;\n    var x33 = xx3 * xx3;\n    var y00 = yy0 * yy0;\n    var y01 = 6 * yy0 * yy1;\n    var y02 = 6 * yy0 * yy2;\n    var y03 = 2 * yy0 * yy3;\n    var y11 = 9 * yy1 * yy1;\n    var y12 = 18 * yy1 * yy2;\n    var y13 = 6 * yy1 * yy3;\n    var y22 = 9 * yy2 * yy2;\n    var y23 = 6 * yy2 * yy3;\n    var y33 = yy3 * yy3;\n    var t5 = 6 * (x33 - x23 + x13 - x03 + x22 - x12 + x02 + x11 - x01 + x00 + (y33 - y23 + y13 - y03 + y22 - y12 + y02 + y11 - y01 + y00));\n    var t4 = 5 * (x23 - 2 * x13 + 3 * x03 - 2 * x22 + 3 * x12 - 4 * x02 - 4 * x11 + 5 * x01 - 6 * x00 + (y23 - 2 * y13 + 3 * y03 - 2 * y22 + 3 * y12 - 4 * y02 - 4 * y11 + 5 * y01 - 6 * y00));\n    var t3 = 4 * (x13 - 3 * x03 + x22 - 3 * x12 + 6 * x02 + 6 * x11 - 10 * x01 + 15 * x00 + (y13 - 3 * y03 + y22 - 3 * y12 + 6 * y02 + 6 * y11 - 10 * y01 + 15 * y00));\n    var t2 = 3 * (x03 + x12 - 4 * x02 - 4 * x11 + 10 * x01 - 20 * x00 + (y03 + y12 - 4 * y02 - 4 * y11 + 10 * y01 - 20 * y00));\n    var t1 = 2 * (x02 + x11 - 5 * x01 + 15 * x00 + (y02 + y11 - 5 * y01 + 15 * y00));\n    var t0 = x01 - 6 * x00 + (y01 - 6 * y00);\n    var poly = [t5, t4, t3, t2, t1, t0];\n    if (curve === touchedCurve) {\n        poly = flo_poly_1.default.deflate(poly, t);\n    }\n    var roots = flo_poly_1.default.allRoots(poly, tRange[0], tRange[1]);\n    // Also test the endpoints\n    var push0 = true;\n    var push1 = true;\n    if (t === 1 && curve === touchedCurve.next || curve === touchedCurve && t === 0) {\n        push0 = false;\n    }\n    if (t === 0 && curve === touchedCurve.prev || curve === touchedCurve && t === 1) {\n        push1 = false;\n    }\n    if (tRange[0] === 0) {\n        if (push0) {\n            roots.push(tRange[0]);\n        }\n    } else if (tRange[0] === 1) {\n        if (push1) {\n            roots.push(tRange[0]);\n        }\n    } else {\n        roots.push(tRange[0]);\n    }\n    if (tRange[1] === 0) {\n        if (push0) {\n            roots.push(tRange[1]);\n        }\n    } else if (tRange[1] === 1) {\n        if (push1) {\n            roots.push(tRange[1]);\n        }\n    } else {\n        roots.push(tRange[1]);\n    }\n    var ev = flo_bezier3_1.evaluate(curve.ps);\n    var ps = roots.map(function (root) {\n        return { p: ev(root), t: root };\n    });\n    return flo_vector2d_1.getObjClosestTo(p, ps, function (p) {\n        return p.p;\n    });\n}\nexports.closestPointOnBezier = closestPointOnBezier;\n\n},{\"../point-on-shape\":133,\"./geometry/get-closest-square-distance-to-rect\":111,\"./geometry/get-closest-squared-distance-to-rotated-rect\":112,\"flo-bezier3\":3,\"flo-poly\":42,\"flo-vector2d\":50}],118:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar curve_1 = _dereq_(\"../curve\");\nvar point_on_shape_1 = _dereq_(\"../point-on-shape\");\nfunction getContactCirclesAtInterface(curve) {\n    var _curve_1$Curve$getCor = curve_1.Curve.getCornerAtEnd(curve),\n        isQuiteSharp = _curve_1$Curve$getCor.isQuiteSharp,\n        isDull = _curve_1$Curve$getCor.isDull,\n        isQuiteDull = _curve_1$Curve$getCor.isQuiteDull;\n\n    if (isQuiteSharp) {\n        return [new point_on_shape_1.PointOnShape(curve, 1)];\n    } else if (isQuiteDull) {\n        return [new point_on_shape_1.PointOnShape(curve, 1), new point_on_shape_1.PointOnShape(curve.next, 0)];\n    } else if (isDull) {}\n    return [];\n}\nexports.getContactCirclesAtInterface = getContactCirclesAtInterface;\n\n},{\"../curve\":56,\"../point-on-shape\":133}],119:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getLargestVertex(cpNodes) {\n    return cpNodes.reduce(function (maxCpNode, cpNode) {\n        return maxCpNode.cp.circle.radius >= cpNode.cp.circle.radius ? maxCpNode : cpNode;\n    }, cpNodes[0]);\n}\nexports.getLargestVertex = getLargestVertex;\n\n},{}],120:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar traverse_edges_1 = _dereq_(\"./traverse-edges\");\nfunction getLeaves(cpNode) {\n    var leaves = [];\n    traverse_edges_1.traverseEdges(cpNode, f, true);\n    function f(cp, isLeaf) {\n        if (isLeaf) {\n            leaves.push(cp);\n        }\n    }\n    return leaves;\n}\nexports.getLeaves = getLeaves;\n\n},{\"./traverse-edges\":130}],121:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cp_node_1 = _dereq_(\"../cp-node\");\nvar contact_point_1 = _dereq_(\"../contact-point\");\n/**\r\n * Returns the boundary piece that starts at the immediate previous point on the\r\n * shape and ends at the immediate next point.\r\n * @param cpTree\r\n * @param pos\r\n * @param order\r\n * @param order2\r\n */\nfunction getNeighbouringPoints(cpTree, pos, order, order2) {\n    var cps = cpTree.findBounds(new cp_node_1.CpNode(new contact_point_1.ContactPoint(pos, undefined, order, order2), false, false));\n    if (!cps[0] && !cps[1]) {\n        // The tree is still empty\n        return [undefined, undefined];\n    }\n    if (!cps[0] || !cps[1]) {\n        // Smaller than all -> cptree.min() === cps[1].data OR\n        // Larger  than all -> cptree.max() === cps[0].data\n        return [cpTree.max(cpTree.root), cpTree.min(cpTree.root)];\n    }\n    return [cps[0].data, cps[1].data];\n}\nexports.getNeighbouringPoints = getNeighbouringPoints;\n\n},{\"../contact-point\":54,\"../cp-node\":55}],122:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getTwoProngType(e) {\n    if (e.failed) {\n        return 'twoProng_failed';\n    }\n    if (e.notAdded) {\n        return 'twoProng_notAdded';\n    }\n    if (e.deleted) {\n        return 'twoProng_deleted';\n    }\n    if (e.holeClosing) {\n        return 'twoProng_holeClosing';\n    }\n    return 'twoProng_regular';\n}\nexports.getTwoProngType = getTwoProngType;\n\n},{}],123:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar get_neighboring_cps_1 = _dereq_(\"./get-neighboring-cps\");\n//const ANGLE_THRESHOLD = Math.cos(3 * (Math.PI / 180)); // 3 degrees\nvar ANGLE_THRESHOLD = 0.9986295347545738; // === Math.cos(3  degrees)\n//const ANGLE_THRESHOLD = 0.9848077530122080; // === Math.cos(10 degrees)\n//const ANGLE_THRESHOLD = 0.9998476951563913; // === Math.cos(1 degrees)\n//const ANGLE_THRESHOLD = 0.9999984769132877; // === Math.cos(0.1 degrees)   \n//const ANGLE_THRESHOLD = 0.9999999847691291  // === Math.cos(0.01 degrees)   \n/**\r\n * Returns true if another CpNode is close to the given implied (via pos, order\r\n * and order2) CpNode.\r\n * @param cpTrees\r\n * @param pos\r\n * @param circle\r\n * @param order\r\n * @param order2\r\n * @param extreme The maximum coordinate value used to calculate floating point\r\n * tolerances.\r\n * @param color Used for debugging only\r\n */\nfunction isAnotherCpCloseby(cpTrees, pos, circle, order, order2, extreme, color) {\n    var DISTANCE_THRESHOLD = extreme * 1e-4;\n    //const DISTANCE_THRESHOLD = extreme * 1e-3; \n    //const DISTANCE_THRESHOLD = extreme * 1e-1; \n    var cpTree = cpTrees.get(pos.curve.loop);\n    var cpNodes = get_neighboring_cps_1.getNeighbouringPoints(cpTree, pos, order, order2);\n    if (!cpNodes[0]) {\n        return false;\n    }\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = cpNodes[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var cpNode = _step.value;\n\n            var pos2 = cpNode.cp.pointOnShape;\n            var p1 = pos.p;\n            var p2 = pos2.p;\n            if (flo_vector2d_1.distanceBetween(p1, p2) > DISTANCE_THRESHOLD) {\n                continue;\n            }\n            var v1 = flo_vector2d_1.toUnitVector(flo_vector2d_1.fromTo(cpNode.cp.pointOnShape.p, cpNode.cp.circle.center));\n            var v2 = flo_vector2d_1.toUnitVector(flo_vector2d_1.fromTo(p1, circle.center));\n            var cosTheta = flo_vector2d_1.dot(v1, v2);\n            if (cosTheta > ANGLE_THRESHOLD) {\n                //console.log(`%c${cosTheta}`, `color: ${color}`);\n                return true;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return false;\n}\nexports.isAnotherCpCloseby = isAnotherCpCloseby;\n\n},{\"./get-neighboring-cps\":121,\"flo-vector2d\":50}],124:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar point_on_shape_1 = _dereq_(\"../../point-on-shape\");\n/**\r\n * Returns a line segment of unit length starting in the given Vertex center and\r\n * pointing in the direction of the medial axis (viewed as a rooted tree).\r\n * @param cpNode\r\n */\nfunction getEdgeDirection(cpNode) {\n    var circleCenter = cpNode.cp.circle.center;\n    var cp1 = cpNode;\n    var cp2 = cpNode.nextOnCircle;\n    var pos1 = cp1.cp.pointOnShape;\n    var pos2 = cp2.cp.pointOnShape;\n    var p1 = pos1.p;\n    var p2 = pos2.p;\n    var vDir = void 0;\n    if (!point_on_shape_1.PointOnShape.isSharpCorner(pos1)) {\n        if (p1[0] === p2[0] && p1[1] === p2[1]) {\n            vDir = flo_vector2d_1.fromTo(p1, circleCenter); // A 1-prong\n        } else {\n            vDir = flo_vector2d_1.rotate90Degrees(flo_vector2d_1.fromTo(p1, p2)); // not a 1-prong.\n        }\n    } else {\n        var curve1 = void 0;\n        var curve2 = void 0;\n        // TODO - test if pos1.t can ever be 0 - it is terminating\n        if (pos1.t === 0) {\n            curve1 = pos1.curve;\n            curve2 = pos1.curve.prev;\n        } else if (pos1.t === 1) {\n            curve1 = pos1.curve.next;\n            curve2 = pos1.curve;\n        }\n        var tan1 = flo_bezier3_1.tangent(curve1.ps)(0);\n        var tan2 = flo_vector2d_1.reverse(flo_bezier3_1.tangent(curve2.ps)(1));\n        var x = flo_vector2d_1.dot(tan1, tan2);\n        // Recall the identities sin(acos(x)) = sqrt(1-x^2), etc. Also \n        // recall the half angle formulas. Then the rotation matrix, R, can \n        // be calculated.\n        var cosθ = Math.sqrt((1 + x) / 2);\n        var sinθ = Math.sqrt((1 - x) / 2);\n        vDir = flo_vector2d_1.rotate(sinθ, cosθ, tan2);\n    }\n    var v = flo_vector2d_1.translate(flo_vector2d_1.toUnitVector(vDir), circleCenter);\n    return [circleCenter, v];\n}\nexports.getEdgeDirection = getEdgeDirection;\n\n},{\"../../point-on-shape\":133,\"flo-bezier3\":3,\"flo-vector2d\":50}],125:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar line_line_intersection_1 = _dereq_(\"../geometry/line-line-intersection\");\nvar traverse_edges_1 = _dereq_(\"../traverse-edges\");\nvar get_edge_direction_1 = _dereq_(\"./get-edge-direction\");\nvar TOLERANCE_ADD_2PRONG = 0.01;\nvar TOLERANCE_USE_LINE = 0.0001; // else cubic\n/**\r\n * Smoothens the given MAT by fitting consecutive mat lines with either lines or\r\n * quadratic or cubic beziers.\r\n */\nfunction smoothen(cpNode) {\n    traverse_edges_1.traverseEdges(cpNode, f);\n    function f(cpNode) {\n        var fromCc = cpNode.cp.circle.center;\n        var fromL = get_edge_direction_1.getEdgeDirection(cpNode);\n        var toCc = cpNode.next.cp.circle.center;\n        var toL = get_edge_direction_1.getEdgeDirection(cpNode.next.prevOnCircle);\n        var mid = line_line_intersection_1.lineLineIntersection(fromL, toL);\n        var c = flo_vector2d_1.fromTo(fromCc, toCc);\n        var twisted = void 0;\n        if (!mid) {\n            twisted = true;\n        } else {\n            var a = flo_vector2d_1.fromTo(fromCc, mid);\n            var b = flo_vector2d_1.fromTo(toCc, mid);\n            twisted = flo_vector2d_1.dot(a, c) < 0 || flo_vector2d_1.dot(b, c) > 0;\n        }\n        if (!twisted) {\n            cpNode.matCurve = [fromCc, mid, toCc];\n            cpNode.next.prevOnCircle.matCurve = [toCc, mid, fromCc];\n            return;\n        }\n        var r = flo_vector2d_1.rotate90Degrees(c);\n        var w1 = flo_vector2d_1.fromTo(fromL[0], fromL[1]); // This is a unit vector\n        var w2 = flo_vector2d_1.fromTo(toL[0], toL[1]); // This is a unit vector\n        var d1 = Math.abs(flo_vector2d_1.cross(c, w1)) / (3 * 3);\n        var d2 = Math.abs(flo_vector2d_1.cross(c, w2)) / (3 * 3);\n        if (d1 > TOLERANCE_ADD_2PRONG || d2 > TOLERANCE_ADD_2PRONG) {\n            // TODO - not within tolerance - must add additional 2-prong\n            cpNode.matCurve = [fromCc, toCc];\n            cpNode.next.prevOnCircle.matCurve = [toCc, fromCc];\n            return;\n        }\n        if (d1 > TOLERANCE_USE_LINE || d2 > TOLERANCE_USE_LINE) {\n            // approximate with cubic bezier\n            var m1 = flo_vector2d_1.interpolate(fromCc, toCc, 1 / 3);\n            var m2 = flo_vector2d_1.interpolate(fromCc, toCc, 2 / 3);\n            var v1 = flo_vector2d_1.translate(r, m1);\n            var v2 = flo_vector2d_1.translate(r, m2);\n            var l1 = [m1, v1];\n            var l2 = [m2, v2];\n            var mid1 = line_line_intersection_1.lineLineIntersection(fromL, l1);\n            var mid2 = line_line_intersection_1.lineLineIntersection(toL, l2);\n            cpNode.matCurve = [fromCc, mid1, mid2, toCc];\n            cpNode.next.prevOnCircle.matCurve = [toCc, mid2, mid1, fromCc];\n            return;\n        }\n        // Within tolerance - approximate with a straight line.\n        cpNode.matCurve = [fromCc, toCc];\n        cpNode.next.prevOnCircle.matCurve = [toCc, fromCc];\n    }\n}\nexports.smoothen = smoothen;\n\n},{\"../geometry/line-line-intersection\":113,\"../traverse-edges\":130,\"./get-edge-direction\":124,\"flo-vector2d\":50}],126:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction addDebugInfo(sat) {\n    if (typeof _debug_ === 'undefined') {\n        return;\n    }\n    var generated = _debug_.generated;\n    generated.elems.sat.push(sat);\n    var timing = generated.timing;\n    timing.sats[1] += performance.now() - timing.sats[0];\n}\nexports.addDebugInfo = addDebugInfo;\n\n},{}],127:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_leaves_1 = _dereq_(\"../get-leaves\");\n/**\r\n * Cull all edges not part of a cycle in the MAT planar graph.\r\n * @param cpStart The start CpNode which must reprsesent the maximal 3-prong\r\n * vertex.\r\n */\nfunction cullNonCycles(cpStart) {\n    var cpNodeKept = cpStart;\n    var leaves = get_leaves_1.getLeaves(cpStart);\n    while (leaves.length) {\n        var leaf = leaves.pop();\n        // Preserve topology - keep cycles.\n        if (leaf.isHoleClosing || leaf.isIntersection) {\n            continue;\n        }\n        var cpNode = leaf.next; // Turn around\n        while (true) {\n            cpNode = cpNode.next;\n            var cut = false;\n            var cp1 = cpNode.prevOnCircle;\n            if (cpNode.isThreeProng()) {\n                var cp2 = cp1.prevOnCircle;\n                if (cpStart === cpNode || cpStart === cp1 || cpStart === cp2) {\n                    cut = true; // We are at the max disk - cut whole edge\n                } else if (cpNode.next === cp2) {\n                    cpNode = cp2;\n                } else if (cp2.next !== cp1) {\n                    cut = true; // Cut whole edge\n                }\n            } else if (cpNode.isTerminating() && !cpNode.isIntersection) {\n                cpNodeKept = cpNode;\n                return undefined;\n            }\n            if (cut) {\n                cp1.next = cpNode;\n                cpNode.prev = cp1;\n                cpNodeKept = cpNode;\n                break;\n            }\n        }\n    }\n    return cpNodeKept;\n}\nexports.cullNonCycles = cullNonCycles;\n\n},{\"../get-leaves\":120}],128:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_leaves_1 = _dereq_(\"../get-leaves\");\n/**\r\n * Returns the set of Vertices passing the following test: walk the MAT tree and\r\n * keep all Vertices not in the current cull set and any Vertices that have a\r\n * non-culled node further down the line toward the tree leaves.\r\n * @param culls The CpNodes (referred to by circles) that should be culled.\r\n * @param cpStart The start CpNode which must reprsesent the maximal vertex.\r\n */\nfunction cull(culls, cpStart) {\n    var leaves = get_leaves_1.getLeaves(cpStart);\n    while (leaves.length) {\n        var leaf = leaves.pop();\n        // Preserve topology.\n        if (leaf.isHoleClosing || leaf.isIntersection) {\n            continue;\n        }\n        if (!culls.has(leaf.cp.circle)) {\n            continue;\n        }\n        var cpNode = leaf.next; // Turn around\n        while (true) {\n            cpNode = cpNode.next;\n            var cut = false;\n            var cp1 = cpNode.prevOnCircle;\n            if (!culls.has(cpNode.cp.circle)) {\n                cut = true;\n            } else if (cpNode.isThreeProng()) {\n                var cp2 = cp1.prevOnCircle;\n                if (cpStart === cpNode || cpStart === cp1 || cpStart === cp2) {\n                    cut = true; // We are at the max disk - cut whole edge\n                } else if (cpNode.next === cp2) {\n                    cpNode = cp2;\n                } else if (cp2.next !== cp1) {\n                    cut = true; // Cut whole edge\n                }\n            }\n            if (cut) {\n                cp1.next = cpNode;\n                cpNode.prev = cp1;\n                break;\n            }\n        }\n    }\n}\nexports.cull = cull;\n\n},{\"../get-leaves\":120}],129:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar mat_1 = _dereq_(\"../../mat\");\nvar traverse_edges_1 = _dereq_(\"../traverse-edges\");\nvar traverse_vertices_1 = _dereq_(\"../traverse-vertices\");\nvar smoothen_1 = _dereq_(\"../smoothen/smoothen\");\nvar get_largest_vertex_1 = _dereq_(\"../get-largest-vertex\");\nvar cull_1 = _dereq_(\"./cull\");\nvar create_new_cp_tree_1 = _dereq_(\"../create-new-cp-tree\");\nvar add_debug_info_1 = _dereq_(\"./add-debug-info\");\nvar get_leaves_1 = _dereq_(\"../get-leaves\");\n/**\r\n * Apply an enhanced version of the Scale Axis Transform (SAT) to the MAT.\r\n * @param mat - The Medial Axis Transform (MAT) on which to apply the SAT.\r\n * @param s - The scale factor >= 1 (e.g. 1.3)\r\n */\nfunction toScaleAxis(mat, s) {\n    if (typeof _debug_ !== 'undefined') {\n        _debug_.generated.timing.sats[0] = performance.now();\n        var leaves = get_leaves_1.getLeaves(mat.cpNode);\n        _debug_.generated.elems.leaves.push(leaves);\n    }\n    /** The largest vertex (as measured by its inscribed disk) */\n    var cpNode = get_largest_vertex_1.getLargestVertex(traverse_vertices_1.traverseVertices(mat.cpNode.clone()));\n    if (typeof _debug_ !== 'undefined') {\n        _debug_.generated.elems.maxVertex.push(cpNode);\n    }\n    /**\r\n     * All vertices that are set to be culled initially. This may change to\r\n     * preserve topology.\r\n     */\n    var culls = new Set();\n    var rMap = new Map();\n    traverse_edges_1.traverseEdges(cpNode, function (cpNode) {\n        /** The occulating radius stored with this vertex. */\n        var R = rMap.get(cpNode) || s * cpNode.cp.circle.radius;\n        var cpNode_ = cpNode.next;\n        //let c  = cpNode .cp.circle.center;\n        //let c_ = cpNode_.cp.circle.center;\n        /** Distance between this vertex and the next. */\n        //let l = distanceBetween(c, c_); // Almost always precise enough\n        var l = flo_bezier3_1.len([0, 1], cpNode.matCurve);\n        var r_ = s * cpNode_.cp.circle.radius;\n        if (R - l > r_) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = cpNode_.getNodes()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var _cpNode = _step.value;\n\n                    rMap.set(_cpNode, R - l); // Update occulating radii\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            culls.add(cpNode_.cp.circle);\n        }\n    });\n    cull_1.cull(culls, cpNode);\n    if (typeof _debug_ !== 'undefined') {\n        _debug_.generated.elems.culls.push(Array.from(culls));\n    }\n    smoothen_1.smoothen(cpNode);\n    var sat = new mat_1.Mat(cpNode, create_new_cp_tree_1.createNewCpTree(cpNode));\n    add_debug_info_1.addDebugInfo(sat);\n    return sat;\n}\nexports.toScaleAxis = toScaleAxis;\n\n},{\"../../mat\":85,\"../create-new-cp-tree\":87,\"../get-largest-vertex\":119,\"../get-leaves\":120,\"../smoothen/smoothen\":125,\"../traverse-edges\":130,\"../traverse-vertices\":131,\"./add-debug-info\":126,\"./cull\":128,\"flo-bezier3\":3}],130:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * Traverses all edges (depth first) of a MAT starting at the given vertex (\r\n * represented by a CpNode). The traversal always progresses towards the leave\r\n * nodes.\r\n * @param cpNode The CpNode representing the start vertex\r\n * @param f A callback function for each CpNode representing the vertex at the\r\n * start of an edge.\r\n * @param inclLeaves If truthy then include the leaves, otherwise don't.\r\n */\nfunction traverseEdges(cpNode, f) {\n    var inclLeaves = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var cps = cpNode.getNodes();\n    while (cps.length) {\n        var cp = cps.pop();\n        while (!cp.isTerminating()) {\n            f(cp, false);\n            cp = cp.next;\n            if (cp.isThreeProng()) {\n                cps.push(cp.nextOnCircle);\n            }\n        }\n        if (inclLeaves) {\n            f(cp, true);\n        }\n    }\n}\nexports.traverseEdges = traverseEdges;\n\n},{}],131:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * Traverses the MAT tree and finds and returns the first CpNode (representing\r\n * a vertex) as an array with one element (or all) with a specified property\r\n * defined by the given predicate function. Returns [] if no CpNode with the\r\n * specified property has been found.\r\n * @param cpNode any CpNode of the MAT tree\r\n * @param f A function that should return true if the CpNode passes the criteria\r\n * necessary to be returned or falsy otherwise.\r\n * @param returnFirst If true, returns as soon as the first CpNode passing\r\n * f(cpNode) was found as [CpNode]. False by default.\r\n */\nfunction traverseVertices(cpNode) {\n    var f = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (cpNode) {\n        return true;\n    };\n    var returnFirst = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var cpNodes = [];\n    if (f(cpNode)) {\n        cpNodes.push(cpNode);\n        if (returnFirst) {\n            return cpNodes;\n        }\n    }\n    ;\n    var cps = cpNode.getNodes();\n    while (cps.length) {\n        var _cpNode = cps.pop();\n        while (!_cpNode.isTerminating()) {\n            _cpNode = _cpNode.next;\n            if (f(_cpNode)) {\n                cpNodes.push(_cpNode);\n                if (returnFirst) {\n                    return cpNodes;\n                }\n            }\n            ;\n            if (_cpNode.isThreeProng()) {\n                cps.push(_cpNode.nextOnCircle);\n            }\n        }\n    }\n    return cpNodes;\n}\nexports.traverseVertices = traverseVertices;\n\n},{}],132:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mat_1 = _dereq_(\"../mat\");\nvar smoothen_1 = _dereq_(\"./smoothen/smoothen\");\nvar create_new_cp_tree_1 = _dereq_(\"./create-new-cp-tree\");\nvar cull_non_cycles_1 = _dereq_(\"./to-scale-axis/cull-non-cycles\");\n/**\r\n * Trims the given Medial Axis Transform so that only cycles remain. Similar to\r\n * toScaleAxis(mat, Number.POSITIVE_INFINITY).\r\n * @param mat The MAT to trim.\r\n */\nfunction trimMat(mat) {\n    var cpNode = cull_non_cycles_1.cullNonCycles(mat.cpNode.clone());\n    if (!cpNode) {\n        return undefined;\n    }\n    smoothen_1.smoothen(cpNode);\n    var mat_ = new mat_1.Mat(cpNode, create_new_cp_tree_1.createNewCpTree(cpNode));\n    /*\r\n    if (typeof _debug_ !== 'undefined') {\r\n        let generated = _debug_.generated;\r\n        generated.elems.sat.push(mat_);\r\n    }\r\n    */\n    return mat_;\n}\nexports.trimMat = trimMat;\n\n},{\"../mat\":85,\"./create-new-cp-tree\":87,\"./smoothen/smoothen\":125,\"./to-scale-axis/cull-non-cycles\":127}],133:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar flo_memoize_1 = _dereq_(\"flo-memoize\");\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar curve_1 = _dereq_(\"./curve\");\nvar circle_1 = _dereq_(\"./circle\");\nvar memoize = flo_memoize_1.default.m1;\n\nvar PointOnShape = function () {\n    /**\r\n     * @param curve\r\n     * @param t - The bezier parameter value\r\n     */\n    function PointOnShape(curve, t) {\n        _classCallCheck(this, PointOnShape);\n\n        // Cache\n        this.p_ = undefined;\n        this.curve = curve;\n        this.t = t;\n    }\n\n    _createClass(PointOnShape, [{\n        key: \"p\",\n        get: function get() {\n            return this.p_ === undefined ? this.p_ = flo_bezier3_1.evaluate(this.curve.ps, this.t) : this.p_;\n        }\n    }], [{\n        key: \"getOsculatingCircle\",\n        value: function getOsculatingCircle(maxOsculatingCircleRadius, pos) {\n            if (PointOnShape.isSharpCorner(pos)) {\n                return new circle_1.Circle(pos.p, 0);\n            }\n            var radius = PointOnShape.calcOsculatingCircleRadius(pos);\n            if (radius < 0) {\n                radius = Number.POSITIVE_INFINITY;\n            }\n            radius = Math.min(radius, maxOsculatingCircleRadius);\n            var ps = pos.curve.ps;\n            var t = pos.t;\n            var normal_ = flo_bezier3_1.normal(ps, t);\n            var p = flo_bezier3_1.evaluate(ps, t);\n            var circleCenter = [p[0] + normal_[0] * radius, p[1] + normal_[1] * radius];\n            return new circle_1.Circle(circleCenter, radius);\n        }\n        /**\r\n         * Calculates the order (to distinguish between points lying on top of each\r\n         * other) of the contact point if it is a dull corner.\r\n         * @param pos\r\n         */\n\n    }, {\n        key: \"calcOrder\",\n        value: function calcOrder(circle, pos) {\n            if (!PointOnShape.isDullCorner(pos)) {\n                return 0;\n            }\n            //let corner = Curve.getCornerAtEnd(pos.curve);\n            var corner = PointOnShape.getCorner(pos);\n            var n = flo_vector2d_1.rotateNeg90Degrees(corner.tans[0]);\n            var v = flo_vector2d_1.toUnitVector(flo_vector2d_1.fromTo(pos.p, circle.center));\n            /*\r\n            console.log('------------------------------');\r\n            console.log('circle.center: ', circle.center);\r\n            console.log('pos.p: ', pos.p);\r\n            console.log('corner: ', corner);\r\n            console.log('tans[0]: ', corner.tans[0]);\r\n            console.log('n: ', n);\r\n            console.log('v: ', v);\r\n            console.log('-dot(n, v): ', -dot(n, v));\r\n            */\n            return -flo_vector2d_1.dot(n, v);\n        }\n    }]);\n\n    return PointOnShape;\n}();\n/**\r\n * Calculates the osculating circle of the bezier at a\r\n * specific t. If it is found to have negative or nearly zero radius\r\n * it is clipped to have positive radius so it can point into the shape.\r\n * @param ps\r\n * @param t\r\n */\n\n\nPointOnShape.calcOsculatingCircleRadius = memoize(function (pos) {\n    var ps = pos.curve.ps;\n    var t = pos.t;\n    var κ = -flo_bezier3_1.κ(ps, t);\n    // κ > 0 => bending inwards\n    return 1 / κ;\n});\nPointOnShape.compare = function (a, b) {\n    if (a === undefined || b === undefined) {\n        return undefined;\n    }\n    var res = void 0;\n    res = a.curve.idx - b.curve.idx;\n    if (res !== 0) {\n        return res;\n    }\n    res = a.t - b.t;\n    return res;\n};\n/**\r\n * Ignores order2 (used in hole-closing two-prongs only)\r\n */\nPointOnShape.compareInclOrder = function (a, b, aOrder, bOrder) {\n    var res = PointOnShape.compare(a, b);\n    if (res === undefined) {\n        return undefined;\n    }\n    if (res !== 0) {\n        return res;\n    }\n    res = aOrder - bOrder;\n    //if (res !== 0) { return res; }\n    //return a.order2 - b.order2;\n    return res;\n};\nPointOnShape.getCorner = memoize(function (pos) {\n    if (pos.t !== 0 && pos.t !== 1) {\n        return undefined;\n    }\n    return curve_1.Curve.getCornerAtEnd(pos.t === 1 ? pos.curve : pos.curve.prev);\n});\nPointOnShape.isSharpCorner = memoize(function (pos) {\n    var corner = PointOnShape.getCorner(pos);\n    return corner && corner.isSharp;\n});\nPointOnShape.isDullCorner = memoize(function (pos) {\n    var corner = PointOnShape.getCorner(pos);\n    return corner && corner.isDull;\n});\nPointOnShape.isQuiteSharpCorner = memoize(function (pos) {\n    var corner = PointOnShape.getCorner(pos);\n    return corner && corner.isQuiteSharp;\n});\nPointOnShape.isQuiteDullCorner = memoize(function (pos) {\n    var corner = PointOnShape.getCorner(pos);\n    return corner && corner.isQuiteDull;\n});\n/**\r\n * Returns a human-readable string of the given PointOnShape.\r\n * For debugging only.\r\n */\nPointOnShape.toHumanString = function (pos) {\n    return '' + pos.p[0] + ', ' + pos.p[1] + ' | bz: ' + pos.curve.idx + ' | t: ' + pos.t;\n};\nexports.PointOnShape = PointOnShape;\n\n},{\"./circle\":53,\"./curve\":56,\"flo-bezier3\":3,\"flo-memoize\":41,\"flo-vector2d\":50}],134:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * Returns an SVG string representation of the given loop.\r\n * @param loop\r\n * @param decimalPlaces\r\n */\nfunction beziersToSvgPathStr(beziers) {\n    var decimalPlaces = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n\n    var D = decimalPlaces;\n    var str = '';\n    for (var i = 0; i < beziers.length; i++) {\n        var ps = beziers[i];\n        if (i === 0) {\n            str = 'M ' + ps[0][0].toFixed(D) + ' ' + ps[0][1].toFixed(D) + '\\n';\n        }\n        str += 'C ' + ps[1][0].toFixed(D) + ' ' + ps[1][1].toFixed(D) + ' ' + ps[2][0].toFixed(D) + ' ' + ps[2][1].toFixed(D) + ' ' + ps[3][0].toFixed(D) + ' ' + ps[3][1].toFixed(D) + ' ' + '\\n';\n    }\n    return str + ' z' + '\\n';\n}\nexports.beziersToSvgPathStr = beziersToSvgPathStr;\n\n},{}],135:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar C = 0.55191502449;\nfunction circleToCubicBeziers() {\n    var center = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0];\n    var radius = arguments[1];\n    var clockwise = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    var x = center[0];\n    var y = center[1];\n    var r = radius;\n    var c = r * C;\n    var pss = [[[x, y + r], [x + c, y + r], [x + r, y + c], [x + r, y]], [[x + r, y], [x + r, y - c], [x + c, y - r], [x, y - r]], [[x, y - r], [x - c, y - r], [x - r, y - c], [x - r, y]], [[x - r, y], [x - r, y + c], [x - c, y + r], [x, y + r]]];\n    if (!clockwise) {\n        return pss;\n    }\n    return pss.map(function (ps) {\n        return ps.slice().reverse();\n    }).slice().reverse();\n}\nexports.circleToCubicBeziers = circleToCubicBeziers;\n\n},{}],136:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\n/**\r\n * Possibly changes the curve into one that is as close to the original as\r\n * possible but does not have pathological properties (i.e. does not have near\r\n * infinitely sharp corners, etc) or if that is not possible remove the curve in\r\n * some circumstances (e.g. if it is of extreme short length, etc.).\r\n * @param ps Cubic bezier curve points.\r\n */\nfunction dePathologify(ps_, max) {\n    // TODO \n    // We check if any of the ps are coincident and thus\n    // that the bezier is degenerate in some sense. If that is the\n    // case we apply a heuristic to get a new similar bezier by \n    // respacing the points. This entire function is very \n    // convoluted.\n    // We should investigate a better mathematical solution.\n    // Currently if the bezier degenerates more or less into a point\n    // we make the next bezier start at the previous bezier's end\n    // point else we adjust the bezier to be less pathological.\n    var delta = max / 1e4;\n    var ds = [[0, flo_vector2d_1.manhattanDistanceBetween(ps_[0], ps_[1]), flo_vector2d_1.manhattanDistanceBetween(ps_[0], ps_[2]), flo_vector2d_1.manhattanDistanceBetween(ps_[0], ps_[3])], [flo_vector2d_1.manhattanDistanceBetween(ps_[1], ps_[0]), 0, flo_vector2d_1.manhattanDistanceBetween(ps_[1], ps_[2]), flo_vector2d_1.manhattanDistanceBetween(ps_[1], ps_[3])], [flo_vector2d_1.manhattanDistanceBetween(ps_[2], ps_[0]), flo_vector2d_1.manhattanDistanceBetween(ps_[2], ps_[1]), 0, flo_vector2d_1.manhattanDistanceBetween(ps_[2], ps_[3])], [flo_vector2d_1.manhattanDistanceBetween(ps_[3], ps_[0]), flo_vector2d_1.manhattanDistanceBetween(ps_[3], ps_[1]), flo_vector2d_1.manhattanDistanceBetween(ps_[3], ps_[2]), 0]];\n    var ps = ps_;\n    var SHIFT = 0.02;\n    // Check if first or last 3 points are coincident\n    if (ds[0][1] < delta && ds[1][2] < delta || ds[1][2] < delta && ds[2][3] < delta) {\n        ps = [ps_[0], flo_vector2d_1.interpolate(ps_[0], ps_[3], 1 / 3), flo_vector2d_1.interpolate(ps_[0], ps_[3], 2 / 3), ps_[3]];\n    }\n    // Check if first 2 points are coincident\n    if (ds[0][1] < delta) {\n        ps[1] = flo_vector2d_1.interpolate(ps_[0], ps_[2], SHIFT);\n    }\n    // Check if last 2 points are coincident\n    if (ds[2][3] < delta) {\n        ps[2] = flo_vector2d_1.interpolate(ps_[1], ps_[3], 1 - SHIFT);\n    }\n    // Check if middle 2 points are coincident\n    if (ds[1][2] < delta) {\n        ps[1] = flo_vector2d_1.interpolate(ps_[0], ps_[1], 1 - SHIFT);\n        ps[2] = flo_vector2d_1.interpolate(ps_[2], ps_[3], SHIFT);\n    }\n    return ps;\n}\nexports.dePathologify = dePathologify;\n\n},{\"flo-vector2d\":50}],137:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar push_bezier_1 = _dereq_(\"../fs/push-bezier\");\nvar path_state_1 = _dereq_(\"../path-state\");\nvar z_1 = _dereq_(\"../path-segment/z\");\nvar c_1 = _dereq_(\"../path-segment/c\");\nvar s_1 = _dereq_(\"../path-segment/s\");\nvar l_1 = _dereq_(\"../path-segment/l\");\nvar h_1 = _dereq_(\"../path-segment/h\");\nvar v_1 = _dereq_(\"../path-segment/v\");\nvar q_1 = _dereq_(\"../path-segment/q\");\nvar t_1 = _dereq_(\"../path-segment/t\");\nvar a_1 = _dereq_(\"../path-segment/a\");\nvar pathFs = { a: a_1.a, c: c_1.c, h: h_1.h, l: l_1.l, q: q_1.q, s: s_1.s, t: t_1.t, v: v_1.v, z: z_1.z };\n/**\r\n * Get the cubic beziers from the given SVG DOM element. If a path\r\n * data tag is not \"C\", i.e. if it is not an absolute cubic bezier\r\n * coordinate then it is converted into one.\r\n * @param elem - An SVG element\r\n * @returns aaa\r\n */\nfunction getBeziersFromRawPaths(paths) {\n    if (paths.length === 0) {\n        return []; // A shape is not described   \n    }\n    if (paths[0].type.toLowerCase() !== 'm') {\n        throw new Error('Invalid SVG - every new path must start with an M or m.');\n    }\n    var s = new path_state_1.PathState();\n    var beziersArrays = [];\n    var beziers = [];\n    var max = Number.NEGATIVE_INFINITY;\n    for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        for (var j = 0; j < path.values.length; j++) {\n            var v = path.values[j];\n            if (max < v) {\n                max = v;\n            }\n        }\n    }\n    var type = undefined;\n    var prevType = void 0;\n    for (var _i = 0; _i < paths.length; _i++) {\n        prevType = type;\n        var pathSeg = paths[_i];\n        type = pathSeg.type.toLowerCase();\n        s.vals = pathSeg.values;\n        /*\r\n        if (pathSeg.values[0] === 109.637) {\r\n            console.log('109')\r\n        }\r\n        */\n        if (pathSeg.type === pathSeg.type.toLowerCase()) {\n            if (type === 'v') {\n                s.vals[0] += s.p[1];\n            } else if (type === 'a') {\n                s.vals[5] += s.p[0];\n                s.vals[6] += s.p[1];\n            } else {\n                for (var _i2 = 0; _i2 < s.vals.length; _i2++) {\n                    s.vals[_i2] += s.p[_i2 % 2];\n                }\n            }\n        }\n        if (type === 'm') {\n            if (beziers.length) {\n                // This is a subpath, close as if the previous command was a \n                // Z or z.\n                if (prevType !== 'z') {\n                    push_bezier_1.pushBezier(beziers, z_1.z(s), s, max);\n                }\n                // Start new path\n                beziersArrays.push(beziers);\n                beziers = [];\n            }\n            s.initialPoint = s.p = s.vals;\n            continue;\n        }\n        var f = pathFs[type];\n        if (!f) {\n            throw new Error('Invalid SVG - command not recognized.');\n        }\n        var ps = f(s);\n        s.p = ps[3]; // Update current point\n        push_bezier_1.pushBezier(beziers, ps, s, max);\n    }\n    if (beziers.length) {\n        //beziersArrays.push(beziers);\n        // This is a subpath, close as if the previous command was a \n        // Z or z.\n        if (prevType !== 'z') {\n            push_bezier_1.pushBezier(beziers, z_1.z(s), s, max);\n        }\n        // Start new path\n        beziersArrays.push(beziers);\n    }\n    return beziersArrays;\n}\nexports.getBeziersFromRawPaths = getBeziersFromRawPaths;\n\n},{\"../fs/push-bezier\":147,\"../path-segment/a\":161,\"../path-segment/c\":162,\"../path-segment/h\":163,\"../path-segment/l\":164,\"../path-segment/q\":165,\"../path-segment/s\":166,\"../path-segment/t\":167,\"../path-segment/v\":168,\"../path-segment/z\":169,\"../path-state\":170}],138:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Bezier3 = _dereq_(\"flo-bezier3\");\nvar Vector = _dereq_(\"flo-vector2d\");\n/**\r\n * Get the angle between the given bezier endpoint and the\r\n * startpoint of the next bezier.\r\n * @param curve\r\n */\nfunction getCurvatureAtInterface(curve) {\n    var ts = [1, 0];\n    var pss = [curve.ps, curve.next.ps];\n    var tans = [Bezier3.tangent(pss[0])(1), Bezier3.tangent(pss[0])(0)];\n    // The integral of a kind of Dirac Delta function.\n    var cosθ = Vector.dot(tans[0], tans[1]);\n    var sinθ = Vector.cross(tans[0], tans[1]);\n    var θ = acos(cosθ);\n    var result = sinθ >= 0 ? θ : -θ;\n    return result;\n}\nexports.getCurvatureAtInterface = getCurvatureAtInterface;\n/**\r\n * Floating-point 'safer' version of acos. If x is larger than 1 (or smaller\r\n * than -1), still returns 0 (or Math.PI) instead of NAN.\r\n * @param x\r\n * @example\r\n * \t\tacos(1);  //=> 0\r\n *      acos(2);  //=> 0\r\n */\nfunction acos(x) {\n    if (x > 1) {\n        return 0;\n    } else if (x < -1) {\n        return Math.PI;\n    }\n    return Math.acos(x);\n}\n\n},{\"flo-bezier3\":3,\"flo-vector2d\":50}],139:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_shape_bounds_1 = _dereq_(\"./get-shape-bounds\");\n/**\r\n * Returns the max extreme point coordinate value for the given shape. This is\r\n * used for floating point tolerance calculations.\r\n * @param loops\r\n */\nfunction getExtreme(loops) {\n  var bounds = get_shape_bounds_1.getShapeBounds(loops);\n  return Math.max(Math.abs(bounds.minX.p[0]), Math.abs(bounds.minY.p[1]), Math.abs(bounds.maxX.p[0]), Math.abs(bounds.maxY.p[1]));\n}\nexports.getExtreme = getExtreme;\n\n},{\"./get-shape-bounds\":144}],140:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_memoize_1 = _dereq_(\"flo-memoize\");\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar point_on_shape_1 = _dereq_(\"../../point-on-shape\");\nvar memoize = flo_memoize_1.default.m1;\n\nvar INF = Number.POSITIVE_INFINITY;\nvar getLoopBounds = memoize(function (loop) {\n    var extremes = [[{ bezier: undefined, t: undefined, val: INF }, { bezier: undefined, t: undefined, val: INF }], [{ bezier: undefined, t: undefined, val: -INF }, { bezier: undefined, t: undefined, val: -INF }]];\n    loop.curves.forEach(function (curve) {\n        var ps = curve.ps;\n        var bounds = flo_bezier3_1.getBounds(ps);\n        for (var i = 0; i < 2; i++) {\n            for (var j = 0; j < 2; j++) {\n                var v = bounds.box[i][j];\n                var m = i === 0 ? -1 : 1; // min or max?\n                var x = extremes[i][j].val;\n                if (m * v > m * x || v === x && bounds.ts[i][j] > extremes[i][j].t) {\n                    extremes[i][j] = {\n                        bezier: curve,\n                        t: bounds.ts[i][j],\n                        val: v\n                    };\n                }\n            }\n        }\n    });\n    return {\n        minX: new point_on_shape_1.PointOnShape(extremes[0][0].bezier, extremes[0][0].t),\n        minY: new point_on_shape_1.PointOnShape(extremes[0][1].bezier, extremes[0][1].t),\n        maxX: new point_on_shape_1.PointOnShape(extremes[1][0].bezier, extremes[1][0].t),\n        maxY: new point_on_shape_1.PointOnShape(extremes[1][1].bezier, extremes[1][1].t)\n    };\n});\nexports.getLoopBounds = getLoopBounds;\n\n},{\"../../point-on-shape\":133,\"flo-bezier3\":3,\"flo-memoize\":41}],141:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_loop_bounds_1 = _dereq_(\"./get-loop-bounds\");\n/**\r\n * Get topmost PointOnShape the given loop.\r\n */\nfunction getMinYPos(loop) {\n    var pos = get_loop_bounds_1.getLoopBounds(loop).minY;\n    if (typeof _debug_ !== 'undefined') {\n        _debug_.generated.elems.minY.push(pos);\n    }\n    return pos;\n}\nexports.getMinYPos = getMinYPos;\n\n},{\"./get-loop-bounds\":140}],142:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_beziers_from_raw_paths_1 = _dereq_(\"./get-beziers-from-raw-paths\");\nvar loop_1 = _dereq_(\"../../loop\");\nvar parse_path_data_string_1 = _dereq_(\"../path-data-polyfill/parse-path-data-string\");\nfunction getPathsFromStr(str) {\n    var bezierLoops = get_beziers_from_raw_paths_1.getBeziersFromRawPaths(parse_path_data_string_1.parsePathDataString(str));\n    //---- For debugging ----//\n    // TODO\n    //console.log(paths);\n    /*\r\n    let pathsStr = '';\r\n    for (let i=0; i<bezierLoops.length; i++) {\r\n        let bezierLoop = bezierLoops[i];\r\n          pathsStr += beziersToSvgPathStr(bezierLoop) + '\\n';\r\n    }\r\n    console.log(pathsStr);\r\n    */\n    //-----------------------//\n    return bezierLoops.map(function (path) {\n        return new loop_1.Loop(path);\n    });\n}\nexports.getPathsFromStr = getPathsFromStr;\n\n},{\"../../loop\":84,\"../path-data-polyfill/parse-path-data-string\":159,\"./get-beziers-from-raw-paths\":137}],143:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_paths_from_str_1 = _dereq_(\"./get-paths-from-str\");\nfunction getPathsFromSvgPathElem(elem) {\n    return get_paths_from_str_1.getPathsFromStr(elem.getAttribute(\"d\"));\n}\nexports.getPathsFromSvgPathElem = getPathsFromSvgPathElem;\n\n},{\"./get-paths-from-str\":142}],144:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_memoize_1 = _dereq_(\"flo-memoize\");\nvar get_loop_bounds_1 = _dereq_(\"./get-loop-bounds\");\nvar memoize = flo_memoize_1.default.m1;\n\nvar getShapeBounds = memoize(function (loops) {\n    var minX_ = Number.POSITIVE_INFINITY;\n    var maxX_ = Number.NEGATIVE_INFINITY;\n    var minY_ = Number.POSITIVE_INFINITY;\n    var maxY_ = Number.NEGATIVE_INFINITY;\n    var minX = void 0;\n    var maxX = void 0;\n    var minY = void 0;\n    var maxY = void 0;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = loops[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var loop = _step.value;\n\n            var bounds = get_loop_bounds_1.getLoopBounds(loop);\n            if (bounds.minX.p[0] < minX_) {\n                minX = bounds.minX;\n                minX_ = bounds.minX.p[0];\n            }\n            if (bounds.maxX.p[0] > maxX_) {\n                maxX = bounds.maxX;\n                maxX_ = bounds.maxX.p[0];\n            }\n            if (bounds.minY.p[1] < minY_) {\n                minY = bounds.minY;\n                minY_ = bounds.minY.p[1];\n            }\n            if (bounds.maxY.p[1] > maxY_) {\n                maxY = bounds.maxY;\n                maxY_ = bounds.maxY.p[1];\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return { minX: minX, minY: minY, maxX: maxX, maxY: maxY };\n});\nexports.getShapeBounds = getShapeBounds;\nvar getShapesBounds = memoize(function (loopss) {\n    var minX_ = Number.POSITIVE_INFINITY;\n    var maxX_ = Number.NEGATIVE_INFINITY;\n    var minY_ = Number.POSITIVE_INFINITY;\n    var maxY_ = Number.NEGATIVE_INFINITY;\n    var minX = void 0;\n    var maxX = void 0;\n    var minY = void 0;\n    var maxY = void 0;\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = loopss[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var loops = _step2.value;\n\n            var bounds = getShapeBounds(loops);\n            if (bounds.minX.p[0] < minX_) {\n                minX = bounds.minX;\n                minX_ = bounds.minX.p[0];\n            }\n            if (bounds.maxX.p[0] > maxX_) {\n                maxX = bounds.maxX;\n                maxX_ = bounds.maxX.p[0];\n            }\n            if (bounds.minY.p[1] < minY_) {\n                minY = bounds.minY;\n                minY_ = bounds.minY.p[1];\n            }\n            if (bounds.maxY.p[1] > maxY_) {\n                maxY = bounds.maxY;\n                maxY_ = bounds.maxY.p[1];\n            }\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    return { minX: minX, minY: minY, maxX: maxX, maxY: maxY };\n});\nexports.getShapesBounds = getShapesBounds;\n\n},{\"./get-loop-bounds\":140,\"flo-memoize\":41}],145:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\nvar DELTA = 1e-6;\n/**\r\n * Returns true if distance between consecutive points are all less than\r\n * some delta, false otherwise.\r\n * @private\r\n * @param ps - an array of points\r\n * @param delta - a tolerance - defaults to 1e-6;\r\n */\nfunction isAlmostZeroLength(ps) {\n    var delta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DELTA;\n\n    for (var i = 1; i < ps.length; i++) {\n        var p1 = ps[i - 1];\n        var p2 = ps[i];\n        if (flo_vector2d_1.manhattanDistanceBetween(p1, p2) > delta) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.isAlmostZeroLength = isAlmostZeroLength;\n\n},{\"flo-vector2d\":50}],146:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Bezier3 = _dereq_(\"flo-bezier3\");\nvar flo_memoize_1 = _dereq_(\"flo-memoize\");\nvar Vector = _dereq_(\"flo-vector2d\");\nvar get_loop_bounds_1 = _dereq_(\"./get-loop-bounds\");\nvar memoize = flo_memoize_1.default.m1;\n/**\r\n * Returns true if the given beizer loop is positively orientated, false\r\n * otherwise. Careful! Checks leftmost part of loop so twisted complex paths\r\n * may give an ambiguous orientation.\r\n */\n\nvar isPathPositivelyOrientated = memoize(function (bezierLoop) {\n    var extreme = get_loop_bounds_1.getLoopBounds(bezierLoop).minX;\n    var t = extreme.t;\n    var curve = void 0;\n    if (t === 0) {\n        curve = extreme.curve.prev;\n        t = 1;\n    } else {\n        curve = extreme.curve;\n    }\n    var ps = curve.ps;\n    var tan = Bezier3.tangent(ps)(t);\n    if (t !== 1) {\n        // Not a sharp corner\n        return tan[1] < 0;\n    }\n    var psNext = curve.next.ps;\n    var tanNext = Bezier3.tangent(psNext)(0);\n    if (tan[1] * tanNext[1] > 0) {\n        // Both tangents points up or both points down.\n        return tan[1] < 0;\n    }\n    // One tangent points up and the other down.\n    var c = Vector.cross(tan, tanNext);\n    return c > 0;\n    // We don't check for the very special case where the cross === 0. \n});\nexports.isPathPositivelyOrientated = isPathPositivelyOrientated;\n\n},{\"./get-loop-bounds\":140,\"flo-bezier3\":3,\"flo-memoize\":41,\"flo-vector2d\":50}],147:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar de_pathologify_1 = _dereq_(\"./de-pathologify\");\nvar is_almost_zero_length_1 = _dereq_(\"./is-almost-zero-length\");\n// TODO - 1e4 is arbitrary\nvar RESOLUTION = 1e4;\n/**\r\n *\r\n * @param beziers The array of path curves\r\n * @param ps_ The bezier\r\n * @param state The current path state\r\n */\nfunction pushBezier(beziers, ps_, s, max) {\n    /*\r\n    if ( isAlmostZeroLength(ps_, max/RESOLUTION) ) {\r\n    if ( isAlmostZeroLength(ps_, 0) ) {\r\n    return;\r\n    }\r\n    //console.log(ps_);\r\n    }\r\n    beziers.push(ps_);\r\n    */\n    if (is_almost_zero_length_1.isAlmostZeroLength(ps_, max / RESOLUTION)) {\n        var len = beziers.length;\n        if (len === 0) {\n            s.initialPoint = ps_[3];\n        } else {\n            var prevPs = beziers[len - 1];\n            prevPs[3] = ps_[3];\n        }\n        return;\n    }\n    var ps = de_pathologify_1.dePathologify(ps_, max);\n    beziers.push(ps);\n}\nexports.pushBezier = pushBezier;\n\n},{\"./de-pathologify\":136,\"./is-almost-zero-length\":145}],148:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar get_next_x_1 = _dereq_(\"./get-next-x\");\nfunction completeLoop(intersections, takenXs, xStack, loopTree, x) {\n    var beziers = [];\n    var reversed = loopTree.windingNum === 0 && loopTree.orientation === -1 || loopTree.windingNum !== 0 && loopTree.orientation === +1;\n    var pos = reversed ? x.pos : x.opposite.pos;\n    var startBez = pos.curve;\n    var startT = pos.t;\n    var curBez = startBez;\n    var curT = startT;\n    var fromX = x.isDummy ? undefined : reversed ? x.opposite : x;\n    var wasOnX = true;\n    while (true) {\n        var xs = intersections.get(curBez);\n        var x_ = xs ? get_next_x_1.getNextX(xs, curT, !reversed, wasOnX) : undefined;\n        // Add a bezier to the component loop.\n        if (x_) {\n            // We are at an intersection\n            wasOnX = true;\n            if (curT !== x_.pos.t) {\n                var ps = reversed ? flo_bezier3_1.reverse(flo_bezier3_1.fromTo(curBez.ps)(x_.pos.t, curT)) : flo_bezier3_1.fromTo(curBez.ps)(curT, x_.pos.t);\n                beziers.push(ps);\n                addXOutPs(reversed, fromX, ps);\n                fromX = x_;\n            }\n            // Move onto next bezier\n            curBez = x_.opposite.pos.curve; // Switch to other path's bezier\n            curT = x_.opposite.pos.t; // ...\n            var _x_ = reversed ? x_.opposite : x_;\n            _x_.loopTree = loopTree;\n            if (!takenXs.has(_x_.opposite)) {\n                xStack.push(_x_.opposite);\n            }\n            takenXs.add(_x_); // Mark this intersection as taken\n        } else {\n            wasOnX = false;\n            var t = reversed ? 0 : 1;\n            if (curT !== t) {\n                var _ps = reversed ? flo_bezier3_1.reverse(flo_bezier3_1.fromTo(curBez.ps)(0, curT)) : flo_bezier3_1.fromTo(curBez.ps)(curT, 1);\n                beziers.push(_ps);\n                addXOutPs(reversed, fromX, _ps);\n                fromX = undefined;\n            }\n            // Move onto next bezier on current path\n            curBez = reversed ? curBez.prev : curBez.next;\n            curT = reversed ? 1 : 0;\n        }\n        if (curBez === startBez && curT === startT) {\n            break;\n        }\n    }\n    return beziers;\n}\nexports.completeLoop = completeLoop;\nfunction addXOutPs(reversed, fromX, ps) {\n    if (fromX && !fromX.isDummy) {\n        var x = reversed ? fromX : fromX.opposite;\n        x.outPs = ps;\n        fromX = undefined;\n        //_debug_.fs.draw.bezier(_debug_.generated.g, ps, 'red thin10 nofill');\n    }\n}\n\n},{\"./get-next-x\":153,\"flo-bezier3\":3}],149:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar loop_1 = _dereq_(\"../../../loop\");\nvar complete_loop_1 = _dereq_(\"./complete-loop\");\nvar get_initial_x_1 = _dereq_(\"./get-initial-x\");\nvar get_loop_metrics_1 = _dereq_(\"./get-loop-metrics\");\n/**\r\n *\r\n * @param intersections\r\n * @param loopsTaken\r\n * @param loop\r\n * @param parent\r\n */\nfunction completePath(intersections, loopsTaken, parent, loop) {\n    // Each loop generated by xs in xStack will give rise to one componentLoop. \n    // The initial intersection in the stack is a dummy.\n    /** Intersection stack */\n    var initialX = get_initial_x_1.getInitialX(intersections, parent, loop);\n    var curve = initialX.pos.curve;\n    var xs = intersections.get(curve) || [];\n    if (xs.length === 0) {\n        intersections.set(curve, xs);\n    }\n    xs.push(initialX);\n    var xStack = [initialX];\n    var takenXs = new Set(); // Taken intersections\n    while (xStack.length) {\n        var x = xStack.pop();\n        loopsTaken.add(x.pos.curve.loop);\n        if (takenXs.has(x)) {\n            continue;\n        }\n        var loopTree = get_loop_metrics_1.getLoopMetrics(x);\n        loopTree.beziers = complete_loop_1.completeLoop(intersections, takenXs, xStack, loopTree, x);\n        loopTree.loop = new loop_1.Loop(loopTree.beziers);\n    }\n}\nexports.completePath = completePath;\n\n},{\"../../../loop\":84,\"./complete-loop\":148,\"./get-initial-x\":150,\"./get-loop-metrics\":152}],150:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar point_on_shape_1 = _dereq_(\"../../../point-on-shape\");\nvar is_path_positively_oriented_1 = _dereq_(\"../../fs/is-path-positively-oriented\");\nvar get_loop_bounds_1 = _dereq_(\"../get-loop-bounds\");\nvar x_1 = _dereq_(\"../../../x\");\n/**\r\n * Get initial intersection which is really a dummy intersection.\r\n * @param loop\r\n * @param parent\r\n */\nfunction getInitialX(intersections, parent, loop) {\n    var dummyLoop = {\n        parent: parent,\n        children: new Set(),\n        beziers: [],\n        loop: undefined,\n        orientation: is_path_positively_oriented_1.isPathPositivelyOrientated(loop) ? -1 : +1,\n        windingNum: parent.windingNum\n    };\n    var pos = get_loop_bounds_1.getLoopBounds(loop).minX;\n    var xs = intersections.get(pos.curve);\n    // If no intersections on this curve, just start at 0\n    if (!xs) {\n        pos = new point_on_shape_1.PointOnShape(pos.curve, 0);\n    }\n    var x = new x_1.X(pos, true, undefined, // will be set just below\n    dummyLoop);\n    x.opposite = x;\n    return x;\n}\nexports.getInitialX = getInitialX;\n\n},{\"../../../point-on-shape\":133,\"../../../x\":172,\"../../fs/is-path-positively-oriented\":146,\"../get-loop-bounds\":140}],151:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar x_1 = _dereq_(\"../../../x\");\nvar point_on_shape_1 = _dereq_(\"../../../point-on-shape\");\nvar pair_set_1 = _dereq_(\"./pair-set\");\nvar find_bb_intersections_1 = _dereq_(\"../../../bounding-box/find-bb-intersections\");\n// TODO - DELTA is somewhat arbitrary\nvar DELTA = 1e-10;\n/**\r\n * Find and return all intersections on all given loops.\r\n * @param loops\r\n */\nfunction getIntersections(loops) {\n    // intersection <=> X\n    var _getBoxInfos = getBoxInfos(loops),\n        boxes = _getBoxInfos.boxes,\n        boxInfoMap = _getBoxInfos.boxInfoMap;\n\n    var boxIntersections = find_bb_intersections_1.default(boxes);\n    // Check curve intersection amongst possibilities\n    /** A map from each curve to its intersectings */\n    var xMap = new Map();\n    var checkedPairs = new Map();\n    for (var i = 0; i < boxIntersections.length; i++) {\n        var _boxIntersections$i = boxIntersections[i],\n            box1 = _boxIntersections$i.box1,\n            box2 = _boxIntersections$i.box2;\n\n        var curves = [boxInfoMap.get(box1).curve, boxInfoMap.get(box2).curve];\n        if (pair_set_1.pairSet_has(checkedPairs, curves)) {\n            continue;\n        }\n        pair_set_1.pairSet_add(checkedPairs, curves);\n        var pss = curves.map(function (curve) {\n            return curve.ps;\n        });\n        var tPairs = flo_bezier3_1.bezier3Intersection(pss[0], pss[1]);\n        if (!tPairs.length) {\n            continue;\n        }\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = tPairs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var tPair = _step.value;\n\n                var curves_ = confirmIntersection(checkedPairs, curves, tPair);\n                if (curves_ === undefined) {\n                    continue;\n                }\n                var xs = [];\n                var _arr = [0, 1];\n                for (var _i = 0; _i < _arr.length; _i++) {\n                    var j = _arr[_i];\n                    var curve = curves_[j];\n                    var x = new x_1.X(new point_on_shape_1.PointOnShape(curve, tPair[j]));\n                    // Get intersections stored at this curve\n                    var curveXs = xMap.get(curve) || [];\n                    if (!curveXs.length) {\n                        xMap.set(curve, curveXs);\n                    }\n                    // Add an intersection to this curve\n                    curveXs.push(x);\n                    xs.push(x);\n                }\n                xs[0].opposite = xs[1];\n                xs[1].opposite = xs[0];\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    return xMap;\n}\nexports.getIntersections = getIntersections;\n/**\r\n *\r\n */\nfunction confirmIntersection(checkedPairs, curves, tPair) {\n    var curves_ = curves.slice();\n    // TODO - the below check is temporary - there is a better way\n    // TODO - eliminate the fact that intersections are found twice\n    if ((Math.abs(tPair[0]) < DELTA && Math.abs(tPair[1] - 1) < DELTA || Math.abs(tPair[0] - 1) < DELTA && Math.abs(tPair[1]) < DELTA || Math.abs(tPair[0]) < DELTA && Math.abs(tPair[1]) < DELTA || Math.abs(tPair[0] - 1) < DELTA && Math.abs(tPair[1] - 1) < DELTA) && (curves_[0].next === curves_[1] || curves_[1].next === curves_[0])) {\n        return undefined;\n    }\n    if (Math.abs(tPair[0] - 1) < DELTA) {\n        // If the intersection occurs at the end, move it to the start\n        // so we don't have a very small bezier piece left.\n        curves_[0] = curves_[0].next;\n        tPair[0] = 0;\n        // Recheck\n        if (pair_set_1.pairSet_has(checkedPairs, [curves_[0], curves_[1]])) {\n            return undefined;\n        }\n    }\n    if (Math.abs(tPair[1] - 1) < DELTA) {\n        // If the intersection occurs at the end, move it to the start\n        // so we don't have a very small bezier piece left.\n        curves_[1] = curves_[1].next;\n        tPair[1] = 0;\n        // Recheck\n        if (pair_set_1.pairSet_has(checkedPairs, [curves_[0], curves_[1]])) {\n            return undefined;\n        }\n    }\n    return curves_;\n}\n/**\r\n * Returns an array of lines of the bounding hulls of the Loop beziers' control\r\n * points including a map that maps each line to its hull, path and curve.\r\n * @param loops An array of Loops\r\n */\nfunction getBoxInfos(loops) {\n    /** Map that maps a line segment to some info. */\n    var boxInfoMap = new Map();\n    var boxes = [];\n    // Get lines making up the hulls of the paths\n\n    var _loop = function _loop(loop) {\n        loop.curves.forEach(function (curve) {\n            var box = flo_bezier3_1.getBoundingBox(curve.ps);\n            boxes.push(box);\n            boxInfoMap.set(box, { box: box, loop: loop, curve: curve });\n        });\n    };\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = loops[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var loop = _step2.value;\n\n            _loop(loop);\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    return { boxes: boxes, boxInfoMap: boxInfoMap };\n}\n\n},{\"../../../bounding-box/find-bb-intersections\":52,\"../../../point-on-shape\":133,\"../../../x\":172,\"./pair-set\":156,\"flo-bezier3\":3}],152:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar flo_vector2d_1 = _dereq_(\"flo-vector2d\");\n/**\r\n *\r\n * @param x The intersection\r\n */\nfunction getLoopMetrics(x) {\n    var oppositeLoopTree = x.opposite.loopTree;\n    var oppositeOrientation = oppositeLoopTree.orientation;\n    var oppositeWindingNum = oppositeLoopTree.windingNum;\n    // Left or right turning? - The current X\n    var oldInBez = x.opposite.pos.curve.ps;\n    var oldOutBez = x.pos.curve.ps;\n    var orientation = void 0;\n    var windingNum = void 0;\n    var parent = void 0;\n    if (oldInBez !== oldOutBez) {\n        var tanIn = flo_bezier3_1.tangent(oldInBez, x.opposite.pos.t);\n        var tanOut = flo_bezier3_1.tangent(oldOutBez, x.pos.t);\n        // TODO - if cross product is close to 0 check second derivatives (the \n        // same can be done at cusps in the mat code). E.g. a figure eight with \n        // coinciding bezier stretches may cause floating point instability.\n        var isLeft = flo_vector2d_1.cross(tanIn, tanOut) > 0;\n        var isTwist = isLeft && oppositeOrientation === +1 || !isLeft && oppositeOrientation === -1;\n        var windingNumberInc = isTwist ? -2 * oppositeOrientation : oppositeOrientation;\n        orientation = isTwist ? -1 * oppositeOrientation : +1 * oppositeOrientation;\n        windingNum = oppositeWindingNum + windingNumberInc;\n        parent = isTwist ? oppositeLoopTree.parent : oppositeLoopTree;\n    } else {\n        // This is the first loop's start - it's a special case\n        orientation = oppositeOrientation === +1 ? -1 : +1;\n        windingNum = oppositeWindingNum + orientation;\n        parent = oppositeLoopTree.parent;\n    }\n    var iLoopTree = {\n        parent: parent,\n        children: new Set(),\n        beziers: undefined,\n        loop: undefined,\n        orientation: orientation,\n        windingNum: windingNum\n    };\n    parent.children.add(iLoopTree);\n    return iLoopTree;\n}\nexports.getLoopMetrics = getLoopMetrics;\n\n},{\"flo-bezier3\":3,\"flo-vector2d\":50}],153:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n *\r\n * @param xs An array of intersections on the curve\r\n * @param curT The current t value\r\n * @param forwards If true go forwards else go backwards\r\n */\nfunction getNextX(xs, curT, forwards, wasOnX) {\n    var bestX = undefined;\n    var bestT = Number.POSITIVE_INFINITY;\n    for (var i = 0; i < xs.length; i++) {\n        var x = xs[i];\n        var t = x.pos.t;\n        var deltaT = forwards ? t - curT : curT - t;\n        if ((deltaT > 0 || deltaT === 0 && !wasOnX) && deltaT < bestT) {\n            bestX = x;\n            bestT = deltaT;\n        }\n    }\n    return bestX;\n}\nexports.getNextX = getNextX;\n/**\r\n *\r\n * @param xs An array of intersections on the curve\r\n * @param t The current t value\r\n */\nfunction getThisX(xs, t) {\n    for (var i = 0; i < xs.length; i++) {\n        var x = xs[i];\n        if (x.pos.t - t === 0) {\n            return x;\n        }\n    }\n}\nexports.getThisX = getThisX;\n\n},{}],154:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar is_loop_in_loop_1 = _dereq_(\"./is-loop-in-loop\");\n/**\r\n *\r\n * @param root\r\n * @param loop\r\n */\nfunction getTightestContainingLoop(root, loop) {\n    var containingLoop = undefined;\n    var stack = [root];\n    while (stack.length) {\n        var loopTree = stack.pop();\n        f(loopTree);\n    }\n    //console.log(containingLoop)\n    return containingLoop;\n    function f(parent) {\n        if (parent === root || is_loop_in_loop_1.isLoopInLoop([loop, parent.loop])) {\n            containingLoop = parent;\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = parent.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var child = _step.value;\n\n                    stack.push(child);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }\n}\nexports.getTightestContainingLoop = getTightestContainingLoop;\n\n},{\"./is-loop-in-loop\":155}],155:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar flo_poly_1 = _dereq_(\"flo-poly\");\nvar flo_bezier3_1 = _dereq_(\"flo-bezier3\");\nvar point_on_shape_1 = _dereq_(\"../../../point-on-shape\");\nvar get_loop_bounds_1 = _dereq_(\"../get-loop-bounds\");\nvar DELTA = 1e-6;\n/**\r\n * Returns true if the first loop is contained wholly within the second. At this\r\n * stage we already know the loop is either wholly contained inside the loop\r\n * or is wholly outside.\r\n * @param loops\r\n */\nfunction isLoopInLoop(loops) {\n    var i = 0;\n    var seed = 1231; // Just some value\n    do {\n        i++;\n        // This gets us a predictable random number between 0 and 1;\n        var rand1 = flo_poly_1.default.random.flatCoefficients(1, 0, 1, seed);\n        var t = rand1.p[0];\n        seed = rand1.seed; // Get next seed.\n        // This gets us a predictable random number roughly between 0 and the \n        // number of curves in the loop.\n        var curveCount = loops[0].curves.length;\n        var rand2 = flo_poly_1.default.random.flatCoefficients(1, 0, curveCount, seed);\n        var idx = Math.floor(rand2.p[0]);\n        seed = rand2.seed; // Get next seed.\n        var ps = loops[0].curves[idx].ps;\n        var p = flo_bezier3_1.evaluate(ps, t);\n        var res = f(loops, p);\n        if (res !== undefined) {\n            return res;\n        }\n    } while (i < 10);\n    return undefined; // There's no chance we'll get up to this point.\n    function f(loops, p) {\n        if (isLoopNotInLoop(loops)) {\n            return false;\n        }\n        //let g = _debug_.generated.g;\n        //let bounds = getShapeBounds(loops);\n        //_debug_.fs.draw.dot(g, p, (bounds.maxX.p[0] - bounds.minX.p[0]) * 0.002, 'blue');\n        var intersections = getAxisAlignedRayLoopIntersections(loops[1], p, 'left');\n        //console.log(intersections, intersections.length % 2 !== 0);\n        if (intersections) {\n            return intersections.length % 2 !== 0;\n        }\n    }\n}\nexports.isLoopInLoop = isLoopInLoop;\n/**\r\n * Returns true if the first loop is not wholly within the second. The converse\r\n * is not necessarily true. It is assumed the loops don't intersect.\r\n * @param loops\r\n */\nfunction isLoopNotInLoop(loops) {\n    var loopBoundss = loops.map(get_loop_bounds_1.getLoopBounds);\n    var boundss = loopBoundss.map(function (loopBound) {\n        return {\n            minX: loopBound.minX.p[0],\n            maxX: loopBound.maxX.p[0],\n            minY: loopBound.minY.p[1],\n            maxY: loopBound.maxY.p[1]\n        };\n    });\n    return boundss[0].minX < boundss[1].minX || boundss[0].maxX > boundss[1].maxX || boundss[0].minY < boundss[1].minY || boundss[0].maxY > boundss[1].maxY;\n}\n//enum Dir { LEFT, RIGHT, UP, DOWN }\n/**\r\n *\r\n * @param p The point where the horizontal ray starts\r\n * @param toLeft The ray to the left of this point (else right)\r\n * @param loop A loop of curves\r\n */\nfunction getAxisAlignedRayLoopIntersections(loop, p, dir) {\n    var _p = _slicedToArray(p, 2),\n        x = _p[0],\n        y = _p[1];\n\n    var curves = loop.curves;\n    var possAll = [];\n\n    var _loop = function _loop(i) {\n        var curve = curves[i];\n        var ps = curve.ps;\n        //------------------------------------------------------/\n        //---- Check if ray intersects bezier bounding box -----/\n        //------------------------------------------------------/\n\n        var _flo_bezier3_1$getBou = flo_bezier3_1.getBoundingBox(ps),\n            _flo_bezier3_1$getBou2 = _slicedToArray(_flo_bezier3_1$getBou, 2),\n            _flo_bezier3_1$getBou3 = _slicedToArray(_flo_bezier3_1$getBou2[0], 2),\n            minX = _flo_bezier3_1$getBou3[0],\n            minY = _flo_bezier3_1$getBou3[1],\n            _flo_bezier3_1$getBou4 = _slicedToArray(_flo_bezier3_1$getBou2[1], 2),\n            maxX = _flo_bezier3_1$getBou4[0],\n            maxY = _flo_bezier3_1$getBou4[1];\n\n        var notIntersecting = (dir === 'left' || dir === 'right') && (minY > y || maxY < y) || (dir === 'up' || dir === 'down') && (minX > x || maxX < x);\n        notIntersecting = notIntersecting || dir === 'left' && minX > x || dir === 'right' && maxX < x || dir === 'down' && minY > y || dir === 'up' && maxY < y;\n        if (notIntersecting) {\n            return \"continue\";\n        } // No intersection with bezier\n        //------------------------------------------------------/\n        //----------- Get intersection ts on bezier ------------/\n        //------------------------------------------------------/\n        // Get the bezier's x-coordinate power representation.\n        var ts = [];\n        var f = void 0;\n        var offset = void 0;\n        var axis = void 0;\n        var dirIsDecreasing = dir === 'left' || dir === 'up';\n        if (dir === 'left' || dir === 'right') {\n            f = flo_bezier3_1.getY;\n            offset = [0, -y];\n            axis = 0;\n        } else {\n            f = flo_bezier3_1.getX;\n            offset = [-x, 0];\n            axis = 1;\n        }\n        var translatedPs = flo_bezier3_1.translate(offset, ps);\n        var poly = f(translatedPs);\n        var ev = flo_bezier3_1.evaluate(translatedPs);\n        var ts_ = flo_poly_1.default.allRoots(poly, 0 - DELTA, 1 + DELTA);\n        for (var _i = 0; _i < ts_.length; _i++) {\n            var t = ts_[_i];\n            if (Math.abs(t) < DELTA || Math.abs(t - 1) < DELTA) {\n                // We don't know the exact number of intersections due to\n                // floating point arithmetic. \n                return {\n                    v: undefined\n                };\n            }\n            var p_ = ev(t);\n            if (dirIsDecreasing && p[axis] >= p_[axis] || !dirIsDecreasing && p[axis] <= p_[axis]) {\n                ts.push(t);\n            }\n        }\n        //------------------------------------------------------/\n        //----- Check if line is tangent to intersections ------/\n        //------------------------------------------------------/\n        // We only care if there were 1 or 3 intersections.\n        if (ts.length === 1 || ts.length === 3) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = ts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var _t = _step.value;\n\n                    var tan = flo_bezier3_1.tangent(ps, _t);\n                    if ((dir === 'left' || dir === 'right') && Math.abs(tan[1]) < DELTA || (dir === 'down' || dir === 'up') && Math.abs(tan[0]) < DELTA) {\n                        // We don't know the exact number of intersections due to\n                        // floating point arithmetic\n                        return {\n                            v: undefined\n                        };\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n        possAll.push.apply(possAll, _toConsumableArray(ts.map(function (t) {\n            return new point_on_shape_1.PointOnShape(curve, t);\n        })));\n    };\n\n    for (var i = 0; i < curves.length; i++) {\n        var _ret = _loop(i);\n\n        switch (_ret) {\n            case \"continue\":\n                continue;\n\n            default:\n                if ((typeof _ret === \"undefined\" ? \"undefined\" : _typeof(_ret)) === \"object\") return _ret.v;\n        }\n    }\n    return possAll;\n}\n\n},{\"../../../point-on-shape\":133,\"../get-loop-bounds\":140,\"flo-bezier3\":3,\"flo-poly\":42}],156:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * Adds an unordered pair of values to the set (given as a special map)\r\n * @param map The map representing the pairs.\r\n * @param vs The pair to add.\r\n */\nfunction pairSet_add(map, vs) {\n    if (pairSet_has(map, vs)) {\n        return;\n    }\n    f(vs[0], vs[1]);\n    f(vs[1], vs[0]);\n    function f(v1, v2) {\n        var set = map.get(v1);\n        if (!set) {\n            set = new Set();\n            map.set(v1, set);\n        }\n        set.add(v2);\n    }\n}\nexports.pairSet_add = pairSet_add;\n/**\r\n * Returns true if the unordered pair is in the set of pairs (represented by a\r\n * map).\r\n * @param map The map representing the pairs.\r\n * @param vs The pair to check.\r\n */\nfunction pairSet_has(map, vs) {\n    var set = void 0;\n    set = map.get(vs[0]);\n    var has1 = set && set.has(vs[1]);\n    set = map.get(vs[1]);\n    var has2 = set && set.has(vs[0]);\n    return has1 || has2;\n}\nexports.pairSet_has = pairSet_has;\n/**\r\n * Returns the unordered pairs as an array.\r\n * @param map The map representing the pairs.\r\n */\nfunction pairSet_asArray(map) {\n    var items = [];\n    var map_ = new Map();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = map[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var m = _step.value;\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = m[1][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var s = _step2.value;\n\n                    var vs = [m[0], s];\n                    if (!pairSet_has(map_, vs)) {\n                        items.push(vs);\n                        pairSet_add(map_, vs);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return items;\n}\nexports.pairSet_asArray = pairSet_asArray;\n\n},{}],157:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar loop_1 = _dereq_(\"../../../loop\");\nvar get_loop_bounds_1 = _dereq_(\"../get-loop-bounds\");\nvar get_intersections_1 = _dereq_(\"./get-intersections\");\nvar complete_path_1 = _dereq_(\"./complete-path\");\nvar get_tightest_containing_loop_1 = _dereq_(\"./get-tightest-containing-loop\");\n/**\r\n * Uses the algorithm of Lavanya Subramaniam (PARTITION OF A NON-SIMPLE POLYGON\r\n * INTO SIMPLE POLYGONS) but modified to use cubic bezier curves (as opposed to\r\n * polygons) and to additionally take care of paths with multiple subpaths, i.e.\r\n * such as disjoint nested paths.\r\n * @param loops An array of possibly intersecting paths\r\n */\nfunction simplifyPaths(loops) {\n    /*\r\n    let s = '';\r\n    for (let loop of loops) {\r\n        s = s + '\\n\\n' + beziersToSvgPathStr(loop.curves.map(c => c.ps), 5)\r\n    }\r\n    console.log(s);\r\n    */\n    /** A map from each curve to an array of intersections on that curve. */\n    var intersections = get_intersections_1.getIntersections(loops);\n    var loopsTaken = new Set();\n    var root = {\n        parent: undefined,\n        children: new Set(),\n        beziers: undefined,\n        loop: undefined,\n        orientation: undefined,\n        windingNum: 0\n    };\n    loops.sort(ascendingByTopmostPoint);\n    if (typeof _debug_ !== 'undefined') {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = loops[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var loop = _step.value;\n\n                _debug_.fs.nameObj(loop);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = loops[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _loop = _step2.value;\n\n            // TODO - handle special case of 1 curve - mayve just delete lines below\n            if (_loop.curves.length <= 1) {\n                continue;\n            }\n            if (loopsTaken.has(_loop)) {\n                continue;\n            }\n            loopsTaken.add(_loop);\n            var parent = get_tightest_containing_loop_1.getTightestContainingLoop(root, _loop);\n            complete_path_1.completePath(intersections, loopsTaken, parent, _loop);\n        }\n        // Take the forest of trees, create a new root making it a tree and snip\n        // branches such that each branch determines a new set of loops each \n        // representing an individual independent shape that possess its own Medial\n        // Axis Transform (still to be determined).\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    var loopTrees = splitLoopTrees(root);\n    var iLoopSets = loopTrees.map(getLoopsFromTree);\n    var loopss = iLoopSets.map(function (loopSet) {\n        return loopSet.map(ILoopToLoop);\n    });\n    /*\r\n    let str = '';\r\n    for (let simplePaths of loopss) {\r\n        //console.log(str)\r\n        for (let loop of simplePaths) {\r\n            str = str + '\\n\\n' + beziersToSvgPathStr(\r\n                loop.curves.map(c => c.ps),\r\n                5\r\n            )\r\n        }\r\n        //console.log(str)\r\n        //console.log('-----------------');\r\n    }\r\n    console.log(str)\r\n    */\n    var xMap = new Map();\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n        for (var _iterator3 = intersections[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var intersection = _step3.value;\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n                for (var _iterator4 = intersection[1][Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                    var x = _step4.value;\n\n                    if (x.isDummy) {\n                        continue;\n                    }\n                    xMap.set(x.outPs, { ps: x.opposite.outPs });\n                    if (typeof _debug_ !== 'undefined') {\n                        _debug_.generated.elems.intersection.push(x);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                        _iterator4.return();\n                    }\n                } finally {\n                    if (_didIteratorError4) {\n                        throw _iteratorError4;\n                    }\n                }\n            }\n        }\n    } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n            }\n        } finally {\n            if (_didIteratorError3) {\n                throw _iteratorError3;\n            }\n        }\n    }\n\n    return { loopss: loopss, xMap: xMap };\n}\nexports.simplifyPaths = simplifyPaths;\n/**\r\n *\r\n * @param iLoop\r\n */\nfunction ILoopToLoop(iLoop) {\n    return new loop_1.Loop(iLoop.beziers);\n}\nfunction splitLoopTrees(root) {\n    var iLoopTrees = [];\n    var nodeStack = [root];\n    while (nodeStack.length) {\n        var parent = nodeStack.pop();\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n            for (var _iterator5 = parent.children[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var child = _step5.value;\n\n                if (parent.windingNum === 0) {\n                    iLoopTrees.push(child);\n                }\n                nodeStack.push(child);\n            }\n        } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                    _iterator5.return();\n                }\n            } finally {\n                if (_didIteratorError5) {\n                    throw _iteratorError5;\n                }\n            }\n        }\n\n        if (parent.windingNum === 0) {\n            parent.children = new Set(); // Make it a leaf\n        }\n    }\n    return iLoopTrees;\n}\n/**\r\n * Returns an array of LoopTrees from the given LoopTree where each returned\r\n * LoopTree is one of the nodes of the tree. Nodes with winding number > 1 are\r\n * not returned.\r\n * @param root\r\n */\nfunction getLoopsFromTree(root) {\n    var loopTrees = [];\n    var stack = [root];\n    while (stack.length) {\n        var node = stack.pop();\n        f(node);\n    }\n    return loopTrees;\n    function f(parent) {\n        if (Math.abs(parent.windingNum) <= 1) {\n            loopTrees.push(parent);\n        }\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n            for (var _iterator6 = parent.children[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                var child = _step6.value;\n\n                stack.push(child);\n            }\n        } catch (err) {\n            _didIteratorError6 = true;\n            _iteratorError6 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                    _iterator6.return();\n                }\n            } finally {\n                if (_didIteratorError6) {\n                    throw _iteratorError6;\n                }\n            }\n        }\n    }\n}\n/**\r\n *\r\n * @param loopA\r\n * @param loopB\r\n */\nfunction ascendingByTopmostPoint(loopA, loopB) {\n    var boundsA = get_loop_bounds_1.getLoopBounds(loopA);\n    var boundsB = get_loop_bounds_1.getLoopBounds(loopB);\n    var a = boundsA.minY.p[1];\n    var b = boundsB.minY.p[1];\n    return a - b;\n}\n\n},{\"../../../loop\":84,\"../get-loop-bounds\":140,\"./complete-path\":149,\"./get-intersections\":151,\"./get-tightest-containing-loop\":154}],158:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Parse a number from an SVG path. This very closely follows genericParseNumber(...) from\n// Source/core/svg/SVGParserUtilities.cpp.\n// Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\nfunction parseNumber(source) {\n    var exponent = 0;\n    var integer = 0;\n    var frac = 1;\n    var decimal = 0;\n    var sign = 1;\n    var expsign = 1;\n    var startIndex = source._currentIndex;\n    source._skipOptionalSpaces();\n    // Read the sign.\n    if (source._currentIndex < source._endIndex && source._string[source._currentIndex] === \"+\") {\n        source._currentIndex += 1;\n    } else if (source._currentIndex < source._endIndex && source._string[source._currentIndex] === \"-\") {\n        source._currentIndex += 1;\n        sign = -1;\n    }\n    if (source._currentIndex === source._endIndex || (source._string[source._currentIndex] < \"0\" || source._string[source._currentIndex] > \"9\") && source._string[source._currentIndex] !== \".\") {\n        // The first character of a number must be one of [0-9+-.].\n        return null;\n    }\n    // Read the integer part, build right-to-left.\n    var startIntPartIndex = source._currentIndex;\n    while (source._currentIndex < source._endIndex && source._string[source._currentIndex] >= \"0\" && source._string[source._currentIndex] <= \"9\") {\n        source._currentIndex += 1; // Advance to first non-digit.\n    }\n    if (source._currentIndex !== startIntPartIndex) {\n        var scanIntPartIndex = source._currentIndex - 1;\n        var multiplier = 1;\n        while (scanIntPartIndex >= startIntPartIndex) {\n            integer += multiplier * (Number(source._string[scanIntPartIndex]) - 0);\n            scanIntPartIndex -= 1;\n            multiplier *= 10;\n        }\n    }\n    // Read the decimals.\n    if (source._currentIndex < source._endIndex && source._string[source._currentIndex] === \".\") {\n        source._currentIndex += 1;\n        // There must be a least one digit following the .\n        if (source._currentIndex >= source._endIndex || source._string[source._currentIndex] < \"0\" || source._string[source._currentIndex] > \"9\") {\n            return null;\n        }\n        while (source._currentIndex < source._endIndex && source._string[source._currentIndex] >= \"0\" && source._string[source._currentIndex] <= \"9\") {\n            frac *= 10;\n            decimal += Number(source._string.charAt(source._currentIndex)) / frac;\n            source._currentIndex += 1;\n        }\n    }\n    // Read the exponent part.\n    if (source._currentIndex !== startIndex && source._currentIndex + 1 < source._endIndex && (source._string[source._currentIndex] === \"e\" || source._string[source._currentIndex] === \"E\") && source._string[source._currentIndex + 1] !== \"x\" && source._string[source._currentIndex + 1] !== \"m\") {\n        source._currentIndex += 1;\n        // Read the sign of the exponent.\n        if (source._string[source._currentIndex] === \"+\") {\n            source._currentIndex += 1;\n        } else if (source._string[source._currentIndex] === \"-\") {\n            source._currentIndex += 1;\n            expsign = -1;\n        }\n        // There must be an exponent.\n        if (source._currentIndex >= source._endIndex || source._string[source._currentIndex] < \"0\" || source._string[source._currentIndex] > \"9\") {\n            return null;\n        }\n        while (source._currentIndex < source._endIndex && source._string[source._currentIndex] >= \"0\" && source._string[source._currentIndex] <= \"9\") {\n            exponent *= 10;\n            exponent += Number(source._string[source._currentIndex]);\n            source._currentIndex += 1;\n        }\n    }\n    var number = integer + decimal;\n    number *= sign;\n    if (exponent) {\n        number *= Math.pow(10, expsign * exponent);\n    }\n    if (startIndex === source._currentIndex) {\n        return null;\n    }\n    source._skipOptionalSpacesOrDelimiter();\n    return number;\n}\nexports.parseNumber = parseNumber;\n\n},{}],159:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar source_1 = _dereq_(\"./source\");\nfunction parsePathDataString(string) {\n    if (!string.length) return [];\n    var source = new source_1.Source(string);\n    var pathData = [];\n    if (!source.initialCommandIsMoveTo()) {\n        return [];\n    }\n    while (source.hasMoreData()) {\n        var pathSeg = source.parseSegment();\n        if (pathSeg === null) {\n            break;\n        } else {\n            pathData.push(pathSeg);\n        }\n    }\n    return pathData;\n}\nexports.parsePathDataString = parsePathDataString;\n\n},{\"./source\":160}],160:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parse_number_1 = _dereq_(\"./parse-number\");\nvar COMMAND_MAP = {\n    \"Z\": \"Z\", \"M\": \"M\", \"L\": \"L\", \"C\": \"C\", \"Q\": \"Q\", \"A\": \"A\", \"H\": \"H\", \"V\": \"V\", \"S\": \"S\", \"T\": \"T\",\n    \"z\": \"Z\", \"m\": \"m\", \"l\": \"l\", \"c\": \"c\", \"q\": \"q\", \"a\": \"a\", \"h\": \"h\", \"v\": \"v\", \"s\": \"s\", \"t\": \"t\"\n};\n\nvar Source = function () {\n    function Source(string) {\n        _classCallCheck(this, Source);\n\n        this._string = string;\n        this._currentIndex = 0;\n        this._endIndex = this._string.length;\n        this._prevCommand = null;\n        this._skipOptionalSpaces();\n    }\n\n    _createClass(Source, [{\n        key: \"parseSegment\",\n        value: function parseSegment() {\n            var char = this._string[this._currentIndex];\n            var command = COMMAND_MAP[char] ? COMMAND_MAP[char] : null;\n            if (command === null) {\n                // Possibly an implicit command. Not allowed if this is the first command.\n                if (this._prevCommand === null) {\n                    return null;\n                }\n                // Check for remaining coordinates in the current command.\n                if ((char === \"+\" || char === \"-\" || char === \".\" || char >= \"0\" && char <= \"9\") && this._prevCommand !== \"Z\") {\n                    if (this._prevCommand === \"M\") {\n                        command = \"L\";\n                    } else if (this._prevCommand === \"m\") {\n                        command = \"l\";\n                    } else {\n                        command = this._prevCommand;\n                    }\n                } else {\n                    command = null;\n                }\n                if (command === null) {\n                    return null;\n                }\n            } else {\n                this._currentIndex += 1;\n            }\n            this._prevCommand = command;\n            var values = null;\n            var cmd = command.toUpperCase();\n            if (cmd === \"H\" || cmd === \"V\") {\n                values = [parse_number_1.parseNumber(this)];\n            } else if (cmd === \"M\" || cmd === \"L\" || cmd === \"T\") {\n                values = [parse_number_1.parseNumber(this), parse_number_1.parseNumber(this)];\n            } else if (cmd === \"S\" || cmd === \"Q\") {\n                values = [parse_number_1.parseNumber(this), parse_number_1.parseNumber(this), parse_number_1.parseNumber(this), parse_number_1.parseNumber(this)];\n            } else if (cmd === \"C\") {\n                values = [parse_number_1.parseNumber(this), parse_number_1.parseNumber(this), parse_number_1.parseNumber(this), parse_number_1.parseNumber(this), parse_number_1.parseNumber(this), parse_number_1.parseNumber(this)];\n            } else if (cmd === \"A\") {\n                values = [parse_number_1.parseNumber(this), parse_number_1.parseNumber(this), parse_number_1.parseNumber(this), this._parseArcFlag(), this._parseArcFlag(), parse_number_1.parseNumber(this), parse_number_1.parseNumber(this)];\n            } else if (cmd === \"Z\") {\n                this._skipOptionalSpaces();\n                values = [];\n            }\n            if (values === null || values.indexOf(null) >= 0) {\n                // Unknown command or known command with invalid values\n                return null;\n            } else {\n                return { type: command, values: values };\n            }\n        }\n    }, {\n        key: \"hasMoreData\",\n        value: function hasMoreData() {\n            return this._currentIndex < this._endIndex;\n        }\n    }, {\n        key: \"peekSegmentType\",\n        value: function peekSegmentType() {\n            var char = this._string[this._currentIndex];\n            return COMMAND_MAP[char] ? COMMAND_MAP[char] : null;\n        }\n    }, {\n        key: \"initialCommandIsMoveTo\",\n        value: function initialCommandIsMoveTo() {\n            // If the path is empty it is still valid, so return true.\n            if (!this.hasMoreData()) {\n                return true;\n            }\n            var command = this.peekSegmentType();\n            // Path must start with moveTo.\n            return command === \"M\" || command === \"m\";\n        }\n    }, {\n        key: \"_isCurrentSpace\",\n        value: function _isCurrentSpace() {\n            var char = this._string[this._currentIndex];\n            return char <= \" \" && (char === \" \" || char === \"\\n\" || char === \"\\t\" || char === \"\\r\" || char === \"\\f\");\n        }\n    }, {\n        key: \"_skipOptionalSpaces\",\n        value: function _skipOptionalSpaces() {\n            while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {\n                this._currentIndex += 1;\n            }\n            return this._currentIndex < this._endIndex;\n        }\n    }, {\n        key: \"_skipOptionalSpacesOrDelimiter\",\n        value: function _skipOptionalSpacesOrDelimiter() {\n            if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string[this._currentIndex] !== \",\") {\n                return false;\n            }\n            if (this._skipOptionalSpaces()) {\n                if (this._currentIndex < this._endIndex && this._string[this._currentIndex] === \",\") {\n                    this._currentIndex += 1;\n                    this._skipOptionalSpaces();\n                }\n            }\n            return this._currentIndex < this._endIndex;\n        }\n    }, {\n        key: \"_parseArcFlag\",\n        value: function _parseArcFlag() {\n            if (this._currentIndex >= this._endIndex) {\n                return null;\n            }\n            var flag = null;\n            var flagChar = this._string[this._currentIndex];\n            this._currentIndex += 1;\n            if (flagChar === \"0\") {\n                flag = 0;\n            } else if (flagChar === \"1\") {\n                flag = 1;\n            } else {\n                return null;\n            }\n            this._skipOptionalSpacesOrDelimiter();\n            return flag;\n        }\n    }]);\n\n    return Source;\n}();\n\nexports.Source = Source;\n\n},{\"./parse-number\":158}],161:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\r\n * A and a: (from www.w3.org)\r\n *\r\n * params: rx ry x-axis-rotation large-arc-flag sweep-flag x y\r\n *\r\n * Draws an elliptical arc from the current point to (x, y). The size and\r\n * orientation of the ellipse are defined by two radii (rx, ry) and an\r\n * x-axis-rotation, which indicates how the ellipse as a whole is rotated\r\n * relative to the current coordinate system. The center (cx, cy) of the ellipse\r\n * is calculated automatically to satisfy the constraints imposed by the other\r\n * parameters. large-arc-flag and sweep-flag contribute to the automatic\r\n * calculations and help determine how the arc is drawn.\r\n */\nfunction a(s) {\n  // TODO - not implemented yet (or not necessary)\n  s.prev2ndCubicControlPoint = undefined;\n  s.prev2ndQuadraticControlPoint = undefined;\n  // Update current point\n  //x0 = ? ps[3][0]; \n  //y0 = ? ps[3][1];\n  return undefined;\n}\nexports.a = a;\n\n},{}],162:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * C and c: (from www.w3.org)\r\n *\r\n * params: x1 y1 x2 y2 x y\r\n *\r\n * Draws a cubic Bézier curve from the current point to (x,y)\r\n * using (x1,y1) as the control point at the beginning of the\r\n * curve and (x2,y2) as the control point at the end of the\r\n * curve. C (uppercase) indicates that absolute coordinates\r\n * will follow; c (lowercase) indicates that relative\r\n * coordinates will follow. Multiple sets of coordinates may\r\n * be specified to draw a polybézier. At the end of the\r\n * command, the new current point becomes the final (x,y)\r\n * coordinate pair used in the polybézier.\r\n */\nfunction c(s) {\n    var ps = [s.p, [s.vals[0], s.vals[1]], [s.vals[2], s.vals[3]], [s.vals[4], s.vals[5]]];\n    s.prev2ndCubicControlPoint = ps[2];\n    s.prev2ndQuadraticControlPoint = undefined;\n    return ps;\n}\nexports.c = c;\n\n},{}],163:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * H and h: (from www.w3.org)\r\n *\r\n * params: x\r\n *\r\n * Draws a horizontal line from the current point (cpx, cpy) to (x, cpy). H\r\n * (uppercase) indicates that absolute coordinates will follow; h (lowercase)\r\n * indicates that relative coordinates will follow. Multiple x values can be\r\n * provided (although usually this doesn't make sense). At the end of the\r\n * command, the new current point becomes (x, cpy) for the final value of x.\r\n */\nfunction h(s) {\n    var xInterval = (s.vals[0] - s.p[0]) / 3;\n    var ps = [s.p, [s.p[0] + xInterval * 1, s.p[1]], [s.p[0] + xInterval * 2, s.p[1]], [s.p[0] + xInterval * 3, s.p[1]]];\n    s.prev2ndCubicControlPoint = undefined;\n    s.prev2ndQuadraticControlPoint = undefined;\n    return ps;\n}\nexports.h = h;\n\n},{}],164:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * L and l: (from www.w3.org)\r\n *\r\n * params: x y\r\n *\r\n * Draw a line from the current point to the given (x,y) coordinate which\r\n * becomes the new current point. L (uppercase) indicates that absolute\r\n * coordinates will follow; l (lowercase) indicates that relative coordinates\r\n * will follow. A number of coordinates pairs may be specified to draw a\r\n * polyline. At the end of the command, the new current point is set to the\r\n * final set of coordinates provided.\r\n */\nfunction l(s) {\n    var xInterval = (s.vals[0] - s.p[0]) / 3;\n    var yInterval = (s.vals[1] - s.p[1]) / 3;\n    var ps = [s.p, [s.p[0] + xInterval * 1, s.p[1] + yInterval * 1], [s.p[0] + xInterval * 2, s.p[1] + yInterval * 2], [s.p[0] + xInterval * 3, s.p[1] + yInterval * 3]];\n    s.prev2ndCubicControlPoint = undefined;\n    s.prev2ndQuadraticControlPoint = undefined;\n    return ps;\n}\nexports.l = l;\n\n},{}],165:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * Q and q: (from www.w3.org)\r\n *\r\n * params: x1 y1 x y\r\n *\r\n * Draws a quadratic Bézier curve from the current point to (x,y) using (x1,y1)\r\n * as the control point. Q (uppercase) indicates that absolute coordinates will\r\n * follow; q (lowercase) indicates that relative coordinates will follow.\r\n * Multiple sets of coordinates may be specified to draw a polybézier. At the\r\n * end of the command, the new current point becomes the final (x,y) coordinate\r\n * pair used in the polybézier.\r\n */\nfunction q(s) {\n    //---------------------------------------------------\n    // Convert quadratic to cubic\n    // see https://stackoverflow.com/questions/3162645/convert-a-quadratic-bezier-to-a-cubic/3162732#3162732\n    //---------------------------------------------------\n    var QP0 = s.p;\n    var QP1 = [s.vals[0], s.vals[1]];\n    var QP2 = [s.vals[2], s.vals[3]];\n    // Endpoints stay the same\n    var CP0 = QP0;\n    var CP3 = QP2;\n    // CP1 = QP0 + 2/3 *(QP1-QP0)\n    var CP1 = [QP0[0] + 2 / 3 * (QP1[0] - QP0[0]), QP0[1] + 2 / 3 * (QP1[1] - QP0[1])];\n    // CP2 = QP2 + 2/3 *(QP1-QP2)\n    var CP2 = [QP2[0] + 2 / 3 * (QP1[0] - QP2[0]), QP2[1] + 2 / 3 * (QP1[1] - QP2[1])];\n    var ps = [CP0, CP1, CP2, CP3];\n    s.prev2ndCubicControlPoint = undefined;\n    s.prev2ndQuadraticControlPoint = QP1;\n    return ps;\n}\nexports.q = q;\n\n},{}],166:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * S and s: (from www.w3.org)\r\n *\r\n * params: x2 y2 x y\r\n *\r\n * Draws a cubic Bézier curve from the current point to (x,y). The first control\r\n * point is assumed to be the reflection of the second control point on the\r\n * previous command relative to the current point. (If there is no previous\r\n * command or if the previous command was not an C, c, S or s, assume the first\r\n * control point is coincident with the current point.) (x2,y2) is the second\r\n * control point (i.e., the control point at the end of the curve). S\r\n * (uppercase) indicates that absolute coordinates will follow; s (lowercase)\r\n * indicates that relative coordinates will follow. Multiple sets of coordinates\r\n * may be specified to draw a polybézier. At the end of the command, the new\r\n * current point becomes the final (x,y) coordinate pair used in the polybézier.\r\n */\nfunction s(s) {\n    var p = [undefined, undefined];\n    if (s.prev2ndCubicControlPoint) {\n        p[0] = s.p[0] - s.prev2ndCubicControlPoint[0] + s.p[0];\n        p[1] = s.p[1] - s.prev2ndCubicControlPoint[1] + s.p[1];\n    } else {\n        p = s.p;\n    }\n    var ps = [s.p, p, [s.vals[0], s.vals[1]], [s.vals[2], s.vals[3]]];\n    s.prev2ndCubicControlPoint = ps[2];\n    s.prev2ndQuadraticControlPoint = undefined;\n    return ps;\n}\nexports.s = s;\n\n},{}],167:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * T and t: (from www.w3.org)\r\n *\r\n * params: x y\r\n *\r\n * Draws a quadratic Bézier curve from the current point to (x,y). The control\r\n * point is assumed to be the reflection of the control point on the previous\r\n * command relative to the current point. (If there is no previous command or if\r\n * the previous command was not a Q, q, T or t, assume the control point is\r\n * coincident with the current point.) T (uppercase) indicates that absolute\r\n * coordinates will follow; t (lowercase) indicates that relative coordinates\r\n * will follow. At the end of the command, the new current point becomes the\r\n * final (x,y) coordinate pair used in the polybézier.\r\n */\nfunction t(s) {\n    var p = [undefined, undefined];\n    if (s.prev2ndQuadraticControlPoint) {\n        p[0] = s.p[0] - s.prev2ndQuadraticControlPoint[0] + s.p[0];\n        p[1] = s.p[1] - s.prev2ndQuadraticControlPoint[1] + s.p[1];\n    } else {\n        p = s.p;\n    }\n    //---------------------------------------------------\n    // Convert quadratic to cubic\n    // see https://stackoverflow.com/questions/3162645/convert-a-quadratic-bezier-to-a-cubic/3162732#3162732\n    //---------------------------------------------------\n    var QP0 = s.p;\n    var QP1 = p;\n    var QP2 = [s.vals[0], s.vals[1]];\n    // CP1 = QP0 + 2/3 *(QP1-QP0)\n    var CP1 = [QP0[0] + 2 / 3 * (QP1[0] - QP0[0]), QP0[1] + 2 / 3 * (QP1[1] - QP0[1])];\n    // CP2 = QP2 + 2/3 *(QP1-QP2)\n    var CP2 = [QP2[0] + 2 / 3 * (QP1[0] - QP2[0]), QP2[1] + 2 / 3 * (QP1[1] - QP2[1])];\n    var ps = [QP0, CP1, CP2, QP2];\n    s.prev2ndCubicControlPoint = undefined;\n    s.prev2ndQuadraticControlPoint = QP1;\n    return ps;\n}\nexports.t = t;\n\n},{}],168:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\r\n * V and v: (from www.w3.org)\r\n *\r\n * params: y\r\n *\r\n * Draws a vertical line from the current point (cpx, cpy) to (cpx, y). V\r\n * (uppercase) indicates that absolute coordinates will follow; v (lowercase)\r\n * indicates that relative coordinates will follow. Multiple y values can be\r\n * provided (although usually this doesn't make sense). At the end of the\r\n * command, the new current point becomes (cpx, y) for the final value of y.\r\n */\nfunction v(s) {\n    var yInterval = (s.vals[0] - s.p[1]) / 3;\n    var ps = [s.p, [s.p[0], s.p[1] + yInterval * 1], [s.p[0], s.p[1] + yInterval * 2], [s.p[0], s.p[1] + yInterval * 3]];\n    s.prev2ndCubicControlPoint = undefined;\n    s.prev2ndQuadraticControlPoint = undefined;\n    return ps;\n}\nexports.v = v;\n\n},{}],169:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * Z and z: (from www.w3.org)\r\n *\r\n * params: (none)\r\n *\r\n * Close the current subpath by drawing a straight line from the current point\r\n * to current subpath's initial point. Since the Z and z commands take no\r\n * parameters, they have an identical effect.\r\n */\nfunction z(s) {\n    var xInterval = (s.initialPoint[0] - s.p[0]) / 3;\n    var yInterval = (s.initialPoint[1] - s.p[1]) / 3;\n    var ps = [s.p, [s.p[0] + xInterval, s.p[1] + yInterval], [s.p[0] + xInterval * 2, s.p[1] + yInterval * 2], [s.p[0] + xInterval * 3, s.p[1] + yInterval * 3]];\n    s.prev2ndCubicControlPoint = undefined;\n    s.prev2ndQuadraticControlPoint = undefined;\n    return ps;\n}\nexports.z = z;\n\n},{}],170:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar PathState = function PathState() {\n    _classCallCheck(this, PathState);\n\n    this.initialPoint = undefined;\n    // Used in conjunction with \"S\" and \"s\"\n    this.prev2ndCubicControlPoint = undefined;\n    this.prev2ndQuadraticControlPoint = undefined;\n    this.p = [0, 0];\n};\n\nexports.PathState = PathState;\n\n},{}],171:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar get_min_y_pos_1 = _dereq_(\"./fs/get-min-y-pos\");\nexports.getMinYPos = get_min_y_pos_1.getMinYPos;\nvar get_paths_from_svg_path_elem_1 = _dereq_(\"./fs/get-paths-from-svg-path-elem\");\nexports.getPathsFromSvgPathElem = get_paths_from_svg_path_elem_1.getPathsFromSvgPathElem;\nvar get_paths_from_str_1 = _dereq_(\"./fs/get-paths-from-str\");\nexports.getPathsFromStr = get_paths_from_str_1.getPathsFromStr;\nvar get_loop_bounds_1 = _dereq_(\"./fs/get-loop-bounds\");\nexports.getLoopBounds = get_loop_bounds_1.getLoopBounds;\nvar is_path_positively_oriented_1 = _dereq_(\"./fs/is-path-positively-oriented\");\nexports.isPathPositivelyOrientated = is_path_positively_oriented_1.isPathPositivelyOrientated;\nvar get_curvature_at_interface_1 = _dereq_(\"./fs/get-curvature-at-interface\");\nexports.getCurvatureAtInterface = get_curvature_at_interface_1.getCurvatureAtInterface;\nvar simplify_paths_1 = _dereq_(\"./fs/simplify-paths/simplify-paths\");\nexports.simplifyPaths = simplify_paths_1.simplifyPaths;\nvar circle_to_cubic_beziers_1 = _dereq_(\"./fs/circle-to-cubic-beziers\");\nexports.circleToCubicBeziers = circle_to_cubic_beziers_1.circleToCubicBeziers;\nvar beziers_to_svg_path_str_1 = _dereq_(\"./fs/beziers-to-svg-path-str\");\nexports.beziersToSvgPathStr = beziers_to_svg_path_str_1.beziersToSvgPathStr;\nvar get_shape_bounds_1 = _dereq_(\"./fs/get-shape-bounds\");\nexports.getShapeBounds = get_shape_bounds_1.getShapeBounds;\nexports.getShapesBounds = get_shape_bounds_1.getShapesBounds;\n\n},{\"./fs/beziers-to-svg-path-str\":134,\"./fs/circle-to-cubic-beziers\":135,\"./fs/get-curvature-at-interface\":138,\"./fs/get-loop-bounds\":140,\"./fs/get-min-y-pos\":141,\"./fs/get-paths-from-str\":142,\"./fs/get-paths-from-svg-path-elem\":143,\"./fs/get-shape-bounds\":144,\"./fs/is-path-positively-oriented\":146,\"./fs/simplify-paths/simplify-paths\":157}],172:[function(_dereq_,module,exports){\n\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\r\n * Representation of one side of an intersection. The opposite side is at\r\n * X.opposite.\r\n */\n\nvar X = function X(\n/**\r\n * The PointOnShape on the curve of the intersection. This side of the\r\n * intersection is represented by the incoming part of this curve.\r\n */\npos) {\n  var isDummy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var\n  /** The opposite side of the intersection */\n  opposite = arguments[2];\n  var loopTree = arguments[3];\n  var\n  //public inPs?     : number[][],\n  outPs = arguments[4];\n\n  _classCallCheck(this, X);\n\n  this.pos = pos;\n  this.isDummy = isDummy;\n  this.opposite = opposite;\n  this.loopTree = loopTree;\n  this.outPs = outPs;\n};\n\nexports.X = X;\n\n},{}]},{},[1])(1)\n});"]}
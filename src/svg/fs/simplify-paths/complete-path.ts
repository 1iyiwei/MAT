
import { Curve } from '../../../curve';
import { Loop  } from '../../../loop';

import { IXInfo } from './i-x-info';
import { ILoopTree } from './i-loop-tree';

import { completeLoop   } from './complete-loop';
import { getInitialX    } from './get-initial-x';
import { getLoopMetrics } from './get-loop-metrics';


/**
 * 
 * @param intersections 
 * @param loopsTaken 
 * @param loop 
 * @param parent 
 */
function completePath(
        intersections : Map<Curve, IXInfo[]>,
        loopsTaken    : Set<Loop>,
        parent        : ILoopTree,
        loop          : Loop) {

    // Each loop generated by xInfos in xStack will give rise to one 
    // componentLoop.
    let xStack = [getInitialX(intersections, parent, loop)]; // Intersection stack        
    let takenXs: Set<IXInfo> = new Set(); // Taken intersections

    while (xStack.length) {
        let xInfo = xStack.pop();
        loopsTaken.add(xInfo.loop); 
        if (takenXs.has(xInfo)) { continue; }

        let iLoop = getLoopMetrics(xInfo);
        iLoop.beziers = completeLoop(
            intersections, takenXs, xStack, 
            iLoop, 
            xInfo
        );
        iLoop.loop = new Loop(iLoop.beziers);
    }
}


export { completePath }
